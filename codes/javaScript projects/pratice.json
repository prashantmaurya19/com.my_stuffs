{
    "editorOption": {
        "acceptSuggestionOnCommitCharacter": {
            "name": "acceptSuggestionOnCommitCharacter",
            "values": " boolean",
            "discription": "Accept suggestions on provider defined characters. Defaults to true."
        },
        "acceptSuggestionOnEnter": {
            "name": "acceptSuggestionOnEnter",
            "values": " on | off | smart",
            "discription": "Accept suggestions on ENTER. Defaults to 'on'."
        },
        "accessibilityPageSize": {
            "name": "accessibilityPageSize",
            "values": " number",
            "discription": "Controls the number of lines in the editor that can be read out by a screen reader"
        },
        "accessibilitySupport": {
            "name": "accessibilitySupport",
            "values": " on | off | auto",
            "discription": "Configure the editor's accessibility support. Defaults to 'auto'. It is best to leave this to 'auto'."
        },
        "ariaLabel": {
            "name": "ariaLabel",
            "values": " string",
            "discription": "The aria label for the editor's textarea (when it is focused)."
        },
        "autoClosingBrackets": {
            "name": "autoClosingBrackets",
            "values": " always | languageDefined  |  beforeWhitespace  |  never",
            "discription": "Options for auto closing brackets. Defaults to language defined behavior."
        },
        "autoClosingOvertype": {
            "name": "autoClosingOvertype",
            "values": " always |  auto  | never",
            "discription": "Options for typing over closing quotes or brackets."
        },
        "autoClosingQuotes": {
            "name": "autoClosingQuotes",
            "values": " always | languageDefined  |  beforeWhitespace  |  never",
            "discription": "Options for auto closing quotes. Defaults to language defined behavior."
        },
        "autoIndent": {
            "name": "autoIndent",
            "values": " none | advanced | full | brackets | keep",
            "discription": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines. Defaults to advanced."
        },
        "autoSurround": {
            "name": "autoSurround",
            "values": " languageDefined | quotes | brackets |  never",
            "discription": "Options for auto surrounding. Defaults to always allowing auto surrounding."
        },
        "automaticLayout": {
            "name": "automaticLayout",
            "values": " boolean",
            "discription": "Enable that the editor will install an interval to check if its container dom node size has changed. Enabling this might have a severe performance impact. Defaults to false."
        },
        "codeActionsOnSaveTimeout": {
            "name": "codeActionsOnSaveTimeout",
            "values": " number",
            "discription": "Timeout for running code actions on save."
        },
        "codeLens": {
            "name": "codeLens",
            "values": " boolean",
            "discription": "Show code lens Defaults to true."
        },
        "codeLensFontFamily": {
            "name": "codeLensFontFamily",
            "values": " string",
            "discription": "Code lens font family. Defaults to editor font family."
        },
        "codeLensFontSize": {
            "name": "codeLensFontSize",
            "values": " number",
            "discription": "Code lens font size. Default to 90% of the editor font size"
        },
        "colorDecorators": {
            "name": "colorDecorators",
            "values": " boolean",
            "discription": "Enable inline color decorators and color picker rendering."
        },
        "columnSelection": {
            "name": "columnSelection",
            "values": " boolean",
            "discription": "Enable that the selection with the mouse and keys is doing column selection. Defaults to false."
        },
        "comments": {
            "name": "comments",
            "values": " IEditorCommentsOptions",
            "discription": "Control the behaviour of comments in the editor."
        },
        "contextmenu": {
            "name": "contextmenu",
            "values": " boolean",
            "discription": "Enable custom contextmenu. Defaults to true."
        },
        "copyWithSyntaxHighlighting": {
            "name": "copyWithSyntaxHighlighting",
            "values": " boolean",
            "discription": "Syntax highlighting is copied."
        },
        "cursorBlinking": {
            "name": "cursorBlinking",
            "values": " blink | smooth | phase | expand | solid",
            "discription": "Control the cursor animation style, possible values are 'blink', 'smooth', 'phase', 'expand' and 'solid'. Defaults to 'blink'."
        },
        "cursorSmoothCaretAnimation": {
            "name": "cursorSmoothCaretAnimation",
            "values": " boolean",
            "discription": "Enable smooth caret animation. Defaults to false."
        },
        "cursorStyle": {
            "name": "cursorStyle",
            "values": " line | block | underline | line-thin | block-outline | underline-thin",
            "discription": "Control the cursor style, either 'block' or 'line'. Defaults to 'line'."
        },
        "cursorSurroundingLines": {
            "name": "cursorSurroundingLines",
            "values": " number",
            "discription": "Controls the minimal number of visible leading and trailing lines surrounding the cursor. Defaults to 0."
        },
        "cursorSurroundingLinesStyle": {
            "name": "cursorSurroundingLinesStyle",
            "values": " default | all",
            "discription": "Controls when cursorSurroundingLines should be enforced Defaults to default, cursorSurroundingLines is not enforced when cursor position is changed by mouse."
        },
        "cursorWidth": {
            "name": "cursorWidth",
            "values": " number",
            "discription": "Control the width of the cursor when cursorStyle is set to 'line'"
        },
        "definitionLinkOpensInPeek": {
            "name": "definitionLinkOpensInPeek",
            "values": " boolean",
            "discription": "Controls whether the definition link opens element in the peek widget. Defaults to false."
        },
        "disableLayerHinting": {
            "name": "disableLayerHinting",
            "values": " boolean",
            "discription": "Disable the use of transform: translate3d(0px, 0px, 0px) for the editor margin and lines layers. The usage of transform: translate3d(0px, 0px, 0px) acts as a hint for browsers to create an extra layer. Defaults to false."
        },
        "disableMonospaceOptimizations": {
            "name": "disableMonospaceOptimizations",
            "values": " boolean",
            "discription": "Disable the optimizations for monospace fonts. Defaults to false."
        },
        "dragAndDrop": {
            "name": "dragAndDrop",
            "values": " boolean",
            "discription": "Controls if the editor should allow to move selections via drag and drop. Defaults to false."
        },
        "emptySelectionClipboard": {
            "name": "emptySelectionClipboard",
            "values": " boolean",
            "discription": "Copying without a selection copies the current line."
        },
        "extraEditorClassName": {
            "name": "extraEditorClassName",
            "values": " string",
            "discription": "Class name to be added to the editor."
        },
        "fastScrollSensitivity": {
            "name": "fastScrollSensitivity",
            "values": " number",
            "discription": "FastScrolling mulitplier speed when pressing Alt Defaults to 5."
        },
        "find": {
            "name": "find",
            "values": " IEditorFindOptions",
            "discription": "Control the behavior of the find widget."
        },
        "fixedOverflowWidgets": {
            "name": "fixedOverflowWidgets",
            "values": " boolean",
            "discription": "Display overflow widgets as fixed. Defaults to false."
        },
        "folding": {
            "name": "folding",
            "values": " boolean",
            "discription": "Enable code folding. Defaults to true."
        },
        "foldingHighlight": {
            "name": "foldingHighlight",
            "values": " boolean",
            "discription": "Enable highlight for folded regions. Defaults to true."
        },
        "foldingStrategy": {
            "name": "foldingStrategy",
            "values": " auto | indentation",
            "discription": "Selects the folding strategy. 'auto' uses the strategies contributed for the current document, 'indentation' uses the indentation based folding strategy. Defaults to 'auto'."
        },
        "fontFamily": {
            "name": "fontFamily",
            "values": " string",
            "discription": "The font family"
        },
        "fontLigatures": {
            "name": "fontLigatures",
            "values": " string | boolean",
            "discription": "Enable font ligatures. Defaults to false."
        },
        "fontSize": {
            "name": "fontSize",
            "values": " number",
            "discription": "The font size"
        },
        "fontWeight": {
            "name": "fontWeight",
            "values": " string",
            "discription": "The font weight"
        },
        "formatOnPaste": {
            "name": "formatOnPaste",
            "values": " boolean",
            "discription": "Enable format on paste. Defaults to false."
        },
        "formatOnType": {
            "name": "formatOnType",
            "values": " boolean",
            "discription": "Enable format on type. Defaults to false."
        },
        "glyphMargin": {
            "name": "glyphMargin",
            "values": " boolean",
            "discription": "Enable the rendering of the glyph margin. Defaults to true in vscode and to false in monaco-editor."
        },
        "gotoLocation": {
            "name": "gotoLocation",
            "values": " IGotoLocationOptions",
            "discription": "Inherited from IEditorOptions.gotoLocation\n\nDefined in monaco.d.ts:2973"
        },
        "hideCursorInOverviewRuler": {
            "name": "hideCursorInOverviewRuler",
            "values": " boolean",
            "discription": "Should the cursor be hidden in the overview ruler. Defaults to false."
        },
        "highlightActiveIndentGuide": {
            "name": "highlightActiveIndentGuide",
            "values": " boolean",
            "discription": "Enable highlighting of the active indent guide. Defaults to true."
        },
        "hover": {
            "name": "hover",
            "values": " IEditorHoverOptions",
            "discription": "Configure the editor's hover."
        },
        "inDiffEditor": {
            "name": "inDiffEditor",
            "values": " boolean",
            "discription": "This editor is used inside a diff editor."
        },
        "inlineHints": {
            "name": "inlineHints",
            "values": " IEditorInlineHintsOptions",
            "discription": "Control the behavior and rendering of the inline hints."
        },
        "letterSpacing": {
            "name": "letterSpacing",
            "values": " number",
            "discription": "The letter spacing"
        },
        "lightbulb": {
            "name": "lightbulb",
            "values": " IEditorLightbulbOptions",
            "discription": "Control the behavior and rendering of the code action lightbulb."
        },
        "lineDecorationsWidth": {
            "name": "lineDecorationsWidth",
            "values": " string | number",
            "discription": "The width reserved for line decorations (in px). Line decorations are placed between line numbers and the editor content. You can pass in a string in the format floating point followed by \"ch\". e.g. 1.3ch. Defaults to 10."
        },
        "lineHeight": {
            "name": "lineHeight",
            "values": " number",
            "discription": "The line height"
        },
        "lineNumbers": {
            "name": "lineNumbers",
            "values": " on | off | relative | interval | ((lineNumber: number) => string)",
            "discription": "Control the rendering of line numbers. If it is a function, it will be invoked when rendering a line number and the return value will be rendered. Otherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function). Otherwise, line numbers will not be rendered. Defaults to on."
        },
        "lineNumbersMinChars": {
            "name": "lineNumbersMinChars",
            "values": " number",
            "discription": "Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits. Defaults to 5."
        },
        "linkedEditing": {
            "name": "linkedEditing",
            "values": " boolean",
            "discription": "Enable linked editing. Defaults to false."
        },
        "links": {
            "name": "links",
            "values": " boolean",
            "discription": "Enable detecting links and making them clickable. Defaults to true."
        },
        "matchBrackets": {
            "name": "matchBrackets",
            "values": " always | never | near",
            "discription": "Enable highlighting of matching brackets. Defaults to 'always'."
        },
        "minimap": {
            "name": "minimap",
            "values": " IEditorMinimapOptions",
            "discription": "Control the behavior and rendering of the minimap."
        },
        "mouseStyle": {
            "name": "mouseStyle",
            "values": " default | text | copy",
            "discription": "Control the mouse pointer style, either 'text' or 'default' or 'copy' Defaults to 'text'"
        },
        "mouseWheelScrollSensitivity": {
            "name": "mouseWheelScrollSensitivity",
            "values": " number",
            "discription": "A multiplier to be used on the deltaX and deltaY of mouse wheel scroll events. Defaults to 1."
        },
        "mouseWheelZoom": {
            "name": "mouseWheelZoom",
            "values": " boolean",
            "discription": "Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl. Defaults to false."
        },
        "multiCursorMergeOverlapping": {
            "name": "multiCursorMergeOverlapping",
            "values": " boolean",
            "discription": "Merge overlapping selections. Defaults to true"
        },
        "multiCursorModifier": {
            "name": "multiCursorModifier",
            "values": " ctrlCmd | alt",
            "discription": "The modifier to be used to add multiple cursors with the mouse. Defaults to 'alt'"
        },
        "multiCursorPaste": {
            "name": "multiCursorPaste",
            "values": " spread | full",
            "discription": "Configure the behaviour when pasting a text with the line count equal to the cursor count. Defaults to 'spread'."
        },
        "occurrencesHighlight": {
            "name": "occurrencesHighlight",
            "values": " boolean",
            "discription": "Enable semantic occurrences highlight. Defaults to true."
        },
        "overviewRulerBorder": {
            "name": "overviewRulerBorder",
            "values": " boolean",
            "discription": "Controls if a border should be drawn around the overview ruler. Defaults to true."
        },
        "overviewRulerLanes": {
            "name": "overviewRulerLanes",
            "values": " number",
            "discription": "The number of vertical lanes the overview ruler should render. Defaults to 3."
        },
        "padding": {
            "name": "padding",
            "values": " IEditorPaddingOptions",
            "discription": "Controls the spacing around the editor."
        },
        "parameterHints": {
            "name": "parameterHints",
            "values": " IEditorParameterHintOptions",
            "discription": "Parameter hint options."
        },
        "peekWidgetDefaultFocus": {
            "name": "peekWidgetDefaultFocus",
            "values": " tree | editor",
            "discription": "Controls whether to focus the inline editor in the peek widget by default. Defaults to false."
        },
        "quickSuggestions": {
            "name": "quickSuggestions",
            "values": " boolean | IQuickSuggestionsOptions",
            "discription": "Enable quick suggestions (shadow suggestions) Defaults to true."
        },
        "quickSuggestionsDelay": {
            "name": "quickSuggestionsDelay",
            "values": " number",
            "discription": "Quick suggestions show delay (in ms) Defaults to 10 (ms)"
        },
        "readOnly": {
            "name": "readOnly",
            "values": " boolean",
            "discription": "Should the editor be read only. Defaults to false."
        },
        "renameOnType": {
            "name": "renameOnType",
            "values": " boolean",
            "discription": "deprecated, use linkedEditing instead"
        },
        "renderControlCharacters": {
            "name": "renderControlCharacters",
            "values": " boolean",
            "discription": "Enable rendering of control characters. Defaults to false."
        },
        "renderFinalNewline": {
            "name": "renderFinalNewline",
            "values": " boolean",
            "discription": "Render last line number when the file ends with a newline. Defaults to true."
        },
        "renderIndentGuides": {
            "name": "renderIndentGuides",
            "values": " boolean",
            "discription": "Enable rendering of indent guides. Defaults to true."
        },
        "renderLineHighlight": {
            "name": "renderLineHighlight",
            "values": " all | line | none | gutter",
            "discription": "Enable rendering of current line highlight. Defaults to all."
        },
        "renderLineHighlightOnlyWhenFocus": {
            "name": "renderLineHighlightOnlyWhenFocus",
            "values": " boolean",
            "discription": "Control if the current line highlight should be rendered only the editor is focused. Defaults to false."
        },
        "renderValidationDecorations": {
            "name": "renderValidationDecorations",
            "values": " on | off | editable",
            "discription": "Should the editor render validation decorations. Defaults to editable."
        },
        "renderWhitespace": {
            "name": "renderWhitespace",
            "values": " all | none | boundary | selection | trailing",
            "discription": "Enable rendering of whitespace. Defaults to none."
        },
        "revealHorizontalRightPadding": {
            "name": "revealHorizontalRightPadding",
            "values": " number",
            "discription": "When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle. This virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport. Defaults to 30 (px)."
        },
        "roundedSelection": {
            "name": "roundedSelection",
            "values": " boolean",
            "discription": "Render the editor selection with rounded borders. Defaults to true."
        },
        "rulers": {
            "name": "rulers",
            "values": " (number | IRulerOption)[]",
            "discription": "Render vertical lines at the specified columns. Defaults to empty array."
        },
        "scrollBeyondLastColumn": {
            "name": "scrollBeyondLastColumn",
            "values": " number",
            "discription": "Enable that scrolling can go beyond the last column by a number of columns. Defaults to 5."
        },
        "scrollBeyondLastLine": {
            "name": "scrollBeyondLastLine",
            "values": " boolean",
            "discription": "Enable that scrolling can go one screen size after the last line. Defaults to true."
        },
        "scrollPredominantAxis": {
            "name": "scrollPredominantAxis",
            "values": " boolean",
            "discription": "Enable that the editor scrolls only the predominant axis. Prevents horizontal drift when scrolling vertically on a trackpad. Defaults to true."
        },
        "scrollbar": {
            "name": "scrollbar",
            "values": " IEditorScrollbarOptions",
            "discription": "Control the behavior and rendering of the scrollbars."
        },
        "selectOnLineNumbers": {
            "name": "selectOnLineNumbers",
            "values": " boolean",
            "discription": "Should the corresponding line be selected when clicking on the line number? Defaults to true."
        },
        "selectionClipboard": {
            "name": "selectionClipboard",
            "values": " boolean",
            "discription": "Enable Linux primary clipboard. Defaults to true."
        },
        "selectionHighlight": {
            "name": "selectionHighlight",
            "values": " boolean",
            "discription": "Enable selection highlight. Defaults to true."
        },
        "showDeprecated": {
            "name": "showDeprecated",
            "values": " boolean",
            "discription": "Controls strikethrough deprecated variables."
        },
        "showFoldingControls": {
            "name": "showFoldingControls",
            "values": " always | mouseover",
            "discription": "Controls whether the fold actions in the gutter stay always visible or hide unless the mouse is over the gutter. Defaults to 'mouseover'."
        },
        "showUnused": {
            "name": "showUnused",
            "values": " boolean",
            "discription": "Controls fading out of unused variables."
        },
        "smartSelect": {
            "name": "smartSelect",
            "values": " ISmartSelectOptions",
            "discription": "Smart select opptions;"
        },
        "smoothScrolling": {
            "name": "smoothScrolling",
            "values": " boolean",
            "discription": "Enable that the editor animates scrolling to a position. Defaults to false."
        },
        "snippetSuggestions": {
            "name": "snippetSuggestions",
            "values": " none | top | bottom | inline",
            "discription": "Enable snippet suggestions. Default to 'true'."
        },
        "stickyTabStops": {
            "name": "stickyTabStops",
            "values": " boolean",
            "discription": "Emulate selection behaviour of tab characters when using spaces for indentation. This means selection will stick to tab stops."
        },
        "stopRenderingLineAfter": {
            "name": "stopRenderingLineAfter",
            "values": " number",
            "discription": "Performance guard: Stop rendering a line after x characters. Defaults to 10000. Use -1 to never stop rendering"
        },
        "suggest": {
            "name": "suggest",
            "values": " ISuggestOptions",
            "discription": "Suggest options."
        },
        "suggestFontSize": {
            "name": "suggestFontSize",
            "values": " number",
            "discription": "The font size for the suggest widget. Defaults to the editor font size."
        },
        "suggestLineHeight": {
            "name": "suggestLineHeight",
            "values": " number",
            "discription": "The line height for the suggest widget. Defaults to the editor line height."
        },
        "suggestOnTriggerCharacters": {
            "name": "suggestOnTriggerCharacters",
            "values": " boolean",
            "discription": "Enable the suggestion box to pop-up on trigger characters. Defaults to true."
        },
        "suggestSelection": {
            "name": "suggestSelection",
            "values": " first | recentlyUsed | recentlyUsedByPrefix",
            "discription": "The history mode for suggestions."
        },
        "tabCompletion": {
            "name": "tabCompletion",
            "values": " on | off | onlySnippets",
            "discription": "Enable tab completion."
        },
        "tabIndex": {
            "name": "tabIndex",
            "values": " number",
            "discription": "The tabindex property of the editor's textarea"
        },
        "unfoldOnClickAfterEndOfLine": {
            "name": "unfoldOnClickAfterEndOfLine",
            "values": " boolean",
            "discription": "Controls whether clicking on the empty content after a folded line will unfold the line. Defaults to false."
        },
        "unusualLineTerminators": {
            "name": "unusualLineTerminators",
            "values": " off | auto | prompt",
            "discription": "Remove unusual line terminators like LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS). Defaults to 'prompt'."
        },
        "useTabStops": {
            "name": "useTabStops",
            "values": " boolean",
            "discription": "Inserting and deleting whitespace follows tab stops."
        },
        "wordSeparators": {
            "name": "wordSeparators",
            "values": " string",
            "discription": "A string containing the word separators used when doing word navigation. Defaults to `~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?"
        },
        "wordWrap": {
            "name": "wordWrap",
            "values": " on | off | wordWrapColumn | bounded",
            "discription": "Control the wrapping of the editor. When wordWrap = \"off\", the lines will never wrap. When wordWrap = \"on\", the lines will wrap at the viewport width. When wordWrap = \"wordWrapColumn\", the lines will wrap at wordWrapColumn. When wordWrap = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn). Defaults to \"off\"."
        },
        "wordWrapBreakAfterCharacters": {
            "name": "wordWrapBreakAfterCharacters",
            "values": " string",
            "discription": "Configure word wrapping characters. A break will be introduced after these characters. Defaults to ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣'."
        },
        "wordWrapBreakBeforeCharacters": {
            "name": "wordWrapBreakBeforeCharacters",
            "values": " string",
            "discription": "Configure word wrapping characters. A break will be introduced before these characters. Defaults to '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋'."
        },
        "wordWrapColumn": {
            "name": "wordWrapColumn",
            "values": " number",
            "discription": "Control the wrapping of the editor. When wordWrap = \"off\", the lines will never wrap. When wordWrap = \"on\", the lines will wrap at the viewport width. When wordWrap = \"wordWrapColumn\", the lines will wrap at wordWrapColumn. When wordWrap = \"bounded\", the lines will wrap at min(viewport width, wordWrapColumn). Defaults to 80."
        },
        "wordWrapOverride1": {
            "name": "wordWrapOverride1",
            "values": " on | off | inherit",
            "discription": "Override the wordWrap setting."
        },
        "wordWrapOverride2": {
            "name": "wordWrapOverride2",
            "values": " on | off | inherit",
            "discription": "Override the wordWrapOverride1 setting."
        },
        "wrappingIndent": {
            "name": "wrappingIndent",
            "values": " none | same | indent | deepIndent",
            "discription": "Control indentation of wrapped lines. Can be: 'none', 'same', 'indent' or 'deepIndent'. Defaults to 'same' in vscode and to 'none' in monaco-editor."
        },
        "wrappingStrategy": {
            "name": "wrappingStrategy",
            "values": " simple | advanced",
            "discription": "Controls the wrapping strategy to use. Defaults to 'simple'."
        }
    },
    "valueOption": {
        "IGotoLocationOptions": {
            "name": "IGotoLocationOptions",
            "alternativeDeclarationCommand": {
                "name": "alternativeDeclarationCommand",
                "values": " string"
            },
            "alternativeDefinitionCommand": {
                "name": "alternativeDefinitionCommand",
                "values": " string"
            },
            "alternativeImplementationCommand": {
                "name": "alternativeImplementationCommand",
                "values": " string"
            },
            "alternativeReferenceCommand": {
                "name": "alternativeReferenceCommand",
                "values": " string"
            },
            "alternativeTypeDefinitionCommand": {
                "name": "alternativeTypeDefinitionCommand",
                "values": " string"
            },
            "multiple": {
                "name": "multiple",
                "values": " GoToLocationValues"
            },
            "multipleDeclarations": {
                "name": "multipleDeclarations",
                "values": " GoToLocationValues"
            },
            "multipleDefinitions": {
                "name": "multipleDefinitions",
                "values": " GoToLocationValues"
            },
            "multipleImplementations": {
                "name": "multipleImplementations",
                "values": " GoToLocationValues"
            },
            "multipleReferences": {
                "name": "multipleReferences",
                "values": " GoToLocationValues"
            },
            "multipleTypeDefinitions": {
                "name": "multipleTypeDefinitions",
                "values": " GoToLocationValues"
            }
        },
        "IEditorHoverOptions": {
            "name": "IEditorHoverOptions",
            "delay": {
                "name": "delay",
                "values": " number"
            },
            "enabled": {
                "name": "enabled",
                "values": " boolean"
            },
            "sticky": {
                "name": "sticky",
                "values": " boolean"
            }
        },
        "IEditorMinimapOptions": {
            "name": "IEditorMinimapOptions",
            "enabled": {
                "name": "enabled",
                "values": " boolean"
            },
            "maxColumn": {
                "name": "maxColumn",
                "values": " number"
            },
            "renderCharacters": {
                "name": "renderCharacters",
                "values": " boolean"
            },
            "scale": {
                "name": "scale",
                "values": " number"
            },
            "showSlider": {
                "name": "showSlider",
                "values": " always | mouseover"
            },
            "side": {
                "name": "side",
                "values": " right | left"
            },
            "size": {
                "name": "size",
                "values": " proportional | fill | fit"
            }
        },
        "IEditorFindOptions": {
            "name": "IEditorFindOptions",
            "addExtraSpaceOnTop": {
                "name": "addExtraSpaceOnTop",
                "values": " boolean"
            },
            "autoFindInSelection": {
                "name": "autoFindInSelection",
                "values": " always | never | multiline"
            },
            "cursorMoveOnType": {
                "name": "cursorMoveOnType",
                "values": " boolean"
            },
            "loop": {
                "name": "loop",
                "values": " boolean"
            },
            "seedSearchStringFromSelection": {
                "name": "seedSearchStringFromSelection",
                "values": " boolean"
            }
        },
        "IDimension": {
            "name": "IDimension",
            "height": {
                "name": "height",
                "values": " number"
            },
            "width": {
                "name": "width",
                "values": " number"
            }
        },
        "IEditorLightbulbOptions": {
            "name": "IEditorLightbulbOptions",
            "enabled": {
                "name": "enabled",
                "values": " boolean"
            }
        },
        "IEditorCommentsOptions": {
            "name": "IEditorCommentsOptions",
            "ignoreEmptyLines": {
                "name": "ignoreEmptyLines",
                "values": " boolean"
            },
            "insertSpace": {
                "name": "insertSpace",
                "values": " boolean"
            }
        },
        "IEditorInlineHintsOptions": {
            "name": "IEditorInlineHintsOptions",
            "enabled": {
                "name": "enabled",
                "values": " boolean"
            },
            "fontFamily": {
                "name": "fontFamily",
                "values": " string"
            },
            "fontSize": {
                "name": "fontSize",
                "values": " number"
            }
        },
        "IEditorPaddingOptions": {
            "name": "IEditorPaddingOptions",
            "bottom": {
                "name": "bottom",
                "values": " number"
            },
            "top": {
                "name": "top",
                "values": " number"
            }
        },
        "IEditorParameterHintOptions": {
            "name": "IEditorParameterHintOptions",
            "cycle": {
                "name": "cycle",
                "values": " boolean"
            },
            "enabled": {
                "name": "enabled",
                "values": " boolean"
            }
        },
        "IQuickSuggestionsOptions": {
            "name": "IQuickSuggestionsOptions",
            "comments": {
                "name": "comments",
                "values": " boolean"
            },
            "other": {
                "name": "other",
                "values": " boolean"
            },
            "strings": {
                "name": "strings",
                "values": " boolean"
            }
        },
        "IEditorScrollbarOptions": {
            "name": "IEditorScrollbarOptions",
            "alwaysConsumeMouseWheel": {
                "name": "alwaysConsumeMouseWheel",
                "values": " boolean"
            },
            "arrowSize": {
                "name": "arrowSize",
                "values": " number"
            },
            "handleMouseWheel": {
                "name": "handleMouseWheel",
                "values": " boolean"
            },
            "horizontal": {
                "name": "horizontal",
                "values": " auto | visible | hidden"
            },
            "horizontalHasArrows": {
                "name": "horizontalHasArrows",
                "values": " boolean"
            },
            "horizontalScrollbarSize": {
                "name": "horizontalScrollbarSize",
                "values": " number"
            },
            "horizontalSliderSize": {
                "name": "horizontalSliderSize",
                "values": " number"
            },
            "scrollByPage": {
                "name": "scrollByPage",
                "values": " boolean"
            },
            "useShadows": {
                "name": "useShadows",
                "values": " boolean"
            },
            "vertical": {
                "name": "vertical",
                "values": " auto | visible | hidden"
            },
            "verticalHasArrows": {
                "name": "verticalHasArrows",
                "values": " boolean"
            },
            "verticalScrollbarSize": {
                "name": "verticalScrollbarSize",
                "values": " number"
            },
            "verticalSliderSize": {
                "name": "verticalSliderSize",
                "values": " number"
            }
        },
        "ISuggestOptions": {
            "name": "ISuggestOptions",
            "filterGraceful": {
                "name": "filterGraceful",
                "values": " boolean"
            },
            "insertMode": {
                "name": "insertMode",
                "values": " insert | replace"
            },
            "localityBonus": {
                "name": "localityBonus",
                "values": " boolean"
            },
            "shareSuggestSelections": {
                "name": "shareSuggestSelections",
                "values": " boolean"
            },
            "showClasses": {
                "name": "showClasses",
                "values": " boolean"
            },
            "showColors": {
                "name": "showColors",
                "values": " boolean"
            },
            "showConstants": {
                "name": "showConstants",
                "values": " boolean"
            },
            "showConstructors": {
                "name": "showConstructors",
                "values": " boolean"
            },
            "showEnumMembers": {
                "name": "showEnumMembers",
                "values": " boolean"
            },
            "showEnums": {
                "name": "showEnums",
                "values": " boolean"
            },
            "showEvents": {
                "name": "showEvents",
                "values": " boolean"
            },
            "showFields": {
                "name": "showFields",
                "values": " boolean"
            },
            "showFiles": {
                "name": "showFiles",
                "values": " boolean"
            },
            "showFolders": {
                "name": "showFolders",
                "values": " boolean"
            },
            "showFunctions": {
                "name": "showFunctions",
                "values": " boolean"
            },
            "showIcons": {
                "name": "showIcons",
                "values": " boolean"
            },
            "showInlineDetails": {
                "name": "showInlineDetails",
                "values": " boolean"
            },
            "showInterfaces": {
                "name": "showInterfaces",
                "values": " boolean"
            },
            "showIssues": {
                "name": "showIssues",
                "values": " boolean"
            },
            "showKeywords": {
                "name": "showKeywords",
                "values": " boolean"
            },
            "showMethods": {
                "name": "showMethods",
                "values": " boolean"
            },
            "showModules": {
                "name": "showModules",
                "values": " boolean"
            },
            "showOperators": {
                "name": "showOperators",
                "values": " boolean"
            },
            "showProperties": {
                "name": "showProperties",
                "values": " boolean"
            },
            "showReferences": {
                "name": "showReferences",
                "values": " boolean"
            },
            "showSnippets": {
                "name": "showSnippets",
                "values": " boolean"
            },
            "showStatusBar": {
                "name": "showStatusBar",
                "values": " boolean"
            },
            "showStructs": {
                "name": "showStructs",
                "values": " boolean"
            },
            "showTypeParameters": {
                "name": "showTypeParameters",
                "values": " boolean"
            },
            "showUnits": {
                "name": "showUnits",
                "values": " boolean"
            },
            "showUsers": {
                "name": "showUsers",
                "values": " boolean"
            },
            "showValues": {
                "name": "showValues",
                "values": " boolean"
            },
            "showVariables": {
                "name": "showVariables",
                "values": " boolean"
            },
            "showWords": {
                "name": "showWords",
                "values": " boolean"
            },
            "snippetsPreventQuickSuggestions": {
                "name": "snippetsPreventQuickSuggestions",
                "values": " boolean"
            }
        }
    }
}