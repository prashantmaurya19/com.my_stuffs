{"version":3,"file":"tf-backend-wasm.es2017.min.js","sources":["../src/kernels/types.ts","../src/kernels/_FusedMatMul.ts","../src/kernels/unary_kernel.ts","../src/kernels/Abs.ts","../src/kernels/binary_kernel.ts","../src/kernels/Add.ts","../src/kernels/AddN.ts","../src/kernels/Identity.ts","../src/kernels/Transpose.ts","../src/kernels/kernel_utils.ts","../src/kernels/All.ts","../src/kernels/Any.ts","../src/kernels/ArgMax.ts","../src/kernels/AvgPool.ts","../src/kernels/Reshape.ts","../src/kernels/BatchMatMul.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Slice.js","../src/kernels/Slice.ts","../src/kernels/BatchToSpaceND.ts","../src/kernels/Cast.ts","../src/kernels/Ceil.ts","../src/kernels/ClipByValue.ts","../src/kernels/Concat.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Concat_impl.js","../src/kernels/Conv2D.ts","../src/kernels/Conv2DBackpropInput.ts","../src/kernels/Cos.ts","../src/kernels/Cosh.ts","../src/kernels/CropAndResize.ts","../src/kernels/Cumprod.ts","../src/kernels/Cumsum.ts","../src/kernels/DepthToSpace.ts","../src/kernels/DepthwiseConv2dNative.ts","../src/kernels/Elu.ts","../src/kernels/Equal.ts","../src/kernels/Exp.ts","../src/kernels/ExpandDims.ts","../src/kernels/Fill.ts","../src/kernels/FlipLeftRight.ts","../src/kernels/Floor.ts","../src/kernels/FloorDiv.ts","../src/kernels/FusedBatchNorm.ts","../src/kernels/FusedConv2D.ts","../src/kernels/FusedDepthwiseConv2D.ts","../src/kernels/GatherNd.ts","../src/kernels/GatherV2.ts","../src/kernels/Greater.ts","../src/kernels/GreaterEqual.ts","../src/kernels/LeakyRelu.ts","../src/kernels/Less.ts","../src/kernels/LessEqual.ts","../src/kernels/Log.ts","../src/kernels/LogicalAnd.ts","../src/kernels/Max.ts","../src/kernels/Maximum.ts","../src/kernels/MaxPool.ts","../src/kernels/Mean.ts","../src/kernels/Min.ts","../src/kernels/Minimum.ts","../src/kernels/MirrorPad.ts","../src/kernels/Multiply.ts","../src/kernels/Neg.ts","../src/kernels/NonMaxSuppression_util.ts","../src/kernels/NonMaxSuppressionV3.ts","../src/kernels/NonMaxSuppressionV4.ts","../src/kernels/NonMaxSuppressionV5.ts","../src/kernels/NotEqual.ts","../src/kernels/OneHot.ts","../src/kernels/OnesLike.ts","../src/kernels/Pack.ts","../src/kernels/PadV2.ts","../src/kernels/Pow.ts","../src/kernels/Prelu.ts","../src/kernels/Prod.ts","../src/kernels/Range.ts","../node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Range_impl.js","../src/kernels/RealDiv.ts","../src/kernels/Relu.ts","../src/kernels/Relu6.ts","../src/kernels/ResizeBilinear.ts","../src/kernels/Reverse.ts","../src/kernels/RotateWithOffset.ts","../src/kernels/Round.ts","../src/kernels/Rsqrt.ts","../src/kernels/ScatterNd.ts","../src/kernels/Select.ts","../src/kernels/Sigmoid.ts","../src/kernels/Sin.ts","../src/kernels/Softmax.ts","../src/kernels/SpaceToBatchND.ts","../src/kernels/SparseFillEmptyRows.ts","../src/kernels/SparseReshape.ts","../src/kernels/SparseSegmentReduction.ts","../src/kernels/SparseSegmentMean.ts","../src/kernels/SparseSegmentSum.ts","../src/kernels/SplitV.ts","../src/kernels/Sqrt.ts","../src/kernels/Square.ts","../src/kernels/SquaredDifference.ts","../src/kernels/Step.ts","../src/kernels/StridedSlice.ts","../src/kernels/Sub.ts","../src/kernels/Sum.ts","../src/kernels/Tan.ts","../src/kernels/Tanh.ts","../src/kernels/Tile.ts","../src/kernels/TopK.ts","../src/kernels/Transform.ts","../src/kernels/Unpack.ts","../src/kernels/ZerosLike.ts","../src/register_all_kernels.ts","../src/flags_wasm.ts","../wasm-out/tfjs-backend-wasm-threaded-simd.js","../wasm-out/tfjs-backend-wasm.js","../src/backend_wasm.ts","../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js","../src/base.ts","../src/version.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// This enum must align with the enum defined in cc/backend.h.\nexport enum CppDType {\n  float32 = 0,\n  int32 = 1,\n  bool = 2,\n  string = 3,\n  complex64 = 4\n}\n\n// Must match enum in cc/fusable_activations.h.\nexport enum FusableActivation {\n  linear = 0,\n  relu = 1,\n  relu6 = 2,\n  prelu = 3,\n  leakyrelu = 4,\n  sigmoid = 5,\n  elu = 6\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {_FusedMatMul, _FusedMatMulAttrs, _FusedMatMulInputs, broadcast_util, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedMatMul:\n    (aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n     bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n     transposeB: boolean, activation: number, biasId: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedMatMul = backend.wasm.cwrap(_FusedMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number',  // activation\n    'number',  // biasId\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number'   // out_id\n  ]);\n}\n\nfunction fusedBatchMatMul(args: {\n  inputs: _FusedMatMulInputs,\n  backend: BackendWasm,\n  attrs: _FusedMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b, bias, preluActivationWeights} = inputs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `_FusedMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const {transposeA, transposeB, activation, leakyreluAlpha} = attrs;\n  const aId = backend.dataIdMap.get(a.dataId).id;\n  const bId = backend.dataIdMap.get(b.dataId).id;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `_FusedMatMul only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    biasId = biasData.id;\n  }\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const leftDim = transposeA ? a.shape[2] : a.shape[1];\n  const rightDim = transposeB ? b.shape[1] : b.shape[2];\n  const batchDims = broadcast_util.assertAndGetBroadcastShape(\n      a.shape.slice(0, -2), b.shape.slice(0, -2));\n\n  const out = backend.makeOutput([...batchDims, leftDim, rightDim], a.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n\n  wasmFusedMatMul(\n      aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n      transposeA, transposeB, fusedActivation, biasId, preluActivationWeightsId,\n      leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const _fusedMatMulConfig: KernelConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, KernelConfig, TensorInfo, UnaryInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createUnaryKernelConfig(\n    kernelName: string, outType?: DataType): KernelConfig {\n  let wasmFunc: (xId: number, dtype: number, outId: number) => void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // x_id\n      'number',  // dtype\n      'number',  // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: UnaryInputs}):\n      TensorInfo {\n    const {backend, inputs: {x}} = args;\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const out = backend.makeOutput(x.shape, outType || x.dtype);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(out.shape) === 0) {\n      return out;\n    }\n\n    wasmFunc(xId, CppDType[x.dtype], outId);\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Abs, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const absConfig: KernelConfig = createUnaryKernelConfig(Abs);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BinaryInputs, DataType, KernelConfig, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nexport function createBinaryKernelConfig(\n    kernelName: string, supportsFullBroadcast: boolean,\n    dtype?: DataType): KernelConfig {\n  let wasmFunc:\n      (aId: number, aShape: Uint8Array, aShapeLen: number, bId: number,\n       bShape: Uint8Array, bShapeLen: number, dtype: number, outId: number) =>\n          void;\n\n  function setupFunc(backend: BackendWasm): void {\n    wasmFunc = backend.wasm.cwrap(kernelName, null /* void */, [\n      'number',  // a_id,\n      'array',   // a_shape\n      'number',  // a_shape.length\n      'number',  // b_id\n      'array',   // b_shape\n      'number',  // b_shape.length\n      'number',  // dtype\n      'number'   // out_id\n    ]);\n  }\n\n  function kernelFunc(args: {backend: BackendWasm, inputs: BinaryInputs}):\n      TensorInfo {\n    const {backend, inputs} = args;\n    const {a, b} = inputs;\n    const aId = backend.dataIdMap.get(a.dataId).id;\n    const bId = backend.dataIdMap.get(b.dataId).id;\n\n    const outputType = dtype != null ? dtype : a.dtype;\n    const newShape = backend_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const out = backend.makeOutput(newShape, outputType);\n\n    // Short-circuit zero-sized tensors.\n    if (util.sizeFromShape(newShape) === 0) {\n      return out;\n    }\n\n    const aShapeBytes = new Uint8Array(new Int32Array(a.shape).buffer);\n    const bShapeBytes = new Uint8Array(new Int32Array(b.shape).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    const kernelFunc = () => wasmFunc(\n        aId, aShapeBytes, a.shape.length, bId, bShapeBytes, b.shape.length,\n        CppDType[a.dtype], outId);\n\n    kernelFunc();\n    return out;\n  }\n\n  return {kernelName, backendName: 'wasm', setupFunc, kernelFunc};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Add, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\n\nexport const addConfig: KernelConfig =\n    createBinaryKernelConfig(Add, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc:\n    (inputIds: Uint8Array, inputIdsLen: number, dtype: number, outId: number) =>\n        void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(AddN, null /* void */, [\n    'array',   // input_ids\n    'number',  // input_ids.length\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction addn(args: {inputs: TensorInfo[], backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const out = backend.makeOutput(inputs[0].shape, inputs[0].dtype);\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  const inputIds = inputs.map(x => backend.dataIdMap.get(x.dataId).id);\n  const inputIdsBytes = new Uint8Array(new Int32Array(inputIds).buffer);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmFunc(inputIdsBytes, inputIds.length, CppDType[out.dtype], outId);\n\n  return out;\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: addn as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Identity, IdentityInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function identity(args: {inputs: IdentityInputs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const identityConfig: KernelConfig = {\n  kernelName: Identity,\n  backendName: 'wasm',\n  kernelFunc: identity as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transpose, TransposeAttrs, TransposeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {CppDType} from './types';\n\nlet wasmTranspose: (\n    xId: number, xShape: Uint8Array, xShapeLength: number, dtype: CppDType,\n    outId: number, perm: Uint8Array, permLength: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTranspose = backend.wasm.cwrap(Transpose, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // dtype\n    'number',  // outId\n    'array',   // perm\n    'number',  // perm.length\n  ]);\n}\n\nexport function transpose(\n    args:\n        {inputs: TransposeInputs, backend: BackendWasm, attrs: TransposeAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  // Reduce any dimensions with size one. Lower-rank transpose kernel performs\n  // better due to simpler memory access pattern.\n  const [reducedShape, perm] = removeOneSizeDims(inputs.x.shape, attrs.perm);\n\n  let permIsNoOp = true;\n  for (let i = 0; i < perm.length; i++) {\n    if (perm[i] !== i) {\n      permIsNoOp = false;\n    }\n  }\n  const outShape = computeOutShape(inputs.x.shape, attrs.perm);\n  const x = {\n    dataId: inputs.x.dataId,\n    shape: reducedShape,\n    dtype: inputs.x.dtype\n  };\n\n  if (permIsNoOp) {\n    const cloned = identity({inputs, backend});\n    cloned.shape = outShape;\n    return cloned;\n  }\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const permBytes = new Uint8Array(new Int32Array(perm).buffer);\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmTranspose(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], outId, permBytes,\n      perm.length);\n  return out;\n}\n\nfunction computeOutShape(inShape: number[], perm: number[]): number[] {\n  const outShape = new Array(inShape.length);\n  for (let i = 0; i < outShape.length; i++) {\n    outShape[i] = inShape[perm[i]];\n  }\n  return outShape;\n}\n\nfunction removeOneSizeDims(\n    shape: number[], perm: number[]): [number[], number[]] {\n  const newShape: number[] = [];\n  const newPerm: number[] = [];\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n    }\n    if (shape[perm[i]] !== 1) {\n      newPerm.push(perm[i]);\n    }\n  }\n  for (let i = 0; i < newPerm.length; ++i) {\n    let minValIdx = -1;\n    for (let j = 0; j < newPerm.length; ++j) {\n      if (newPerm[j] >= i &&\n          (minValIdx === -1 || newPerm[minValIdx] > newPerm[j])) {\n        minValIdx = j;\n      }\n    }\n    newPerm[minValIdx] = i;\n  }\n  return [newShape, newPerm];\n}\n\nexport const transposeConfig: KernelConfig = {\n  kernelName: Transpose,\n  backendName: 'wasm',\n  kernelFunc: transpose as {} as KernelFunc,\n  setupFunc: setup,\n};\n","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\nimport {transpose} from './Transpose';\n\n/**\n * Compute permutation axes and do a transpose if necessary.\n *\n * Used by reduction ops.\n * @param x input TensorInfo\n * @param axis reduction axes\n * @param backend wasm backend instance\n */\nexport function permuteAxesAndTranspose(\n    x: TensorInfo, axis: number|number[], backend: BackendWasm): {\n  transposed: TensorInfo|null,\n  axes: number[],\n  originalAxes: number[],\n  inputWasTransposed: boolean\n} {\n  const xShape = x.shape;\n  const xRank = x.shape.length;\n\n  const originalAxes = util.parseAxisParam(axis, xShape);\n  let axes = originalAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let xTransposed = null;\n  let inputWasTransposed = false;\n  if (permutedAxes != null) {\n    const newShape: number[] = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = xShape[permutedAxes[i]];\n    }\n\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    xTransposed =\n        transpose({inputs: {x}, attrs: {perm: permutedAxes}, backend});\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const transposedId = backend.dataIdMap.get(xTransposed.dataId).id;\n    if (transposedId !== xId) {\n      inputWasTransposed = true;\n    }\n  }\n\n  return {transposed: xTransposed, originalAxes, axes, inputWasTransposed};\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {All, AllAttrs, AllInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAll: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAll = backend.wasm.cwrap(All, null /*void*/, ['number, number, number']);\n}\n\nfunction all(args: {backend: BackendWasm, inputs: AllInputs, attrs: AllAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('all', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAll(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const allConfig: KernelConfig = {\n  kernelName: All,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: all as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Any, AnyAttrs, AnyInputs, backend_util, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmAny: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmAny = backend.wasm.cwrap(Any, null /*void*/, ['number, number, number']);\n}\n\nfunction any(args: {backend: BackendWasm, inputs: AnyInputs, attrs: AnyAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('any', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmAny(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const anyConfig: KernelConfig = {\n  kernelName: Any,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: any as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ArgMax, ArgMaxAttrs, ArgMaxInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, outerSize: number, innerSize: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFunc = backend.wasm.cwrap(ArgMax, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // outer_size\n    'number',  // inner_size\n    'number'   // out_id\n  ]);\n}\n\nfunction argmax(\n    args: {inputs: ArgMaxInputs, backend: BackendWasm, attrs: ArgMaxAttrs}) {\n  const {backend, inputs, attrs} = args;\n  const {axis} = attrs as {} as ArgMaxAttrs;\n  const {x} = inputs as {} as ArgMaxInputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const outShape = input.shape.slice(0, -1);\n  const out = backend.makeOutput(outShape, 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const outerSize = util.sizeFromShape(out.shape);\n  const innerSize = input.shape[axes[0]];\n  wasmFunc(inputId, CppDType[input.dtype], outerSize, innerSize, outId);\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  return out;\n}\n\nexport const argMaxConfig: KernelConfig = {\n  kernelName: ArgMax,\n  backendName: 'wasm',\n  kernelFunc: argmax as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool, AvgPoolAttrs, AvgPoolInputs, backend_util, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmAvgPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, strideHeight: number,\n    strideWidth: number, channels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmAvgPool = backend.wasm.cwrap(AvgPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // channels\n    'number',  // outId\n  ]);\n}\n\nfunction avgPool(\n    args: {inputs: AvgPoolInputs, backend: BackendWasm, attrs: AvgPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const channels = convInfo.inChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  if (convInfo.dilationWidth !== 1 || convInfo.dilationHeight !== 1) {\n    throw new Error(\n        `was backend only supports average pooling with dilation = [1, 1], ` +\n        `got [${convInfo.dilationHeight}, ${convInfo.dilationWidth}].`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmAvgPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, strideHeight, strideWidth, channels,\n      outId);\n  return out;\n}\n\nexport const avgPoolConfig: KernelConfig = {\n  kernelName: AvgPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: avgPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reshape, ReshapeAttrs, ReshapeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function reshape(\n    args: {inputs: ReshapeInputs, attrs: ReshapeAttrs, backend: BackendWasm}) {\n  const {inputs, attrs} = args;\n  const {x} = inputs;\n  const {shape} = attrs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n\n  util.assert(\n      xSize === util.sizeFromShape($shape),\n      () => `new shape: ${$shape}, old shape: ${x.shape}. New shape and old ` +\n          `shape must have the same number of elements.`);\n\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'wasm',\n  kernelFunc: reshape as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BatchMatMul, BatchMatMulAttrs, BatchMatMulInputs, broadcast_util, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\n\nlet wasmBatchMatMul: (\n    aId: number, aShape: Uint8Array, aShapeSize: number, bId: number,\n    bShape: Uint8Array, bShapeSize: number, transposeA: boolean,\n    transposeB: boolean, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmBatchMatMul = backend.wasm.cwrap(BatchMatMul, null /* void */, [\n    'number',  // a_id\n    'array',   // a_shape\n    'number',  // a_shape.length\n    'number',  // b_id\n    'array',   // b_shape\n    'number',  // b_shape.length\n    'number',  // transpose_a\n    'number',  // transpose_b\n    'number'   // out_id\n  ]);\n}\n\nfunction batchMatMul(args: {\n  inputs: BatchMatMulInputs,\n  backend: BackendWasm,\n  attrs: BatchMatMulAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {a, b} = inputs;\n  const {transposeA, transposeB} = attrs;\n\n  if (a.dtype !== 'float32' || b.dtype !== 'float32') {\n    throw new Error(\n        `BatchMatMul for non non-float32 tensors not yet supported.`);\n  }\n\n  const aRank = a.shape.length;\n  const bRank = b.shape.length;\n\n  const innerShapeA = transposeA ? a.shape[aRank - 2] : a.shape[aRank - 1];\n  const innerShapeB = transposeB ? b.shape[bRank - 1] : b.shape[bRank - 2];\n\n  const outerShapeA = transposeA ? a.shape[aRank - 1] : a.shape[aRank - 2];\n  const outerShapeB = transposeB ? b.shape[bRank - 2] : b.shape[bRank - 1];\n\n  const outerDimsA = a.shape.slice(0, -2);\n  const outerDimsB = b.shape.slice(0, -2);\n\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  const outShapeOuterDims = broadcast_util.assertAndGetBroadcastShape(\n      a.shape.slice(0, -2), b.shape.slice(0, -2));\n  const outShape = outShapeOuterDims.concat([outerShapeA, outerShapeB]);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${a.shape} and ` +\n          `${b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const a3dShape = transposeA ? [batchDimA, innerShapeA, outerShapeA] :\n                                [batchDimA, outerShapeA, innerShapeA];\n  const b3dShape = transposeB ? [batchDimB, outerShapeB, innerShapeB] :\n                                [batchDimB, innerShapeB, outerShapeB];\n\n  // The rest of the implementation is designed to operate on rank-3 tensors\n  const a3d = reshape({inputs: {x: a}, backend, attrs: {shape: a3dShape}});\n  const b3d = reshape({inputs: {x: b}, backend, attrs: {shape: b3dShape}});\n\n  const a3dId = backend.dataIdMap.get(a3d.dataId).id;\n  const b3dId = backend.dataIdMap.get(b3d.dataId).id;\n\n  const leftDim = transposeA ? a3d.shape[2] : a3d.shape[1];\n  const rightDim = transposeB ? b3d.shape[1] : b3d.shape[2];\n  const batchDim = Math.max(batchDimA, batchDimB);\n\n  const out = backend.makeOutput([batchDim, leftDim, rightDim], a3d.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const aShapeBytes = new Uint8Array(new Int32Array(a3d.shape).buffer);\n  const bShapeBytes = new Uint8Array(new Int32Array(b3d.shape).buffer);\n\n  wasmBatchMatMul(\n      a3dId, aShapeBytes, a3d.shape.length, b3dId, bShapeBytes,\n      b3d.shape.length, transposeA, transposeB, outId);\n\n  backend.disposeData(a3d.dataId);\n  backend.disposeData(b3d.dataId);\n\n  out.shape = outShape;\n  return out;\n}\n\nexport const batchMatMulConfig: KernelConfig = {\n  kernelName: BatchMatMul,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: batchMatMul as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, buffer, Slice, slice_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function sliceImpl(vals, begin, size, shape, dtype) {\n    const isContinous = slice_util.isSliceContinous(shape, begin, size);\n    const length = util.sizeFromShape(size);\n    const xStrides = util.computeStrides(shape);\n    if (isContinous) {\n        const flatOffset = slice_util.computeFlatOffset(begin, xStrides);\n        if (dtype === 'string') {\n            return vals.slice(flatOffset, flatOffset + length);\n        }\n        return vals.subarray(flatOffset, flatOffset + length);\n    }\n    const decodedData = dtype === 'string' ?\n        backend_util.fromUint8ToStringArray(vals) :\n        vals;\n    const inBuf = buffer(shape, dtype, decodedData);\n    const outBuf = buffer(size, dtype);\n    for (let i = 0; i < outBuf.size; ++i) {\n        const outLoc = outBuf.indexToLoc(i);\n        const inLoc = outLoc.map((idx, j) => idx + begin[j]);\n        outBuf.set(inBuf.get(...inLoc), ...outLoc);\n    }\n    if (dtype === 'string') {\n        return backend_util.fromStringArrayToUint8(outBuf.values);\n    }\n    return outBuf.values;\n}\nexport function slice(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { begin, size } = attrs;\n    assertNotComplex(x, 'slice');\n    const [$begin, $size] = slice_util.parseSliceParams(x, begin, size);\n    slice_util.assertParamsValid(x, $begin, $size);\n    const vals = backend.data.get(x.dataId).values;\n    const outVals = sliceImpl(vals, $begin, $size, x.shape, x.dtype);\n    return backend.makeTensorInfo($size, x.dtype, outVals);\n}\nexport const sliceConfig = {\n    kernelName: Slice,\n    backendName: 'cpu',\n    kernelFunc: slice\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtY3B1L3NyYy9rZXJuZWxzL1NsaWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQWlCLE1BQU0sRUFBc0MsS0FBSyxFQUFFLFVBQVUsRUFBbUQsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHeEwsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRTdDLE1BQU0sVUFBVSxTQUFTLENBQ3JCLElBQW1CLEVBQUUsS0FBZSxFQUFFLElBQWMsRUFBRSxLQUFlLEVBQ3JFLEtBQWU7SUFDakIsTUFBTSxXQUFXLEdBQUcsVUFBVSxDQUFDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDcEUsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRTVDLElBQUksV0FBVyxFQUFFO1FBQ2YsTUFBTSxVQUFVLEdBQUcsVUFBVSxDQUFDLGlCQUFpQixDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztRQUVqRSxJQUFJLEtBQUssS0FBSyxRQUFRLEVBQUU7WUFDdEIsT0FBUSxJQUFxQixDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsVUFBVSxHQUFHLE1BQU0sQ0FBQyxDQUFDO1NBQ3RFO1FBRUQsT0FBUSxJQUFtQixDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsVUFBVSxHQUFHLE1BQU0sQ0FBQyxDQUFDO0tBQ3ZFO0lBRUQsTUFBTSxXQUFXLEdBQUcsS0FBSyxLQUFLLFFBQVEsQ0FBQyxDQUFDO1FBQ3BDLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFvQixDQUFDLENBQUMsQ0FBQztRQUMzRCxJQUFrQixDQUFDO0lBRXZCLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ2hELE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDbkMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUU7UUFDcEMsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwQyxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdELE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxFQUFFLEdBQUcsTUFBTSxDQUFDLENBQUM7S0FDNUM7SUFFRCxJQUFJLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDdEIsT0FBTyxZQUFZLENBQUMsc0JBQXNCLENBQUMsTUFBTSxDQUFDLE1BQWtCLENBQUMsQ0FBQztLQUN2RTtJQUNELE9BQU8sTUFBTSxDQUFDLE1BQW9CLENBQUM7QUFDckMsQ0FBQztBQUVELE1BQU0sVUFBVSxLQUFLLENBQ2pCLElBQXVFO0lBRXpFLE1BQU0sRUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQztJQUN0QyxNQUFNLEVBQUMsQ0FBQyxFQUFDLEdBQUcsTUFBTSxDQUFDO0lBQ25CLE1BQU0sRUFBQyxLQUFLLEVBQUUsSUFBSSxFQUFDLEdBQUcsS0FBSyxDQUFDO0lBRTVCLGdCQUFnQixDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUU3QixNQUFNLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxHQUFHLFVBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3BFLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRS9DLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDL0MsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pFLE9BQU8sT0FBTyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztBQUN6RCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFpQjtJQUN2QyxVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsS0FBSztJQUNsQixVQUFVLEVBQUUsS0FBeUI7Q0FDdEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIEJhY2tlbmRWYWx1ZXMsIGJ1ZmZlciwgRGF0YVR5cGUsIEtlcm5lbENvbmZpZywgS2VybmVsRnVuYywgU2xpY2UsIHNsaWNlX3V0aWwsIFNsaWNlQXR0cnMsIFNsaWNlSW5wdXRzLCBUZW5zb3JJbmZvLCBUeXBlZEFycmF5LCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5pbXBvcnQge01hdGhCYWNrZW5kQ1BVfSBmcm9tICcuLi9iYWNrZW5kX2NwdSc7XG5pbXBvcnQge2Fzc2VydE5vdENvbXBsZXh9IGZyb20gJy4uL2NwdV91dGlsJztcblxuZXhwb3J0IGZ1bmN0aW9uIHNsaWNlSW1wbChcbiAgICB2YWxzOiBCYWNrZW5kVmFsdWVzLCBiZWdpbjogbnVtYmVyW10sIHNpemU6IG51bWJlcltdLCBzaGFwZTogbnVtYmVyW10sXG4gICAgZHR5cGU6IERhdGFUeXBlKTogQmFja2VuZFZhbHVlcyB7XG4gIGNvbnN0IGlzQ29udGlub3VzID0gc2xpY2VfdXRpbC5pc1NsaWNlQ29udGlub3VzKHNoYXBlLCBiZWdpbiwgc2l6ZSk7XG4gIGNvbnN0IGxlbmd0aCA9IHV0aWwuc2l6ZUZyb21TaGFwZShzaXplKTtcbiAgY29uc3QgeFN0cmlkZXMgPSB1dGlsLmNvbXB1dGVTdHJpZGVzKHNoYXBlKTtcblxuICBpZiAoaXNDb250aW5vdXMpIHtcbiAgICBjb25zdCBmbGF0T2Zmc2V0ID0gc2xpY2VfdXRpbC5jb21wdXRlRmxhdE9mZnNldChiZWdpbiwgeFN0cmlkZXMpO1xuXG4gICAgaWYgKGR0eXBlID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuICh2YWxzIGFzIFVpbnQ4QXJyYXlbXSkuc2xpY2UoZmxhdE9mZnNldCwgZmxhdE9mZnNldCArIGxlbmd0aCk7XG4gICAgfVxuXG4gICAgcmV0dXJuICh2YWxzIGFzIFR5cGVkQXJyYXkpLnN1YmFycmF5KGZsYXRPZmZzZXQsIGZsYXRPZmZzZXQgKyBsZW5ndGgpO1xuICB9XG5cbiAgY29uc3QgZGVjb2RlZERhdGEgPSBkdHlwZSA9PT0gJ3N0cmluZycgP1xuICAgICAgYmFja2VuZF91dGlsLmZyb21VaW50OFRvU3RyaW5nQXJyYXkodmFscyBhcyBVaW50OEFycmF5W10pIDpcbiAgICAgIHZhbHMgYXMgVHlwZWRBcnJheTtcblxuICBjb25zdCBpbkJ1ZiA9IGJ1ZmZlcihzaGFwZSwgZHR5cGUsIGRlY29kZWREYXRhKTtcbiAgY29uc3Qgb3V0QnVmID0gYnVmZmVyKHNpemUsIGR0eXBlKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBvdXRCdWYuc2l6ZTsgKytpKSB7XG4gICAgY29uc3Qgb3V0TG9jID0gb3V0QnVmLmluZGV4VG9Mb2MoaSk7XG4gICAgY29uc3QgaW5Mb2MgPSBvdXRMb2MubWFwKChpZHg6IG51bWJlciwgaikgPT4gaWR4ICsgYmVnaW5bal0pO1xuICAgIG91dEJ1Zi5zZXQoaW5CdWYuZ2V0KC4uLmluTG9jKSwgLi4ub3V0TG9jKTtcbiAgfVxuXG4gIGlmIChkdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gYmFja2VuZF91dGlsLmZyb21TdHJpbmdBcnJheVRvVWludDgob3V0QnVmLnZhbHVlcyBhcyBzdHJpbmdbXSk7XG4gIH1cbiAgcmV0dXJuIG91dEJ1Zi52YWx1ZXMgYXMgVHlwZWRBcnJheTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNsaWNlKFxuICAgIGFyZ3M6IHtpbnB1dHM6IFNsaWNlSW5wdXRzLCBiYWNrZW5kOiBNYXRoQmFja2VuZENQVSwgYXR0cnM6IFNsaWNlQXR0cnN9KTpcbiAgICBUZW5zb3JJbmZvIHtcbiAgY29uc3Qge2lucHV0cywgYmFja2VuZCwgYXR0cnN9ID0gYXJncztcbiAgY29uc3Qge3h9ID0gaW5wdXRzO1xuICBjb25zdCB7YmVnaW4sIHNpemV9ID0gYXR0cnM7XG5cbiAgYXNzZXJ0Tm90Q29tcGxleCh4LCAnc2xpY2UnKTtcblxuICBjb25zdCBbJGJlZ2luLCAkc2l6ZV0gPSBzbGljZV91dGlsLnBhcnNlU2xpY2VQYXJhbXMoeCwgYmVnaW4sIHNpemUpO1xuICBzbGljZV91dGlsLmFzc2VydFBhcmFtc1ZhbGlkKHgsICRiZWdpbiwgJHNpemUpO1xuXG4gIGNvbnN0IHZhbHMgPSBiYWNrZW5kLmRhdGEuZ2V0KHguZGF0YUlkKS52YWx1ZXM7XG4gIGNvbnN0IG91dFZhbHMgPSBzbGljZUltcGwodmFscywgJGJlZ2luLCAkc2l6ZSwgeC5zaGFwZSwgeC5kdHlwZSk7XG4gIHJldHVybiBiYWNrZW5kLm1ha2VUZW5zb3JJbmZvKCRzaXplLCB4LmR0eXBlLCBvdXRWYWxzKTtcbn1cblxuZXhwb3J0IGNvbnN0IHNsaWNlQ29uZmlnOiBLZXJuZWxDb25maWcgPSB7XG4gIGtlcm5lbE5hbWU6IFNsaWNlLFxuICBiYWNrZW5kTmFtZTogJ2NwdScsXG4gIGtlcm5lbEZ1bmM6IHNsaWNlIGFzIHt9IGFzIEtlcm5lbEZ1bmNcbn07XG4iXX0=","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Slice, slice_util, SliceAttrs, SliceInputs, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {sliceImplCPU} from '../kernel_utils/shared';\n\nexport function slice(\n    args: {inputs: SliceInputs, attrs: SliceAttrs, backend: BackendWasm}) {\n  const {inputs: {x}, attrs: {begin, size}, backend} = args;\n\n  const [begin_, size_] = slice_util.parseSliceParams(x, begin, size);\n\n  const isContinous = slice_util.isSliceContinous(x.shape, begin_, size_);\n  const xVals = backend.readSync(x.dataId);\n  const out = backend.makeOutput(size_, x.dtype);\n  const xStrides = util.computeStrides(x.shape);\n  const outData = backend.dataIdMap.get(out.dataId);\n\n  if (isContinous) {\n    const flatOffset = slice_util.computeFlatOffset(begin_, xStrides);\n\n    if (x.dtype === 'string') {\n      outData.stringBytes =\n          (xVals as Uint8Array[])\n              .slice(flatOffset, flatOffset + util.sizeFromShape(size_));\n    } else {\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(\n          (xVals as TypedArray)\n              .subarray(flatOffset, flatOffset + util.sizeFromShape(size_)));\n    }\n\n    return out;\n  }\n\n  if (x.dtype === 'string') {\n    const res = sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype);\n    outData.stringBytes = res as Uint8Array[];\n    return out;\n  }\n\n  const outVals = backend.typedArrayFromHeap(out);\n  const rank = x.shape.length;\n  if (rank === 2) {\n    slice2d(\n        xVals as TypedArray, xStrides[0], outVals, begin_ as [number, number],\n        size_ as [number, number]);\n  } else if (rank === 3) {\n    slice3d(\n        xVals as TypedArray, xStrides[0], xStrides[1], outVals,\n        begin_ as [number, number, number], size_ as [number, number, number]);\n  } else if (rank === 4) {\n    slice4d(\n        xVals as TypedArray, xStrides[0], xStrides[1], xStrides[2], outVals,\n        begin_ as [number, number, number, number],\n        size_ as [number, number, number, number]);\n  } else {\n    const res =\n        sliceImplCPU(xVals, begin_, size_, x.shape, x.dtype) as TypedArray;\n    outVals.set(res);\n  }\n\n  return out;\n}\n\nfunction slice2d(\n    xVals: backend_util.TypedArray, xStride: number,\n    outVals: backend_util.TypedArray, begin: [number, number],\n    size: [number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const endI = beginI + size[0];\n  for (let i = beginI; i < endI; i++) {\n    const xOffset = i * xStride + beginJ;\n    outVals.set(xVals.subarray(xOffset, xOffset + size[1]), outOffset);\n    outOffset += size[1];\n  }\n}\n\nfunction slice3d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    outVals: backend_util.TypedArray, begin: [number, number, number],\n    size: [number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      const xOffset = i * xStride1 + j * xStride2 + beginK;\n      outVals.set(xVals.subarray(xOffset, xOffset + size[2]), outOffset);\n      outOffset += size[2];\n    }\n  }\n}\n\nfunction slice4d(\n    xVals: backend_util.TypedArray, xStride1: number, xStride2: number,\n    xStride3: number, outVals: backend_util.TypedArray,\n    begin: [number, number, number, number],\n    size: [number, number, number, number]): void {\n  let outOffset = 0;\n  const beginI = begin[0];\n  const beginJ = begin[1];\n  const beginK = begin[2];\n  const endI = beginI + size[0];\n  const endJ = beginJ + size[1];\n  const endK = beginK + size[2];\n  const beginL = begin[3];\n\n  for (let i = beginI; i < endI; i++) {\n    for (let j = beginJ; j < endJ; j++) {\n      for (let k = beginK; k < endK; k++) {\n        const xOffset = i * xStride1 + j * xStride2 + k * xStride3 + beginL;\n        outVals.set(xVals.subarray(xOffset, xOffset + size[3]), outOffset);\n        outOffset += size[3];\n      }\n    }\n  }\n}\n\nexport const sliceConfig: KernelConfig = {\n  kernelName: Slice,\n  backendName: 'wasm',\n  kernelFunc: slice as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, BatchToSpaceND, BatchToSpaceNDAttrs, BatchToSpaceNDInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\nimport {transpose} from './Transpose';\n\nfunction batchToSpaceND(args: {\n  inputs: BatchToSpaceNDInputs,\n  backend: BackendWasm,\n  attrs: BatchToSpaceNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, crops} = attrs;\n\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  const reshapedPermuted =\n      backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  const sliceBeginCoords =\n      backend_util.getSliceBeginCoords(crops, blockShape.length);\n  const sliceSize =\n      backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n\n  const xReshaped = reshape({inputs: {x}, backend, attrs: {shape: reshaped}});\n  const xTransposed =\n      transpose({inputs: {x: xReshaped}, backend, attrs: {perm: permuted}});\n  const xTransposedReshaped = reshape(\n      {inputs: {x: xTransposed}, backend, attrs: {shape: reshapedPermuted}});\n  const result = slice({\n    inputs: {x: xTransposedReshaped},\n    backend,\n    attrs: {begin: sliceBeginCoords, size: sliceSize}\n  });\n\n  backend.disposeData(xReshaped.dataId);\n  backend.disposeData(xTransposed.dataId);\n  backend.disposeData(xReshaped.dataId);\n\n  return result;\n}\n\nexport const batchToSpaceNDConfig: KernelConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'wasm',\n  kernelFunc: batchToSpaceND as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Ceil} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const ceilConfig: KernelConfig = createUnaryKernelConfig(Ceil);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ClipByValue, ClipByValueAttrs, ClipByValueInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmClip: (xId: number, min: number, max: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmClip = backend.wasm.cwrap(ClipByValue, null /* void */, [\n    'number',  // x_id\n    'number',  // min\n    'number',  // max\n    'number'   // out_id\n  ]);\n}\n\nfunction clip(args: {\n  inputs: ClipByValueInputs,\n  backend: BackendWasm,\n  attrs: ClipByValueAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {clipValueMin, clipValueMax} = attrs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmClip(xId, clipValueMin, clipValueMax, outId);\n  return out;\n}\n\nexport const clipByValueConfig: KernelConfig = {\n  kernelName: ClipByValue,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: clip as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Concat, ConcatAttrs, ConcatInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {concatImplCPU} from '../kernel_utils/shared';\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nexport function concat(\n    args: {inputs: ConcatInputs, backend: BackendWasm, attrs: ConcatAttrs}) {\n  const {inputs, backend} = args;\n\n  const axis = util.parseAxisParam(args.attrs.axis, inputs[0].shape)[0];\n\n  let outShape = backend_util.computeOutShape(inputs.map(t => t.shape), axis);\n\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  const $inputs = inputs.filter(t => util.sizeFromShape(t.shape) > 0);\n  if ($inputs.length === 1) {\n    return identity({inputs: {x: $inputs[0]}, backend});\n  }\n\n  const out = backend.makeOutput(outShape, inputs[0].dtype);\n\n  if (util.sizeFromShape(outShape) === 0) {\n    return out;\n  }\n\n  const shapes = $inputs.map(t => t.shape);\n  backend_util.assertParamsConsistent(shapes, axis);\n\n  if ($inputs[0].dtype === 'string') {\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const inputs2D = $inputs.map(t => {\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\n      const shape = [-1, innerSize];\n      return reshape({inputs: {x: t}, backend, attrs: {shape}});\n    });\n\n    const inputsValShapes = inputs2D.map(t => {\n      return {vals: backend.readSync(t.dataId), shape: t.shape};\n    });\n\n    // Concats 2d tensors along axis=1.\n    outShape =\n        backend_util.computeOutShape(inputs2D.map(t => t.shape), 1 /* axis */);\n    const simplyConcat = inputs2D[0].shape[0] === 1;\n    const outVals = concatImplCPU(\n                        inputsValShapes, outShape, inputs[0].dtype,\n                        simplyConcat) as string[];\n\n    const finalOutShape =\n        backend_util.computeOutShape($inputs.map(t => t.shape), axis);\n\n    out.shape = finalOutShape;\n    const outData = backend.dataIdMap.get(out.dataId);\n    outData.stringBytes = backend_util.fromStringArrayToUint8(outVals);\n\n    inputs2D.forEach(t => backend.disposeData(t.dataId));\n\n    return out;\n  }\n\n  const batchDim = util.sizeFromShape($inputs[0].shape.slice(0, axis));\n  let sumInnerDims = 0;\n  const innerDims = $inputs.map(input => {\n    const innerDim = util.sizeFromShape(input.shape.slice(axis));\n    sumInnerDims += innerDim;\n    return innerDim;\n  });\n  const inVals = $inputs.map(input => backend.typedArrayFromHeap(input));\n  const outVals = backend.typedArrayFromHeap(out);\n  for (let b = 0; b < batchDim; b++) {\n    let outOffset = b * sumInnerDims;\n    for (let i = 0; i < inVals.length; i++) {\n      const innerDim = innerDims[i];\n      const inOffset = b * innerDim;\n      const vals = inVals[i].subarray(inOffset, inOffset + innerDim);\n      outVals.set(vals, outOffset);\n      outOffset += innerDim;\n    }\n  }\n  return out;\n}\n\nexport const concatConfig: KernelConfig = {\n  kernelName: Concat,\n  backendName: 'wasm',\n  kernelFunc: concat as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nexport function concatImpl(inputs, outShape, dtype, simplyConcat) {\n    const outVals = util.getArrayFromDType(dtype, util.sizeFromShape(outShape));\n    if (simplyConcat && dtype !== 'string') {\n        // Use built-in TypedArray.set() method for speed.\n        let offset = 0;\n        inputs.forEach(input => {\n            const size = util.sizeFromShape(input.shape);\n            outVals.set(input.vals, offset);\n            offset += size;\n        });\n    }\n    else {\n        let colOffset = 0;\n        inputs.forEach(input => {\n            const decodedData = dtype === 'string' ?\n                backend_util.fromUint8ToStringArray(input.vals) :\n                input.vals;\n            let tIdx = 0;\n            for (let row = 0; row < input.shape[0]; ++row) {\n                const resIdx = row * outShape[1] + colOffset;\n                for (let col = 0; col < input.shape[1]; ++col) {\n                    outVals[resIdx + col] = decodedData[tIdx++];\n                }\n            }\n            colOffset += input.shape[1];\n        });\n    }\n    return outVals;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uY2F0X2ltcGwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWJhY2tlbmQtY3B1L3NyYy9rZXJuZWxzL0NvbmNhdF9pbXBsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQXVDLElBQUksRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRTlGLE1BQU0sVUFBVSxVQUFVLENBQ3RCLE1BQXFELEVBQUUsUUFBa0IsRUFDekUsS0FBZSxFQUFFLFlBQXFCO0lBQ3hDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBRTVFLElBQUksWUFBWSxJQUFJLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDdEMsa0RBQWtEO1FBQ2xELElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQztRQUNmLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDckIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7WUFFNUMsT0FBc0IsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQWtCLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDOUQsTUFBTSxJQUFJLElBQUksQ0FBQztRQUNqQixDQUFDLENBQUMsQ0FBQztLQUNKO1NBQU07UUFDTCxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFFbEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNyQixNQUFNLFdBQVcsR0FBRyxLQUFLLEtBQUssUUFBUSxDQUFDLENBQUM7Z0JBQ3BDLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsSUFBb0IsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pFLEtBQUssQ0FBQyxJQUFrQixDQUFDO1lBRTdCLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQztZQUViLEtBQUssSUFBSSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEdBQUcsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFO2dCQUM3QyxNQUFNLE1BQU0sR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQztnQkFDN0MsS0FBSyxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUU7b0JBQzdDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLEdBQUcsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7aUJBQzdDO2FBQ0Y7WUFFRCxTQUFTLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM5QixDQUFDLENBQUMsQ0FBQztLQUNKO0lBRUQsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtiYWNrZW5kX3V0aWwsIEJhY2tlbmRWYWx1ZXMsIERhdGFUeXBlLCBUeXBlZEFycmF5LCB1dGlsfSBmcm9tICdAdGVuc29yZmxvdy90ZmpzLWNvcmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0SW1wbChcbiAgICBpbnB1dHM6IEFycmF5PHt2YWxzOiBCYWNrZW5kVmFsdWVzLCBzaGFwZTogbnVtYmVyW119Piwgb3V0U2hhcGU6IG51bWJlcltdLFxuICAgIGR0eXBlOiBEYXRhVHlwZSwgc2ltcGx5Q29uY2F0OiBib29sZWFuKTogVHlwZWRBcnJheXxzdHJpbmdbXSB7XG4gIGNvbnN0IG91dFZhbHMgPSB1dGlsLmdldEFycmF5RnJvbURUeXBlKGR0eXBlLCB1dGlsLnNpemVGcm9tU2hhcGUob3V0U2hhcGUpKTtcblxuICBpZiAoc2ltcGx5Q29uY2F0ICYmIGR0eXBlICE9PSAnc3RyaW5nJykge1xuICAgIC8vIFVzZSBidWlsdC1pbiBUeXBlZEFycmF5LnNldCgpIG1ldGhvZCBmb3Igc3BlZWQuXG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgaW5wdXRzLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgY29uc3Qgc2l6ZSA9IHV0aWwuc2l6ZUZyb21TaGFwZShpbnB1dC5zaGFwZSk7XG5cbiAgICAgIChvdXRWYWxzIGFzIFR5cGVkQXJyYXkpLnNldChpbnB1dC52YWxzIGFzIFR5cGVkQXJyYXksIG9mZnNldCk7XG4gICAgICBvZmZzZXQgKz0gc2l6ZTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBsZXQgY29sT2Zmc2V0ID0gMDtcblxuICAgIGlucHV0cy5mb3JFYWNoKGlucHV0ID0+IHtcbiAgICAgIGNvbnN0IGRlY29kZWREYXRhID0gZHR5cGUgPT09ICdzdHJpbmcnID9cbiAgICAgICAgICBiYWNrZW5kX3V0aWwuZnJvbVVpbnQ4VG9TdHJpbmdBcnJheShpbnB1dC52YWxzIGFzIFVpbnQ4QXJyYXlbXSkgOlxuICAgICAgICAgIGlucHV0LnZhbHMgYXMgVHlwZWRBcnJheTtcblxuICAgICAgbGV0IHRJZHggPSAwO1xuXG4gICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBpbnB1dC5zaGFwZVswXTsgKytyb3cpIHtcbiAgICAgICAgY29uc3QgcmVzSWR4ID0gcm93ICogb3V0U2hhcGVbMV0gKyBjb2xPZmZzZXQ7XG4gICAgICAgIGZvciAobGV0IGNvbCA9IDA7IGNvbCA8IGlucHV0LnNoYXBlWzFdOyArK2NvbCkge1xuICAgICAgICAgIG91dFZhbHNbcmVzSWR4ICsgY29sXSA9IGRlY29kZWREYXRhW3RJZHgrK107XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgY29sT2Zmc2V0ICs9IGlucHV0LnNoYXBlWzFdO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIG91dFZhbHM7XG59XG4iXX0=","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmConv2d = backend.wasm.cwrap(Conv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction conv2d(\n    args: {inputs: Conv2DInputs, backend: BackendWasm, attrs: Conv2DAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode, dataFormat} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, false, $dataFormat);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend Conv2D does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropInput, Conv2DBackpropInputAttrs, Conv2DBackpropInputInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmConv2DBackpropInput: (\n    dyId: number, filterId: number, batchSize: number, filterHeight: number,\n    filterWidth: number, inHeight: number, inWidth: number, inChannels: number,\n    outHeight: number, outWidth: number, outChannels: number,\n    strideHeight: number, strideWidth: number, topPad: number, leftPad: number,\n    fltS0: number, fltS1: number, fltS2: number, xBatchStride: number,\n    xRowStride: number, xColStride: number, xChannelStride: number,\n    yBatchStride: number, yRowStride: number, yColStride: number,\n    yChannelStride: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmConv2DBackpropInput = backend.wasm.cwrap(Conv2DBackpropInput, null, [\n    'number',  // dyId\n    'number',  // filterId\n    'number',  // batchSize\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // inHeight\n    'number',  // inWidth\n    'number',  // inChannels\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // outChannels\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // topPad\n    'number',  // leftPad\n    'number',  // fltS0\n    'number',  // fltS1\n    'number',  // fltS2\n    'number',  // xBatchStride\n    'number',  // xRowStride\n    'number',  // xColStride\n    'number',  // xChannelStride\n    'number',  // yBatchStride\n    'number',  // yRowStride\n    'number',  // yColStride\n    'number',  // yChannelStride\n    'number',  // outId\n  ]);\n}\n\nfunction conv2DBackpropInput(args: {\n  backend: BackendWasm,\n  inputs: Conv2DBackpropInputInputs,\n  attrs: Conv2DBackpropInputAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, inputShape} = attrs;\n\n  const dilations = 1;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const {\n    batchSize,\n    filterHeight,\n    filterWidth,\n    inChannels,\n    inHeight,\n    inWidth,\n    outChannels,\n    outHeight,\n    outWidth,\n    strideHeight,\n    strideWidth\n  } = convInfo;\n\n  const topPad = filterHeight - 1 - convInfo.padInfo.top;\n  const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n  const isChannelsLast = convInfo.dataFormat === 'channelsLast';\n  const dxStrides = util.computeStrides(convInfo.inShape);\n  const dyStrides = util.computeStrides(dy.shape);\n  const [fltS0, fltS1, fltS2] = util.computeStrides(filter.shape);\n  const xBatchStride = dxStrides[0];\n  const xRowStride = isChannelsLast ? dxStrides[1] : dxStrides[2];\n  const xColStride = isChannelsLast ? dxStrides[2] : 1;\n  const xChannelStride = isChannelsLast ? 1 : dxStrides[1];\n  const yBatchStride = dyStrides[0];\n  const yRowStride = isChannelsLast ? dyStrides[1] : dyStrides[2];\n  const yColStride = isChannelsLast ? dyStrides[2] : 1;\n  const yChannelStride = isChannelsLast ? 1 : dyStrides[1];\n\n  const out = backend.makeOutput(convInfo.inShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const dyId = backend.dataIdMap.get(dy.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  wasmConv2DBackpropInput(\n      dyId, filterId, batchSize, filterHeight, filterWidth, inHeight, inWidth,\n      inChannels, outHeight, outWidth, outChannels, strideHeight, strideWidth,\n      topPad, leftPad, fltS0, fltS1, fltS2, xBatchStride, xRowStride,\n      xColStride, xChannelStride, yBatchStride, yRowStride, yColStride,\n      yChannelStride, outId);\n  return out;\n}\n\nexport const conv2DBackpropInputConfig: KernelConfig = {\n  kernelName: Conv2DBackpropInput,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: conv2DBackpropInput as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cos, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const cosConfig: KernelConfig = createUnaryKernelConfig(Cos);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Cosh, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const coshConfig: KernelConfig = createUnaryKernelConfig(Cosh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CropAndResize, CropAndResizeAttrs, CropAndResizeInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\n// Must match enum in CropAndResize.cc\nenum InterpolationMethod {\n  bilinear = 0,\n  nearest = 1\n}\n\nlet wasmCropAndResize: (\n    imagesId: number, boxesId: number, boxIndId: number, numBoxes: number,\n    imagesShape: Uint8Array, cropHeight: number, cropWidth: number,\n    method: number, extrapolationValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmCropAndResize = backend.wasm.cwrap(CropAndResize, null /*void*/, [\n    'number',  // imagesId\n    'number',  // boxesId\n    'number',  // boxIndId\n    'number',  // numBoxes\n    'array',   // images shape\n    'number',  // cropHeight\n    'number',  // cropWidth\n    'number',  // method\n    'number',  // extrapolation value\n    'number'   // out id\n  ]);\n}\n\nfunction cropAndResize(args: {\n  backend: BackendWasm,\n  inputs: CropAndResizeInputs,\n  attrs: CropAndResizeAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {method, extrapolationValue, cropSize} = attrs;\n  const {image, boxes, boxInd} = inputs;\n\n  const numBoxes = boxes.shape[0];\n\n  const [cropHeight, cropWidth] = cropSize as [number, number];\n  const outShape = [numBoxes, cropHeight, cropWidth, image.shape[3]];\n\n  let imagesData = backend.dataIdMap.get(image.dataId);\n  let castedData;\n  if (image.dtype !== 'float32') {\n    castedData = cast({backend, inputs: {x: image}, attrs: {dtype: 'float32'}});\n    imagesData = backend.dataIdMap.get(castedData.dataId);\n  }\n\n  const imagesId = imagesData.id;\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const boxIndId = backend.dataIdMap.get(boxInd.dataId).id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imagesShapeBytes = new Uint8Array(new Int32Array(image.shape).buffer);\n\n  wasmCropAndResize(\n      imagesId, boxesId, boxIndId, numBoxes, imagesShapeBytes, cropHeight,\n      cropWidth,\n      InterpolationMethod[method as {} as keyof typeof InterpolationMethod],\n      extrapolationValue, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const cropAndResizeConfig: KernelConfig = {\n  kernelName: CropAndResize,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cropAndResize as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumprod, CumprodAttrs, CumprodInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumprod: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumprod = backend.wasm.cwrap(Cumprod, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumprod(\n  args: {inputs: CumprodInputs, backend: BackendWasm, attrs: CumprodAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumprod does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumprod', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumprod(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n              permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumprodConfig: KernelConfig = {\n  kernelName: Cumprod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumprod as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Cumsum, CumsumAttrs, CumsumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nimport {transpose} from './Transpose';\n\nlet wasmCumsum: (xId: number, exclusive: number, reverse: number,\n                 finalDim: number, outId: number, dtype: CppDType) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmCumsum = backend.wasm.cwrap(Cumsum, null /* void */, [\n    'number', // x_id\n    'number', // exclusive\n    'number', // reverse\n    'number', // final_dim\n    'number', // out_id\n    'number'  // dtype\n  ]);\n}\n\nexport function cumsum(\n  args: {inputs: CumsumInputs, backend: BackendWasm, attrs: CumsumAttrs}):\nTensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, exclusive, reverse} = attrs;\n  const xRank = x.shape.length;\n\n  util.assert(x.dtype === 'float32' || x.dtype === 'int32',\n    () => `cumsum does not support ${x.dtype} tensors in the WASM backend`);\n  // permute required axis to inner most axis\n  const permutation = backend_util.getAxesPermutation([axis], xRank);\n  let permutedX = x;\n  if (permutation !== null) {\n    permutedX = transpose({inputs: {x}, attrs: {perm: permutation}, backend});\n  }\n  const permutedAxis = backend_util.getInnerMostAxes(1, xRank)[0];\n  backend_util.assertAxesAreInnerMostDims('cumsum', [permutedAxis], xRank);\n\n  const permutedOut = backend.makeOutput(permutedX.shape, permutedX.dtype);\n  const finalDim = permutedX.shape[permutedAxis];\n  const permutedXId = backend.dataIdMap.get(permutedX.dataId).id;\n  const permutedOutId = backend.dataIdMap.get(permutedOut.dataId).id;\n  wasmCumsum(permutedXId, exclusive ? 1 : 0, reverse ? 1 : 0, finalDim,\n             permutedOutId, CppDType[x.dtype]);\n\n  // transpose data back if permuted\n  let out = permutedOut;\n  if (permutation !== null) {\n    const undoPermutation = backend_util.getUndoAxesPermutation(permutation);\n    out = transpose(\n      {inputs: {x: permutedOut}, attrs: {perm: undoPermutation}, backend});\n    backend.disposeData(permutedX.dataId);\n    backend.disposeData(permutedOut.dataId);\n  }\n  return out;\n}\n\nexport const cumsumConfig: KernelConfig = {\n  kernelName: Cumsum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: cumsum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DepthToSpace, DepthToSpaceAttrs, DepthToSpaceInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthToSpace: (\n    xId: number, blockSize: number, channelsLast: number, xStrides: Uint8Array,\n    xStridesLength: number, outputShape: Uint8Array, outputStrides: Uint8Array,\n    outSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmDepthToSpace = backend.wasm.cwrap(DepthToSpace, null /*void*/, [\n    'number',  // xId\n    'number',  // blockSize\n    'number',  // channelsLast\n    'array',   // xStrides\n    'number',  // xStridesLength\n    'array',   // outputShape\n    'array',   // outputStrides\n    'number',  // outSize\n    'number',  // outId\n  ]);\n}\n\nexport function depthToSpace(args: {\n  backend: BackendWasm,\n  inputs: DepthToSpaceInputs,\n  attrs: DepthToSpaceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n  const {blockSize, dataFormat} = attrs;\n\n  const batchSize = x.shape[0];\n  const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n\n  const outputHeight = inputHeight * blockSize;\n  const outputWidth = inputWidth * blockSize;\n  const outputDepth = inputDepth / (blockSize * blockSize);\n\n  const outputShape = (dataFormat === 'NHWC') ?\n      [batchSize, outputHeight, outputWidth, outputDepth] :\n      [batchSize, outputDepth, outputHeight, outputWidth];\n\n  const out = backend.makeOutput(outputShape, 'float32');\n\n  const xData = backend.dataIdMap.get(x.dataId);\n  const xId = xData.id;\n  const xStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n\n  const outputShapeBytes = new Uint8Array(new Int32Array(outputShape).buffer);\n  const outStridesBytes =\n      new Uint8Array(new Int32Array(util.computeStrides(outputShape)).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const channelsLast = dataFormat === 'NHWC' ? 1 : 0;\n  wasmDepthToSpace(\n      xId, blockSize, channelsLast, xStridesBytes, x.shape.length - 1,\n      outputShapeBytes, outStridesBytes, outputShape.length, outId);\n\n  return out;\n}\n\nexport const depthToSpaceConfig: KernelConfig = {\n  kernelName: DepthToSpace,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthToSpace as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNative, DepthwiseConv2dNativeAttrs, DepthwiseConv2dNativeInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmDepthwiseConv2d: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterId: number, filterHeight: number, filterWidth: number, padTop: number,\n    padRight: number, padBottom: number, padLeft: number, isSamePad: number,\n    dilationHeight: number, dilationWidth: number, strideHeight: number,\n    strideWidth: number, inputChannels: number, outputChannels: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmDepthwiseConv2d =\n      backend.wasm.cwrap(DepthwiseConv2dNative, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // outId\n      ]);\n}\n\nfunction depthwiseConv2d(args: {\n  inputs: DepthwiseConv2dNativeInputs,\n  backend: BackendWasm,\n  attrs: DepthwiseConv2dNativeAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n\n  const {x, filter} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const {strides, dilations, pad, dimRoundingMode} = attrs;\n\n  const $dilations = dilations == null ? [1, 1] : dilations;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides,\n      ($dilations as number | [number, number]), pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend DepthwiseConv2dNative does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmDepthwiseConv2d(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterId, filterHeight,\n      filterWidth, padTop, padRight, padBottom, padLeft, isSamePad,\n      dilationHeight, dilationWidth, strideHeight, strideWidth, inputChannels,\n      outputChannels, outId);\n  return out;\n}\n\nexport const depthwiseConv2dNativeConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: depthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Elu, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const eluConfig: KernelConfig = createUnaryKernelConfig(Elu);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Equal, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const equalConfig: KernelConfig =\n    createBinaryKernelConfig(Equal, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Exp, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const expConfig: KernelConfig = createUnaryKernelConfig(Exp, 'float32');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ExpandDims, ExpandDimsAttrs, ExpandDimsInputs, KernelConfig, KernelFunc, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\n\nexport function expandDims(args: {\n  inputs: ExpandDimsInputs,\n  attrs: ExpandDimsAttrs,\n  backend: BackendWasm\n}) {\n  const {inputs, attrs, backend} = args;\n  const {input} = inputs;\n  const {dim} = attrs;\n\n  const inputRank = input.shape.length;\n  const newShape = input.shape.slice();\n  let $dim = dim;\n  if (dim < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(\n        -(inputRank + 1) <= dim,\n        () => `Axis must be in the interval [${- (inputRank + 1)}, ${\n            inputRank}]`);\n    $dim = inputRank + dim + 1;\n  }\n  newShape.splice($dim, 0, 1);\n\n  return reshape({inputs: {x: input}, backend, attrs: {shape: newShape}});\n}\n\nexport const expandDimsConfig: KernelConfig = {\n  kernelName: ExpandDims,\n  backendName: 'wasm',\n  kernelFunc: expandDims as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {Fill, FillAttrs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function fill(args: {attrs: FillAttrs, backend: BackendWasm}) {\n  const {attrs: {shape, value, dtype}, backend} = args;\n  const out = backend.makeOutput(shape, dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(value as number);\n  return out;\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'wasm',\n  kernelFunc: fill as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FlipLeftRight, FlipLeftRightInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFlipLeftRight: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFlipLeftRight = backend.wasm.cwrap(FlipLeftRight, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // outId\n  ]);\n}\n\nexport function flipLeftRight(\n    args: {inputs: FlipLeftRightInputs, backend: BackendWasm}): TensorInfo {\n  const {inputs, backend} = args;\n  const {image} = inputs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  wasmFlipLeftRight(\n      imageId, batch, imageHeight, imageWidth, numChannels, outId);\n  return out;\n}\n\nexport const flipLeftRightConfig: KernelConfig = {\n  kernelName: FlipLeftRight,\n  backendName: 'wasm',\n  kernelFunc: flipLeftRight as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Floor, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const floorConfig: KernelConfig = createUnaryKernelConfig(Floor);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FloorDiv, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const floorDivConfig: KernelConfig =\n    createBinaryKernelConfig(FloorDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {FusedBatchNorm, FusedBatchNormAttrs, FusedBatchNormInputs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmBatchNorm: (\n    xId: number, meanId: number, varianceId: number, offsetId: number,\n    scaleId: number, varianceEpsilon: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmBatchNorm = backend.wasm.cwrap(\n      FusedBatchNorm, null /* void */,\n      ['number', 'number', 'number', 'number', 'number', 'number', 'number']);\n}\n\nfunction fusedBatchNorm(args: {\n  backend: BackendWasm,\n  inputs: FusedBatchNormInputs,\n  attrs: FusedBatchNormAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {varianceEpsilon} = attrs;\n  const {x, mean, variance, offset, scale} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const meanId = backend.dataIdMap.get(mean.dataId).id;\n  const varianceId = backend.dataIdMap.get(variance.dataId).id;\n  const offsetId = offset != null ? backend.dataIdMap.get(offset.dataId).id : 0;\n  const scaleId = scale != null ? backend.dataIdMap.get(scale.dataId).id : 0;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmBatchNorm(\n      xId, meanId, varianceId, offsetId, scaleId, varianceEpsilon, outId);\n  return out;\n}\n\nexport const fusedBatchNormConfig: KernelConfig = {\n  kernelName: FusedBatchNorm,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedBatchNorm as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedConv2D, FusedConv2DAttrs, FusedConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedConv2d = backend.wasm.cwrap(FusedConv2D, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterId\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // biasId\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // isSamePad\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // activation\n    'number',  // preluActivationWeightsId\n    'number',  // leakyreluAlpha\n    'number',  // outId\n  ]);\n}\n\nfunction fusedConv2d(args: {\n  inputs: FusedConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedConv2DConfig: KernelConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, FusedDepthwiseConv2D, FusedDepthwiseConv2DAttrs, FusedDepthwiseConv2DInputs, KernelConfig, KernelFunc, Tensor4D} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {FusableActivation} from './types';\n\nlet wasmFusedDepthwiseConv2d:\n    (xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n     filterId: number, filterHeight: number, filterWidth: number,\n     biasId: number, padTop: number, padRight: number, padBottom: number,\n     padLeft: number, isSamePad: number, dilationHeight: number,\n     dilationWidth: number, strideHeight: number, strideWidth: number,\n     inputChannels: number, outputChannels: number, activation: number,\n     preluActivationWeightsId: number, leakyreluAlpha: number, outId: number) =>\n        void;\n\nfunction setup(backend: BackendWasm) {\n  wasmFusedDepthwiseConv2d =\n      backend.wasm.cwrap(FusedDepthwiseConv2D, null /* void */, [\n        'number',  // xId\n        'number',  // batchSize\n        'number',  // inputHeight\n        'number',  // inputWidth\n        'number',  // filterId\n        'number',  // filterHeight\n        'number',  // filterWidth\n        'number',  // biasId\n        'number',  // padTop\n        'number',  // padRight\n        'number',  // padBottom\n        'number',  // padLeft\n        'number',  // isSamePad\n        'number',  // dilationHeight\n        'number',  // dilationWidth\n        'number',  // strideHeight\n        'number',  // strideWidth\n        'number',  // inputChannels\n        'number',  // outputChannels\n        'number',  // activation\n        'number',  // preluActivationWeightsId\n        'number',  // leakyreluAlpha\n        'number',  // outId\n      ]);\n}\n\nfunction fusedDepthwiseConv2d(args: {\n  inputs: FusedDepthwiseConv2DInputs,\n  backend: BackendWasm,\n  attrs: FusedDepthwiseConv2DAttrs\n}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter, bias, preluActivationWeights} = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dataFormat,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      (x as Tensor4D).shape, (filter as Tensor4D).shape, strides, dilations,\n      pad, dimRoundingMode, true /* depthwise */);\n\n  const fusedActivation =\n      FusableActivation[activation as {} as keyof typeof FusableActivation];\n  if (fusedActivation == null) {\n    throw new Error(\n        `${activation} activation not yet supported for FusedDepthwiseConv2D ` +\n        `in the wasm backend.`);\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const filterId = backend.dataIdMap.get(filter.dataId).id;\n\n  const outputChannels = convInfo.outChannels;\n\n  let biasId = 0;\n  if (bias != null) {\n    const biasData = backend.dataIdMap.get(bias.dataId);\n    if (biasData.shape.length !== 1) {\n      throw new Error(\n          `FusedDepthwiseConv2D only supports rank-1 bias but got ` +\n          `rank ${biasData.shape.length}.`);\n    }\n    if (biasData.shape[0] !== outputChannels) {\n      throw new Error(\n          `FusedDepthwiseConv2D bias shape (${biasData.shape}) does not ` +\n          `match the number of output channels (${outputChannels})`);\n    }\n    biasId = biasData.id;\n  }\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const isSamePad = convInfo.padInfo.type === 'SAME' ? 1 : 0;\n  const batchSize = convInfo.batchSize;\n  const inHeight = convInfo.inHeight;\n  const inWidth = convInfo.inWidth;\n\n  if (dataFormat !== 'NHWC') {\n    throw new Error(\n        `wasm backend FusedDepthwiseConv2D does not support dataFormat:'` +\n        `${dataFormat}'. Please use 'NHWC'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const preluActivationWeightsId = preluActivationWeights == null ?\n      0 :\n      backend.dataIdMap.get(preluActivationWeights.dataId).id;\n\n  wasmFusedDepthwiseConv2d(\n      xId, batchSize, inHeight, inWidth, filterId, filterHeight, filterWidth,\n      biasId, padTop, padRight, padBottom, padLeft, isSamePad, dilationHeight,\n      dilationWidth, strideHeight, strideWidth, inputChannels, outputChannels,\n      fusedActivation, preluActivationWeightsId, leakyreluAlpha || 0, outId);\n\n  return out;\n}\n\nexport const fusedDepthwiseConv2DConfig: KernelConfig = {\n  kernelName: FusedDepthwiseConv2D,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: fusedDepthwiseConv2d as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {gather_util, GatherNd, GatherNdInputs, KernelConfig, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmGatherNd: (\n    xId: number, dtype: CppDType, indicesId: number, numSlices: number,\n    sliceRank: number, sliceSize: number, strides: Uint8Array, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGatherNd = backend.wasm.cwrap(GatherNd, null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'number',  // indicesId\n    'number',  // numSlices\n    'number',  // sliceRank\n    'number',  // sliceSize\n    'array',   // strides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherNd(args: {backend: BackendWasm, inputs: GatherNdInputs}):\n    TensorInfo {\n  const {backend, inputs} = args;\n  const {params, indices} = inputs;\n\n  const [resultShape, numSlices, sliceSize, strides] =\n      gather_util.prepareAndValidate(params, indices);\n\n  const out = backend.makeOutput(resultShape, params.dtype);\n  if (numSlices === 0) {\n    return out;\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  const xData = backend.dataIdMap.get(params.dataId);\n  const xId = xData.id;\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmGatherNd(\n      xId, CppDType[params.dtype], indicesId, numSlices, sliceRank, sliceSize,\n      stridesBytes, outId);\n\n  return out;\n}\n\nexport const gatherNdConfig: KernelConfig = {\n  kernelName: GatherNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherNd\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, GatherV2, GatherV2Attrs, GatherV2Inputs, KernelConfig, KernelFunc, Tensor, TensorInfo, TypedArray, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {reshape} from './Reshape';\nimport {CppDType} from './types';\n\nlet wasmGather: (\n    xId: number, dtype: CppDType, xStrides: Uint8Array, stridesSize: number,\n    indicesId: number, batchSize: number, outStrides: Uint8Array,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmGather = backend.wasm.cwrap('Gather', null /*void*/, [\n    'number',  // xId\n    'number',  // dtype\n    'array',   // xStrides\n    'number',  // stridesSize\n    'number',  // indicesId\n    'number',  // batchSize\n    'array',   // outStrides\n    'number'   // outId\n  ]);\n}\n\nfunction gatherV2(\n    args: {backend: BackendWasm, inputs: GatherV2Inputs, attrs: GatherV2Attrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x, indices} = inputs;\n  const {axis, batchDims} = attrs;\n\n  // Throw error when any index is out of bound.\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const indicesVals = backend.readSync(indices.dataId) as TypedArray;\n  const axisDim = x.shape[parsedAxis];\n  for (let i = 0; i < indicesVals.length; ++i) {\n    const index = indicesVals[i];\n    util.assert(\n        index <= axisDim - 1 && index >= 0,\n        () =>\n            `GatherV2: the index value ${index} is not in [0, ${axisDim - 1}]`);\n  }\n\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(\n      x as Tensor, indices as Tensor, parsedAxis, batchDims);\n\n  const flattenX = reshape({\n    inputs: {x},\n    attrs: {\n      shape: [\n        shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n        shapeInfo.sliceSize\n      ]\n    },\n    backend\n  });\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const flattenIndex = reshape({\n    inputs: {x: indices},\n    attrs: {shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]},\n    backend\n  });\n  const flattenOutputShape = [\n    shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n    shapeInfo.sliceSize\n  ];\n\n  const out = backend.makeOutput(flattenOutputShape, x.dtype);\n  if (util.sizeFromShape(x.shape) === 0) {\n    return out;\n  }\n  const stridesSize = flattenX.shape.length - 1;\n\n  const xData = backend.dataIdMap.get(flattenX.dataId);\n  const xId = xData.id;\n\n  const indicesData = backend.dataIdMap.get(flattenIndex.dataId);\n  const indicesId = indicesData.id;\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const xStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenX.shape)).buffer);\n  const outStridesBytes = new Uint8Array(\n      new Int32Array(util.computeStrides(flattenOutputShape)).buffer);\n\n  wasmGather(\n      xId, CppDType[x.dtype], xStridesBytes, stridesSize, indicesId,\n      shapeInfo.batchSize, outStridesBytes, outId);\n\n  backend.disposeData(flattenX.dataId);\n  backend.disposeData(flattenIndex.dataId);\n\n  // reshape\n  out.shape = shapeInfo.outputShape;\n  return out;\n}\n\nexport const gatherV2Config: KernelConfig = {\n  kernelName: GatherV2,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: gatherV2 as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Greater, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterConfig: KernelConfig =\n    createBinaryKernelConfig(Greater, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GreaterEqual, KernelConfig} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = false;\nexport const greaterEqualConfig: KernelConfig =\n    createBinaryKernelConfig(GreaterEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmFunc: (\n    xId: number, dtype: number, leakyreluAlpha: number, outId: number) => void;\n\nfunction setupFunc(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(LeakyRelu, null /* void */, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // leakyrelu_alpha\n    'number',  // out_id\n  ]);\n}\n\nexport function leakyRelu(\n    args:\n        {inputs: LeakyReluInputs, attrs: LeakyReluAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {alpha}, backend} = args;\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  // According to TF API, LeakyRelu returns float32 when input is either float32\n  // or int32.\n  const out = backend.makeOutput(x.shape, 'float32');\n\n  if (util.sizeFromShape(x.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmFunc(xId, CppDType[x.dtype], alpha, outId);\n  }\n\n  return out;\n}\n\nexport const leakyReluConfig: KernelConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'wasm',\n  setupFunc,\n  kernelFunc: leakyRelu as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Less} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessConfig: KernelConfig =\n    createBinaryKernelConfig(Less, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, LessEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const lessEqualConfig: KernelConfig =\n    createBinaryKernelConfig(LessEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Log} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const logConfig: KernelConfig = createUnaryKernelConfig(Log);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, LogicalAnd} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const logicalAndConfig: KernelConfig =\n    createBinaryKernelConfig(LogicalAnd, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Max, MaxAttrs, MaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMax: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMax = backend.wasm.cwrap(Max, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction max(args: {backend: BackendWasm, inputs: MaxInputs, attrs: MaxAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {reductionIndices: axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    input = transposed;\n    inputId = transposedId;\n  }\n\n  const inputRank = input.shape.length;\n  backend_util.assertAxesAreInnerMostDims('max', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, x.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMax(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const maxConfig: KernelConfig = {\n  kernelName: Max,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: max as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Maximum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const maximumConfig: KernelConfig =\n    createBinaryKernelConfig(Maximum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, MaxPool, MaxPoolAttrs, MaxPoolInputs, Tensor4D, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmMaxPool: (\n    xId: number, batchSize: number, inputHeight: number, inputWidth: number,\n    filterHeight: number, filterWidth: number, padTop: number, padRight: number,\n    padBottom: number, padLeft: number, dilationHeight: number,\n    dilationWidth: number, strideHeight: number, strideWidth: number,\n    inputChannels: number, outputChannels: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMaxPool = backend.wasm.cwrap(MaxPool, null /* void */, [\n    'number',  // xId\n    'number',  // batchSize\n    'number',  // inputHeight\n    'number',  // inputWidth\n    'number',  // filterHeight\n    'number',  // filterWidth\n    'number',  // padTop\n    'number',  // padRight\n    'number',  // padBottom\n    'number',  // padLeft\n    'number',  // dilationHeight\n    'number',  // dilationWidth\n    'number',  // strideHeight\n    'number',  // strideWidth\n    'number',  // inputChannels\n    'number',  // outputChannels\n    'number',  // outId\n  ]);\n}\n\nfunction maxPool(\n    args: {inputs: MaxPoolInputs, backend: BackendWasm, attrs: MaxPoolAttrs}) {\n  const {inputs, attrs, backend} = args;\n\n  const x = inputs.x as Tensor4D;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  // TF API supports int32 input. CPU and WebGL backend also support int32\n  // input. WASM backend doesn't support it because it uses xnnpack which only\n  // supports float32.\n  //\n  // Add the following assert only for the WASM backend instead of at core op\n  // level.\n  //\n  // TODO: add support for int32 input.\n  util.assert(\n      x.dtype === 'float32',\n      () =>\n          `Error in MaxPool: only float32 input is supported. Got ${x.dtype}.`);\n\n  const {filterSize, strides, pad, dimRoundingMode} = attrs;\n  const convInfo = backend_util.computePool2DInfo(\n      x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode);\n\n  const filterHeight = convInfo.filterHeight;\n  const filterWidth = convInfo.filterWidth;\n  const padTop = convInfo.padInfo.top;\n  const padRight = convInfo.padInfo.right;\n  const padBottom = convInfo.padInfo.bottom;\n  const padLeft = convInfo.padInfo.left;\n  const dilationHeight = convInfo.dilationHeight;\n  const dilationWidth = convInfo.dilationWidth;\n  const strideHeight = convInfo.strideHeight;\n  const strideWidth = convInfo.strideWidth;\n  const inputChannels = convInfo.inChannels;\n  const outputChannels = convInfo.outChannels;\n\n  if (convInfo.dataFormat !== 'channelsLast') {\n    throw new Error(\n        `wasm backend does not support dataFormat:'` +\n        `${convInfo.dataFormat}'. Please use 'channelsLast'.`);\n  }\n\n  const out = backend.makeOutput(convInfo.outShape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmMaxPool(\n      xId, x.shape[0], x.shape[1], x.shape[2], filterHeight, filterWidth,\n      padTop, padRight, padBottom, padLeft, dilationHeight, dilationWidth,\n      strideHeight, strideWidth, inputChannels, outputChannels, outId);\n  return out;\n}\n\nexport const maxPoolConfig: KernelConfig = {\n  kernelName: MaxPool,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: maxPool as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Mean, MeanAttrs, MeanInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {cast} from './Cast';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nlet wasmMean: (xId: number, reduceSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMean =\n      backend.wasm.cwrap(Mean, null /*void*/, ['number, number, number']);\n}\n\nexport function mean(\n    args: {backend: BackendWasm, inputs: MeanInputs, attrs: MeanAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'mean', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput =\n        cast({backend, inputs: {x: input}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMean(inputId, reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n\n  return out;\n}\n\nexport const meanConfig: KernelConfig = {\n  kernelName: Mean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: mean as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmMin: (xId: number, dtype: number, reduceSize: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmMin = backend.wasm.cwrap(Min, null /*void*/, [\n    'number',  // x_id\n    'number',  // dtype\n    'number',  // reduce_size\n    'number',  // out_id\n  ]);\n}\n\nfunction min(args: {backend: BackendWasm, inputs: MinInputs, attrs: MinAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n    }\n  }\n\n  const inputRank = input.shape.length;\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, inputRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmMin(inputId, CppDType[x.dtype], reduceSize, outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: min as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Minimum} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const minimumConfig: KernelConfig =\n    createBinaryKernelConfig(Minimum, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, MirrorPad, MirrorPadAttrs, MirrorPadInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\n// Must match enum in MirrorPad.cc\nenum MirrorPaddingMode {\n  reflect = 0,\n  symmetric = 1\n}\n\nlet wasmMirrorPad: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array, mode: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmMirrorPad = backend.wasm.cwrap(MirrorPad, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // mode\n    'number',  // outId\n  ]);\n}\n\nfunction mirrorPad(args: {\n  inputs: MirrorPadInputs,\n  backend: BackendWasm,\n  attrs: MirrorPadAttrs\n}) {\n  const {inputs: {x}, backend, attrs: {paddings, mode}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmMirrorPad(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, MirrorPaddingMode[mode], outId);\n  return out;\n}\n\nexport const mirrorPadConfig: KernelConfig = {\n  kernelName: MirrorPad,\n  backendName: 'wasm',\n  kernelFunc: mirrorPad as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Multiply} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const multiplyConfig: KernelConfig =\n    createBinaryKernelConfig(Multiply, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Neg} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const negConfig: KernelConfig = createUnaryKernelConfig(Neg);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendWasm} from '../backend_wasm';\n\n// Analogous to `struct Result` in `non_max_suppression_impl.h`.\ninterface Result {\n  pSelectedIndices: number;\n  selectedSize: number;\n  pSelectedScores: number;\n  pValidOutputs: number;\n}\n/**\n * Parse the result of the c++ method, which has the shape equivalent to\n * `Result`.\n */\nexport function parseResultStruct(\n    backend: BackendWasm, resOffset: number): Result {\n  const result = new Int32Array(backend.wasm.HEAPU8.buffer, resOffset, 4);\n  const pSelectedIndices = result[0];\n  const selectedSize = result[1];\n  const pSelectedScores = result[2];\n  const pValidOutputs = result[3];\n  // Since the result was allocated on the heap, we have to delete it.\n  backend.wasm._free(resOffset);\n  return {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs};\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV3,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV3Inputs,\n  attrs: NonMaxSuppressionV3Attrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset =\n      wasmFunc(boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V3, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  return selectedIndicesTensor;\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc: (\n    boxesId: number, scoresId: number, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number,\n    padToMaxOutputSize: boolean) => number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV4,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'bool',    // padToMaxOutputSize\n      ]);\n}\n\nfunction nonMaxSuppressionV4(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV4Inputs,\n  attrs: NonMaxSuppressionV4Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using scores for V4, we have to delete it from the heap.\n  backend.wasm._free(pSelectedScores);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n\n  const validOutputsTensor = backend.makeOutput([], 'int32', pValidOutputs);\n\n  return [selectedIndicesTensor, validOutputsTensor];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, NonMaxSuppressionV5, NonMaxSuppressionV5Attrs, NonMaxSuppressionV5Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {parseResultStruct} from './NonMaxSuppression_util';\n\nlet wasmFunc:\n    (boxesId: number, scoresId: number, maxOutputSize: number,\n     iouThreshold: number, scoreThreshold: number, softNmsSigma: number) =>\n        number;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(\n      NonMaxSuppressionV5,\n      'number',  // Result*\n      [\n        'number',  // boxesId\n        'number',  // scoresId\n        'number',  // maxOutputSize\n        'number',  // iouThreshold\n        'number',  // scoreThreshold\n        'number',  // softNmsSigma\n      ]);\n}\n\nfunction kernelFunc(args: {\n  backend: BackendWasm,\n  inputs: NonMaxSuppressionV5Inputs,\n  attrs: NonMaxSuppressionV5Attrs\n}): TensorInfo[] {\n  const {backend, inputs, attrs} = args;\n  const {iouThreshold, maxOutputSize, scoreThreshold, softNmsSigma} = attrs;\n  const {boxes, scores} = inputs;\n\n  const boxesId = backend.dataIdMap.get(boxes.dataId).id;\n  const scoresId = backend.dataIdMap.get(scores.dataId).id;\n\n  const resOffset = wasmFunc(\n      boxesId, scoresId, maxOutputSize, iouThreshold, scoreThreshold,\n      softNmsSigma);\n\n  const {pSelectedIndices, selectedSize, pSelectedScores, pValidOutputs} =\n      parseResultStruct(backend, resOffset);\n\n  // Since we are not using validOutputs for V5, we have to delete it from the\n  // heap.\n  backend.wasm._free(pValidOutputs);\n\n  const selectedIndicesTensor =\n      backend.makeOutput([selectedSize], 'int32', pSelectedIndices);\n  const selectedScoresTensor =\n      backend.makeOutput([selectedSize], 'float32', pSelectedScores);\n\n  return [selectedIndicesTensor, selectedScoresTensor];\n}\n\nexport const nonMaxSuppressionV5Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: kernelFunc as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, NotEqual} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const notEqualConfig: KernelConfig =\n    createBinaryKernelConfig(NotEqual, supportsFullBroadcast, 'bool');\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmOneHot: (\n    indicesId: number, depth: number, onValue: number, offValue: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmOneHot = backend.wasm.cwrap(OneHot, null /* void */, [\n    'number',  // indices_id\n    'number',  // depth,\n    'number',  // onValue\n    'number',  // offValue\n    'number'   // out_id\n  ]);\n}\n\nfunction oneHot(\n    args: {inputs: OneHotInputs, attrs: OneHotAttrs, backend: BackendWasm}) {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {depth, onValue, offValue} = attrs;\n\n  const out = backend.makeOutput([...indices.shape, depth], 'int32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  wasmOneHot(indicesId, depth, onValue, offValue, outId);\n\n  return out;\n}\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: oneHot as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OnesLike, OnesLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction onesLike(args: {inputs: OnesLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(1);\n  return out;\n}\n\nexport const onesLikeConfig: KernelConfig = {\n  kernelName: OnesLike,\n  backendName: 'wasm',\n  kernelFunc: onesLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Pack, PackAttrs, PackInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\nimport {BackendWasm} from '../backend_wasm';\n\nimport {concat} from './Concat';\nimport {expandDims} from './ExpandDims';\n\nexport function pack(\n    args: {inputs: PackInputs, backend: BackendWasm, attrs: PackAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {axis} = attrs;\n\n  if (inputs.length === 1) {\n    return expandDims(\n        {inputs: {input: inputs[0]}, backend, attrs: {dim: axis}});\n  }\n\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n\n  inputs.forEach(t => {\n    util.assertShapesMatch(\n        shape, t.shape,\n        'All tensors passed to stack must have matching shapes');\n    util.assert(\n        dtype === t.dtype,\n        () => 'All tensors passed to stack must have matching dtypes');\n  });\n\n  const intermediateTensorInfos: TensorInfo[] = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT =\n        expandDims({inputs: {input: t}, backend, attrs: {dim: axis}});\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n\n  const result = concat({inputs: expandedTensors, backend, attrs: {axis}});\n\n  intermediateTensorInfos.forEach(t => backend.disposeData(t.dataId));\n\n  return result;\n}\n\nexport const packConfig: KernelConfig = {\n  kernelName: Pack,\n  backendName: 'wasm',\n  kernelFunc: pack as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {fill} from './Fill';\n\nimport {CppDType} from './types';\n\nlet wasmPadV2: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number, xDtype: number,\n    prePaddingsBytes: Uint8Array, postPaddingsBytes: Uint8Array,\n    constantValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPadV2 = backend.wasm.cwrap(PadV2, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'array',   // pre-paddings\n    'array',   // post-paddings\n    'number',  // constantValue\n    'number',  // outId\n  ]);\n}\n\nfunction pad(\n    args: {inputs: PadV2Inputs, backend: BackendWasm, attrs: PadV2Attrs}) {\n  const {inputs: {x}, backend, attrs: {paddings, constantValue}} = args;\n\n  const outShape = paddings.map(\n      (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n\n  if (util.sizeFromShape(x.shape) === 0) {\n    // Short-circuit the computation, since x doesn't have value, only\n    // the shape is used to compute output shape to pad.\n    return fill({\n      backend,\n      attrs: {shape: outShape, value: constantValue, dtype: x.dtype}\n    });\n  }\n\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(outShape, x.dtype);\n  const outTensorData = backend.dataIdMap.get(out.dataId);\n  const outId = outTensorData.id;\n\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  const prePaddingsFlat = paddings.map(padTuple => padTuple[0]);\n  const postPaddingsFlat = paddings.map(padTuple => padTuple[1]);\n  const prePaddingsBytes =\n      new Uint8Array(new Int32Array(prePaddingsFlat).buffer);\n  const postPaddingsBytes =\n      new Uint8Array(new Int32Array(postPaddingsFlat).buffer);\n\n  wasmPadV2(\n      xId, xShapeBytes, x.shape.length, CppDType[x.dtype], prePaddingsBytes,\n      postPaddingsBytes, constantValue, outId);\n  return out;\n}\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'wasm',\n  kernelFunc: pad as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Pow} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = false;\nexport const powConfig: KernelConfig =\n    createBinaryKernelConfig(Pow, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Prelu, PreluInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmPrelu: (xId: number, weightsId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmPrelu = backend.wasm.cwrap(Prelu, null /* void */, [\n    'number',  // x_id\n    'number',  // weights_id\n    'number'   // out_id\n  ]);\n}\n\nfunction prelu(args: {inputs: PreluInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {x, alpha} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const weightsId = backend.dataIdMap.get(alpha.dataId).id;\n\n  let inputId = xId;\n  const input = x;\n  let castedInput = input;\n  if (input.dtype !== 'float32') {\n    castedInput = cast({backend, inputs: {x}, attrs: {dtype: 'float32'}});\n    inputId = backend.dataIdMap.get(castedInput.dataId).id;\n  }\n\n  const out = backend.makeOutput(x.shape, 'float32');\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmPrelu(inputId, weightsId, outId);\n\n  if (input.dtype !== 'float32') {\n    backend.disposeData(castedInput.dataId);\n  }\n  return out;\n}\n\nexport const preluConfig: KernelConfig = {\n  kernelName: Prelu,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prelu as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Prod, ProdAttrs, ProdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\n\nimport {CppDType} from './types';\n\nlet wasmProd: (\n    xId: number, reduceSize: number,\n    dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmProd = backend.wasm.cwrap(Prod, null /*void*/, [\n    'number',\n    'number',\n    'number',\n    'number'\n  ]);\n}\n\nfunction prod(args: {\n  backend: BackendWasm,\n  inputs: ProdInputs,\n  attrs: ProdAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'prod', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmProd(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const prodConfig: KernelConfig = {\n  kernelName: Prod,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: prod as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Range, RangeAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {rangeImplCPU} from '../kernel_utils/shared';\n\nexport const range =\n    (args: {backend: BackendWasm, attrs: RangeAttrs}): TensorInfo => {\n      const {backend, attrs} = args;\n      const {start, stop, step, dtype} = attrs;\n      const values = rangeImplCPU(start, stop, step, dtype);\n\n      const out = backend.makeOutput([values.length], dtype);\n      const outVals = backend.typedArrayFromHeap(out);\n      outVals.set(values);\n      return out;\n    };\n\nexport const rangeConfig: KernelConfig = {\n  kernelName: Range,\n  backendName: 'wasm',\n  kernelFunc: range as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nexport function rangeImpl(start, stop, step, dtype) {\n    const sameStartStop = start === stop;\n    const increasingRangeNegativeStep = start < stop && step < 0;\n    const decreasingRangePositiveStep = stop < start && step > 1;\n    if (sameStartStop || increasingRangeNegativeStep ||\n        decreasingRangePositiveStep) {\n        return util.makeZerosTypedArray(0, dtype);\n    }\n    const numElements = Math.abs(Math.ceil((stop - start) / step));\n    const values = util.makeZerosTypedArray(numElements, dtype);\n    if (stop < start && step === 1) {\n        // Auto adjust the step's sign if it hasn't been set\n        // (or was set to 1)\n        step = -1;\n    }\n    values[0] = start;\n    for (let i = 1; i < values.length; i++) {\n        values[i] = values[i - 1] + step;\n    }\n    return values;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFuZ2VfaW1wbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtYmFja2VuZC1jcHUvc3JjL2tlcm5lbHMvUmFuZ2VfaW1wbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQWMsSUFBSSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFeEQsTUFBTSxVQUFVLFNBQVMsQ0FDckIsS0FBYSxFQUFFLElBQVksRUFBRSxJQUFZLEVBQ3pDLEtBQXdCO0lBQzFCLE1BQU0sYUFBYSxHQUFHLEtBQUssS0FBSyxJQUFJLENBQUM7SUFDckMsTUFBTSwyQkFBMkIsR0FBRyxLQUFLLEdBQUcsSUFBSSxJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFDN0QsTUFBTSwyQkFBMkIsR0FBRyxJQUFJLEdBQUcsS0FBSyxJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFFN0QsSUFBSSxhQUFhLElBQUksMkJBQTJCO1FBQzVDLDJCQUEyQixFQUFFO1FBQy9CLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMzQztJQUVELE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQy9ELE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFNUQsSUFBSSxJQUFJLEdBQUcsS0FBSyxJQUFJLElBQUksS0FBSyxDQUFDLEVBQUU7UUFDOUIsb0RBQW9EO1FBQ3BELG9CQUFvQjtRQUNwQixJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7S0FDWDtJQUVELE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDdEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO0tBQ2xDO0lBQ0QsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtEYXRhVHlwZU1hcCwgdXRpbH0gZnJvbSAnQHRlbnNvcmZsb3cvdGZqcy1jb3JlJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJhbmdlSW1wbChcbiAgICBzdGFydDogbnVtYmVyLCBzdG9wOiBudW1iZXIsIHN0ZXA6IG51bWJlcixcbiAgICBkdHlwZTogJ2Zsb2F0MzInfCdpbnQzMicpOiBEYXRhVHlwZU1hcFsnZmxvYXQzMicgfCAnaW50MzInXSB7XG4gIGNvbnN0IHNhbWVTdGFydFN0b3AgPSBzdGFydCA9PT0gc3RvcDtcbiAgY29uc3QgaW5jcmVhc2luZ1JhbmdlTmVnYXRpdmVTdGVwID0gc3RhcnQgPCBzdG9wICYmIHN0ZXAgPCAwO1xuICBjb25zdCBkZWNyZWFzaW5nUmFuZ2VQb3NpdGl2ZVN0ZXAgPSBzdG9wIDwgc3RhcnQgJiYgc3RlcCA+IDE7XG5cbiAgaWYgKHNhbWVTdGFydFN0b3AgfHwgaW5jcmVhc2luZ1JhbmdlTmVnYXRpdmVTdGVwIHx8XG4gICAgICBkZWNyZWFzaW5nUmFuZ2VQb3NpdGl2ZVN0ZXApIHtcbiAgICByZXR1cm4gdXRpbC5tYWtlWmVyb3NUeXBlZEFycmF5KDAsIGR0eXBlKTtcbiAgfVxuXG4gIGNvbnN0IG51bUVsZW1lbnRzID0gTWF0aC5hYnMoTWF0aC5jZWlsKChzdG9wIC0gc3RhcnQpIC8gc3RlcCkpO1xuICBjb25zdCB2YWx1ZXMgPSB1dGlsLm1ha2VaZXJvc1R5cGVkQXJyYXkobnVtRWxlbWVudHMsIGR0eXBlKTtcblxuICBpZiAoc3RvcCA8IHN0YXJ0ICYmIHN0ZXAgPT09IDEpIHtcbiAgICAvLyBBdXRvIGFkanVzdCB0aGUgc3RlcCdzIHNpZ24gaWYgaXQgaGFzbid0IGJlZW4gc2V0XG4gICAgLy8gKG9yIHdhcyBzZXQgdG8gMSlcbiAgICBzdGVwID0gLTE7XG4gIH1cblxuICB2YWx1ZXNbMF0gPSBzdGFydDtcbiAgZm9yIChsZXQgaSA9IDE7IGkgPCB2YWx1ZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YWx1ZXNbaV0gPSB2YWx1ZXNbaSAtIDFdICsgc3RlcDtcbiAgfVxuICByZXR1cm4gdmFsdWVzO1xufVxuIl19","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, RealDiv} from '@tensorflow/tfjs-core';\n\nimport {createBinaryKernelConfig} from './binary_kernel';\n\nconst supportsFullBroadcast = true;\nexport const realDivConfig: KernelConfig =\n    createBinaryKernelConfig(RealDiv, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const reluConfig: KernelConfig = createUnaryKernelConfig(Relu);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Relu6} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const relu6Config: KernelConfig = createUnaryKernelConfig(Relu6);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ResizeBilinear, ResizeBilinearAttrs, ResizeBilinearInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {cast} from './Cast';\n\nlet wasmResizeBilinear: (\n    xId: number, batch: number, oldHeight: number, oldWidth: number,\n    numChannels: number, newHeight: number, newWidth: number,\n    alignCorners: number, halfPixelCenters: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmResizeBilinear = backend.wasm.cwrap(ResizeBilinear, null /*void*/, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // oldHeight\n    'number',  // oldWidth\n    'number',  // numChannels\n    'number',  // newHeight\n    'number',  // newWidth\n    'number',  // alignCorners\n    'number',  // halfPixelCenters\n    'number'   // outId\n  ]);\n}\n\nfunction resizeBilinear(args: {\n  backend: BackendWasm,\n  inputs: ResizeBilinearInputs,\n  attrs: ResizeBilinearAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n\n  const {images} = inputs;\n  const {alignCorners, halfPixelCenters, size} = attrs;\n  const [newHeight, newWidth] = size;\n\n  const [batch, oldHeight, oldWidth, numChannels] = images.shape;\n  const outShape = [batch, newHeight, newWidth, numChannels];\n\n  let xData = backend.dataIdMap.get(images.dataId);\n  let castedData;\n  if (xData.dtype !== 'float32') {\n    castedData =\n        cast({backend, inputs: {x: images}, attrs: {dtype: 'float32'}});\n    xData = backend.dataIdMap.get(castedData.dataId);\n  }\n  const xId = xData.id;\n\n  const out = backend.makeOutput(outShape, 'float32');\n  if (util.sizeFromShape(images.shape) === 0) {\n    return out;\n  }\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  wasmResizeBilinear(\n      xId, batch, oldHeight, oldWidth, numChannels, newHeight, newWidth,\n      alignCorners ? 1 : 0, halfPixelCenters ? 1 : 0, outId);\n\n  if (castedData != null) {\n    backend.disposeData(castedData.dataId);\n  }\n\n  return out;\n}\n\nexport const resizeBilinearConfig: KernelConfig = {\n  kernelName: ResizeBilinear,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: resizeBilinear as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reverse, ReverseAttrs, ReverseInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {identity} from './Identity';\nimport {reshape} from './Reshape';\n\nlet wasmReverse: (\n    xId: number, axes: Uint8Array, axesLength: number, outShape: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmReverse = backend.wasm.cwrap(Reverse, null, [\n    'number',  // x_id\n    'array',   // axes\n    'number',  // axes_length\n    'array',   // out_shape\n    'number',  // out_shape_length\n    'number'   // out_id\n  ]);\n}\n\nexport function reverse(\n    args: {inputs: ReverseInputs, backend: BackendWasm, attrs: ReverseAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {dims} = attrs;\n\n  const axes = util.parseAxisParam(dims, x.shape);\n\n  if (x.shape.length === 0) {\n    return identity({inputs: {x}, backend});\n  }\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const axesBytes = new Uint8Array(new Int32Array(axes).buffer);\n  const outShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n\n  wasmReverse(\n      xId, axesBytes, axes.length, outShapeBytes, x.shape.length, outId);\n\n  const reshaped =\n      reshape({inputs: {x: out}, attrs: {shape: x.shape}, backend});\n\n  backend.disposeData(out.dataId);\n  return reshaped;\n}\n\nexport const reverseConfig: KernelConfig = {\n  kernelName: Reverse,\n  backendName: 'wasm',\n  kernelFunc: reverse as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, RotateWithOffset, RotateWithOffsetAttrs, RotateWithOffsetInputs, TensorInfo} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmRotate: (\n    xId: number, batch: number, imageHeight: number, imageWidth: number,\n    numChannels: number, radians: number, centerX: number, centerY: number,\n    fillBytes: Uint8Array, fillLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmRotate = backend.wasm.cwrap(RotateWithOffset, null /* void */, [\n    'number',  // xId\n    'number',  // batch\n    'number',  // imageHeight\n    'number',  // imageWidth\n    'number',  // numChannels\n    'number',  // radians\n    'number',  // centerX\n    'number',  // centerY\n    'array',   // fillBytes\n    'number',  // fillLength\n    'number',  // outId\n  ]);\n}\n\nexport function rotateWithOffset(args: {\n  inputs: RotateWithOffsetInputs,\n  backend: BackendWasm,\n  attrs: RotateWithOffsetAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {image} = inputs;\n  const {radians, fillValue, center} = attrs;\n\n  const out = backend.makeOutput(image.shape, image.dtype);\n  const imageId = backend.dataIdMap.get(image.dataId).id;\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n\n  const [centerX, centerY] =\n      backend_util.getImageCenter(center, imageHeight, imageWidth);\n\n  const fillIsBlack = fillValue === 0;\n  const fullOpacityValue = 255;\n\n  const fillValues = typeof fillValue === 'number' ?\n      [fillValue, fillValue, fillValue, fillIsBlack ? 0 : fullOpacityValue] :\n      [...fillValue, fullOpacityValue];\n  const fillBytes = new Uint8Array(new Int32Array(fillValues).buffer);\n\n  wasmRotate(\n      imageId, batch, imageHeight, imageWidth, numChannels, radians, centerX,\n      centerY, fillBytes, fillValues.length, outId);\n  return out;\n}\n\nexport const rotateWithOffsetConfig: KernelConfig = {\n  kernelName: RotateWithOffset,\n  backendName: 'wasm',\n  kernelFunc: rotateWithOffset as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Round} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\n\nexport const roundConfig: KernelConfig = createUnaryKernelConfig(Round);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Rsqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const rsqrtConfig: KernelConfig = createUnaryKernelConfig(Rsqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, scatter_util, ScatterNd, ScatterNdAttrs, ScatterNdInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmScatterNd: (\n    indicesId: number, updatesId: number, dtype: CppDType, sliceRank: number,\n    numUpdates: number, sliceSize: number, strides: Uint8Array,\n    outputSize: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmScatterNd = backend.wasm.cwrap(ScatterNd, null /*void*/, [\n    'number',  // indicesId\n    'number',  // updatesId\n    'number',  // dtype\n    'number',  // sliceRank\n    'number',  // numUpdates\n    'number',  // sliceSize\n    'array',   // strides\n    'number',  // outputSize\n    'number'   // outId\n  ]);\n}\n\nfunction scatterNd(\n    args:\n        {backend: BackendWasm, inputs: ScatterNdInputs, attrs: ScatterNdAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {indices, updates} = inputs;\n  const {shape} = attrs;\n\n  const out = backend.makeOutput(shape, updates.dtype);\n  if (util.sizeFromShape(shape) === 0) {\n    return out;\n  }\n\n  const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n      scatter_util.calculateShapes(updates, indices, shape);\n\n  const indicesData = backend.dataIdMap.get(indices.dataId);\n  const indicesId = indicesData.id;\n\n  const updatesData = backend.dataIdMap.get(updates.dataId);\n  const updatesId = updatesData.id;\n\n  const stridesBytes = new Uint8Array(new Int32Array(strides).buffer);\n\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmScatterNd(\n      indicesId, updatesId, CppDType[updates.dtype], sliceRank, numUpdates,\n      sliceSize, stridesBytes, outputSize, outId);\n\n  return out;\n}\n\nexport const scatterNdConfig: KernelConfig = {\n  kernelName: ScatterNd,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: scatterNd as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Select, SelectInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSelect: (\n    conditionId: number, tId: number, eId: number, offset: number,\n    outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmSelect = backend.wasm.cwrap('SelectV2', null, [\n    'number',  // conditionId\n    'number',  // tId\n    'number',  // eId\n    'number',  // offset\n    'number',  // outId\n  ]);\n}\n\nfunction select(args: {inputs: SelectInputs, backend: BackendWasm}) {\n  const {inputs, backend} = args;\n  const {condition, t, e} = inputs;\n\n  const conditionId = backend.dataIdMap.get(condition.dataId).id;\n  const tId = backend.dataIdMap.get(t.dataId).id;\n  const eId = backend.dataIdMap.get(e.dataId).id;\n  const out = backend.makeOutput(t.shape, t.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const cRank = condition.shape.length;\n  const tRank = t.shape.length;\n\n  const offset = cRank === 0 || cRank > 1 || tRank === 1 ?\n      1 :\n      util.sizeFromShape(t.shape.slice(1));\n\n  wasmSelect(conditionId, tId, eId, offset, outId);\n  return out;\n}\n\nexport const selectConfig: KernelConfig = {\n  kernelName: Select,\n  backendName: 'wasm',\n  kernelFunc: select as {} as KernelFunc,\n  setupFunc: setup\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Sigmoid, SigmoidInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Sigmoid, null /* void */, ['number', 'number']);\n}\n\nfunction sigmoid(args: {backend: BackendWasm, inputs: SigmoidInputs}):\n    TensorInfo {\n  const {backend, inputs: {x}} = args;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId);\n  return out;\n}\n\nexport const sigmoidConfig: KernelConfig = {\n  kernelName: 'Sigmoid',\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sigmoid as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sin} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sinConfig: KernelConfig = createUnaryKernelConfig(Sin);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmFunc: (xId: number, outId: number, channels: number, batch: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmFunc = backend.wasm.cwrap(Softmax, null /* void */, [\n    'number',  // xId\n    'number',  // outId\n    'number',  // channels\n    'number'   // batch\n  ]);\n}\n\nfunction softmax(\n    args: {backend: BackendWasm, inputs: SoftmaxInputs, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {backend, inputs: {logits}, attrs: {dim}} = args;\n  const xId = backend.dataIdMap.get(logits.dataId).id;\n  const out = backend.makeOutput(logits.shape, logits.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const channels = logits.shape[dim];\n  const batch = util.sizeFromShape(logits.shape) / channels;\n\n  // Short-circuit zero-sized tensors.\n  if (util.sizeFromShape(out.shape) === 0) {\n    return out;\n  }\n\n  wasmFunc(xId, outId, channels, batch);\n  return out;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: softmax as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, ReshapeAttrs, ReshapeInputs, SpaceToBatchND, SpaceToBatchNDAttrs, SpaceToBatchNDInputs, TensorInfo, TransposeAttrs, TransposeInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {padV2Config} from './PadV2';\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nfunction spaceToBatchND(args: {\n  inputs: SpaceToBatchNDInputs,\n  backend: BackendWasm,\n  attrs: SpaceToBatchNDAttrs\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {blockShape, paddings} = attrs;\n\n  const prod = util.sizeFromShape(blockShape);\n\n  const completePaddings: Array<[number, number]> = [[0, 0]];\n  completePaddings.push(...(paddings as Array<[number, number]>));\n\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  const paddedX = padV2Config.kernelFunc({\n    inputs: {x},\n    backend,\n    attrs: {paddings: completePaddings, constantValue: 0}\n  }) as TensorInfo;\n\n  const reshapedPaddedShape =\n      backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(\n      reshapedPaddedShape.length, blockShape.length, false);\n\n  const flattenShape =\n      backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n\n  const reshapeInputs: ReshapeInputs = {x: paddedX};\n  const reshapeAttrs: ReshapeAttrs = {shape: reshapedPaddedShape};\n  const paddedXReshaped =\n      reshape({inputs: reshapeInputs, backend, attrs: reshapeAttrs});\n\n  const transposeInputs: TransposeInputs = {x: paddedXReshaped};\n  const transposeAttrs:\n      TransposeAttrs = {perm: permutedReshapedPaddedPermutation};\n  const paddedXT =\n      transpose({inputs: transposeInputs, backend, attrs: transposeAttrs});\n\n  const resultReshapeInputs: ReshapeInputs = {x: paddedXT};\n  const resultReshapeAttrs: ReshapeAttrs = {shape: flattenShape};\n  const result = reshape(\n      {inputs: resultReshapeInputs, backend, attrs: resultReshapeAttrs});\n\n  backend.disposeData(paddedX.dataId);\n  backend.disposeData(paddedXReshaped.dataId);\n  backend.disposeData(paddedXT.dataId);\n\n  return result;\n}\n\nexport const spaceToBatchNDConfig: KernelConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'wasm',\n  kernelFunc: spaceToBatchND as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseFillEmptyRows, SparseFillEmptyRowsInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {slice} from './Slice';\n\nimport {CppDType} from './types';\n\nlet wasmSparseFillEmptyRows: (\n    indicesId: number, valuesId: number, valuesDType: number,\n    indicesCount: number, denseRows: number, rank: number,\n    defaultValueId: number, outputIndicesId: number, outputValuesId: number,\n    emptyRowIndicatorId: number, reverseIndexMapId: number,\n    exceptionValuesId: number) => number;\n\nexport function setup(backend: BackendWasm): void {\n  wasmSparseFillEmptyRows =\n      backend.wasm.cwrap('SparseFillEmptyRows', 'number', [\n        'number',  // indicesId\n        'number',  // valuesId\n        'number',  // valuesDType\n        'number',  // indicesCount\n        'number',  // denseRows\n        'number',  // rank\n        'number',  // defaultValueId\n        'number',  // outputIndicesId\n        'number',  // outputValuesId\n        'number',  // emptyRowIndicatorId\n        'number',  // reverseIndexMapId\n        'number',  // exceptionValuesId\n      ]);\n}\n\nexport function sparseFillEmptyRows(args: {\n  backend: BackendWasm,\n  inputs: SparseFillEmptyRowsInputs,\n}): [TensorInfo, TensorInfo, TensorInfo, TensorInfo] {\n  const {backend, inputs} = args;\n  const {indices, values, denseShape, defaultValue} = inputs;\n\n  const indicesCount = indices.shape[0];\n  const rank = indices.shape[1];\n  const denseRows = backend.readSync(denseShape.dataId)[0] as number;\n\n  // Set output size to maximum possible and resize later (actual result\n  // might be smaller).\n  const maxOutputIndicesShape = [indicesCount + denseRows, rank];\n\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const valuesId = backend.dataIdMap.get(values.dataId).id;\n  const defaultValueId = backend.dataIdMap.get(defaultValue.dataId).id;\n\n  const outputIndices =\n      backend.makeOutput(maxOutputIndicesShape, indices.dtype);\n  const outputIndicesId = backend.dataIdMap.get(outputIndices.dataId).id;\n\n  const outputValues =\n      backend.makeOutput(maxOutputIndicesShape.slice(0, 1), values.dtype);\n  const outputValuesId = backend.dataIdMap.get(outputValues.dataId).id;\n\n  const emptyRowIndicator = backend.makeOutput([denseRows], 'bool');\n  const emptyRowIndicatorId =\n      backend.dataIdMap.get(emptyRowIndicator.dataId).id;\n\n  const reverseIndexMap = backend.makeOutput([indicesCount], indices.dtype);\n  const reverseIndexMapId = backend.dataIdMap.get(reverseIndexMap.dataId).id;\n\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  const outputRows = wasmSparseFillEmptyRows(\n      indicesId, valuesId, CppDType[values.dtype], indicesCount, denseRows,\n      rank, defaultValueId, outputIndicesId, outputValuesId,\n      emptyRowIndicatorId, reverseIndexMapId, exceptionValuesId);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 1: {\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(\n              exceptionValuesArray[1]);\n      break;\n    }\n    case 2: {\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 3:\n      exceptionMessage =\n          backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2],\n              exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n    backend.disposeData(emptyRowIndicator.dataId);\n    backend.disposeData(reverseIndexMap.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  let resizedIndices = outputIndices;\n  let resizedValues = outputValues;\n  // Overestimated output size.\n  if (outputRows !== maxOutputIndicesShape[0]) {\n    resizedIndices = slice({\n      inputs: {x: outputIndices},\n      attrs: {begin: 0, size: [outputRows, rank]},\n      backend\n    });\n    resizedValues = slice({\n      inputs: {x: outputValues},\n      attrs: {begin: 0, size: outputRows},\n      backend\n    });\n    backend.disposeData(outputIndices.dataId);\n    backend.disposeData(outputValues.dataId);\n  }\n\n  return [resizedIndices, resizedValues, emptyRowIndicator, reverseIndexMap];\n}\n\nexport const sparseFillEmptyRowsConfig: KernelConfig = {\n  kernelName: SparseFillEmptyRows,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseFillEmptyRows as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, SparseReshape, SparseReshapeInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmSparseReshape: (\n    inputIndicesId: number, inputShapeId: number, newShapeId: number,\n    nnz: number, newIndicesId: number, outputShapeId: number,\n    exceptionValuesId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSparseReshape = backend.wasm.cwrap(SparseReshape, null /*void*/, [\n    'number',  // inputIndicesId\n    'number',  // inputShapeId\n    'number',  // newShapeId\n    'number',  // nnz\n    'number',  // newIndicesId\n    'number',  // outputShapeId\n    'number',  // exceptionValuesId\n  ]);\n}\n\nfunction sparseReshape(args: {\n  backend: BackendWasm,\n  inputs: SparseReshapeInputs,\n}): [TensorInfo, TensorInfo] {\n  const {backend, inputs} = args;\n  const {inputIndices, inputShape, newShape} = inputs;\n\n  if (inputIndices.shape.length !== 2) {\n    throw new Error(`Input indices should be a matrix but received shape\n        ${inputIndices.shape}`);\n  }\n  if (inputShape.shape.length !== 1) {\n    throw new Error(`Input shape should be a vector but received shape\n        ${inputShape.shape}`);\n  }\n  if (newShape.shape.length !== 1) {\n    throw new Error(\n        `Target shape should be a vector but received shape ${newShape.shape}`);\n  }\n\n  const inputIndicesId = backend.dataIdMap.get(inputIndices.dataId).id;\n  const inputShapeId = backend.dataIdMap.get(inputShape.dataId).id;\n  const newShapeId = backend.dataIdMap.get(newShape.dataId).id;\n\n  const nnz = inputIndices.shape[0];\n  const outputRank = util.sizeFromShape(newShape.shape);\n\n  const newIndices = backend.makeOutput([nnz, outputRank], inputIndices.dtype);\n  const newIndicesId = backend.dataIdMap.get(newIndices.dataId).id;\n\n  const outputShape = backend.makeOutput([outputRank], newShape.dtype);\n  const outputShapeId = backend.dataIdMap.get(outputShape.dataId).id;\n\n  const exceptionValues = backend.makeOutput([3], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  wasmSparseReshape(\n      inputIndicesId, inputShapeId, newShapeId, nnz, newIndicesId,\n      outputShapeId, exceptionValuesId);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 0: {\n      exceptionMessage =\n          backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 1: {\n      exceptionMessage =\n          backend_util.getSparseReshapeNegativeOutputDimErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    }\n    case 2:\n      exceptionMessage =\n          backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();\n      break;\n    case 3: {\n      const inputShapeValues =\n          Array.from(backend.readSync(inputShape.dataId) as Int32Array),\n            outputShapeValues =\n                Array.from(backend.readSync(outputShape.dataId) as Int32Array);\n      exceptionMessage =\n          backend_util.getSparseReshapeInputOutputMultipleErrorMessage(\n              inputShapeValues, outputShapeValues);\n      break;\n    }\n    case 4: {\n      const inputShapeValues =\n          Array.from(backend.readSync(inputShape.dataId) as Int32Array),\n            outputShapeValues =\n                Array.from(backend.readSync(outputShape.dataId) as Int32Array);\n      exceptionMessage =\n          backend_util.getSparseReshapeInputOutputMismatchErrorMessage(\n              inputShapeValues, outputShapeValues);\n      break;\n    }\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(newIndices.dataId);\n    backend.disposeData(outputShape.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  return [newIndices, outputShape];\n}\n\nexport const sparseReshapeConfig: KernelConfig = {\n  kernelName: SparseReshape,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseReshape as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, SparseSegmentMeanInputs, SparseSegmentSumInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmSparseSegmentReduction: (\n    dataId: number, dtype: number, numRow: number, indicesId: number,\n    segmentIdsId: number, outputId: number, exceptionValuesId: number,\n    isMean: boolean, defaultValue: number) => void;\n\nexport function setup(backend: BackendWasm): void {\n  wasmSparseSegmentReduction =\n      backend.wasm.cwrap('SparseSegmentReduction', null /*void*/, [\n        'number',  // dataId\n        'number',  // dtype\n        'number',  // numRow\n        'number',  // indicesId\n        'number',  // segmentIdsId\n        'number',  // outputId\n        'number',  // exceptionValuesId,\n        'number',  // isMean\n        'number',  // defaultValue\n      ]);\n}\n\nexport function sparseSegmentReduction(\n    args: {\n      backend: BackendWasm,\n      inputs: SparseSegmentSumInputs|SparseSegmentMeanInputs,\n    },\n    isMean: boolean): TensorInfo {\n  const {backend, inputs} = args;\n  const {data, indices, segmentIds} = inputs;\n\n  const numIndices = indices.shape[0];\n  const segmentIdsBack =\n      (backend.readSync(segmentIds.dataId, numIndices - 1, numIndices) as\n       Int32Array)[0];\n  const lastSegmentIdPlusOne = numIndices > 0 ? segmentIdsBack + 1 : 0;\n  const outputRows = lastSegmentIdPlusOne;\n\n  if (outputRows < 0) {\n    throw (new Error(\n        backend_util\n            .getSparseSegmentReductionNegativeSegmentIdsErrorMessage()));\n  }\n\n  const outputShape = data.shape.slice();\n  outputShape[0] = outputRows;\n\n  const dataId = backend.dataIdMap.get(data.dataId).id;\n  const indicesId = backend.dataIdMap.get(indices.dataId).id;\n  const segmentIdsId = backend.dataIdMap.get(segmentIds.dataId).id;\n\n  const output = backend.makeOutput(outputShape, data.dtype);\n  const outputId = backend.dataIdMap.get(output.dataId).id;\n\n  const exceptionValues = backend.makeOutput([4], 'int32');\n  const exceptionValuesId = backend.dataIdMap.get(exceptionValues.dataId).id;\n\n  wasmSparseSegmentReduction(\n      dataId, CppDType[data.dtype], data.shape[0], indicesId, segmentIdsId,\n      outputId, exceptionValuesId, isMean, 0);\n\n  const exceptionValuesArray =\n      backend.readSync(exceptionValues.dataId) as Int32Array;\n\n  let exceptionMessage: string;\n  switch (exceptionValuesArray[0]) {\n    case 0: {\n      exceptionMessage =\n          backend_util\n              .getSparseSegmentReductionNegativeSegmentIdsErrorMessage();\n      break;\n    }\n    case 1: {\n      exceptionMessage =\n          backend_util\n              .getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();\n      break;\n    }\n    case 2:\n      exceptionMessage =\n          backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2]);\n      break;\n    case 3:\n      exceptionMessage =\n          backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(\n              exceptionValuesArray[1], exceptionValuesArray[2],\n              exceptionValuesArray[3]);\n      break;\n    default:\n      exceptionMessage = '';\n  }\n\n  backend.disposeData(exceptionValues.dataId);\n  if (exceptionMessage) {\n    backend.disposeData(output.dataId);\n    throw new Error(exceptionMessage);\n  }\n\n  return output;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseSegmentMean, SparseSegmentMeanInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {setup, sparseSegmentReduction} from './SparseSegmentReduction';\n\nfunction sparseSegmentMean(args: {\n  backend: BackendWasm,\n  inputs: SparseSegmentMeanInputs,\n}): TensorInfo {\n  return sparseSegmentReduction(args, true);\n}\n\nexport const sparseSegmentMeanConfig: KernelConfig = {\n  kernelName: SparseSegmentMean,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentMean as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SparseSegmentSum, SparseSegmentSumInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {setup, sparseSegmentReduction} from './SparseSegmentReduction';\n\nfunction sparseSegmentSum(args: {\n  backend: BackendWasm,\n  inputs: SparseSegmentSumInputs,\n}): TensorInfo {\n  return sparseSegmentReduction(args, false);\n}\n\nexport const sparseSegmentSumConfig: KernelConfig = {\n  kernelName: SparseSegmentSum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sparseSegmentSum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SplitV, SplitVAttrs, SplitVInputs, util} from '@tensorflow/tfjs-core';\nimport {backend_util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nexport function splitV(\n    args: {inputs: SplitVInputs, attrs: SplitVAttrs, backend: BackendWasm}) {\n  const {inputs, attrs, backend} = args;\n  const {x} = inputs;\n  const {numOrSizeSplits, axis} = attrs;\n\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const begin = new Array(x.shape.length).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const xSliceSize = [...size];\n    xSliceSize[$axis] = s;\n    const xSlice =\n        slice({inputs: {x}, attrs: {begin, size: xSliceSize}, backend});\n    begin[$axis] += s;\n    return xSlice;\n  });\n}\n\nexport const splitVConfig: KernelConfig = {\n  kernelName: SplitV,\n  backendName: 'wasm',\n  kernelFunc: splitV as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, Sqrt} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const sqrtConfig: KernelConfig = createUnaryKernelConfig(Sqrt);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Square} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const squareConfig: KernelConfig = createUnaryKernelConfig(Square);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, SquaredDifference} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const squaredDifferenceConfig: KernelConfig =\n    createBinaryKernelConfig(SquaredDifference, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, StepInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmStep: (xId: number, alpha: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStep = backend.wasm.cwrap(Step, null /*void*/, [\n    'number',  // x_id\n    'number',  // alpha\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction step(\n    args: {backend: BackendWasm, inputs: StepInputs, attrs: StepAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {alpha} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmStep(xId, alpha, CppDType[x.dtype], outId);\n  return out;\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: step as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, slice_util, StridedSlice, StridedSliceAttrs, StridedSliceInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {reshape} from './Reshape';\nimport {slice} from './Slice';\n\nlet wasmStridedSlice: (\n    xId: number, xStridesBytes: Uint8Array, xRank: number,\n    beginBytes: Uint8Array, endBytes: Uint8Array, stridesBytes: Uint8Array,\n    outShapeBytes: Uint8Array, outStridesBytes: Uint8Array,\n    outShapeLength: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmStridedSlice = backend.wasm.cwrap(StridedSlice, null /*void*/, [\n    'number',  // xId\n    'array',   // xStrides\n    'number',  // xRank\n    'array',   // beginBytes\n    'array',   // endBytes\n    'array',   // stridesBytes\n    'array',   // outShapeBytes\n    'array',   // outStridesBytes\n    'number',  // outShapeLength\n    'number',  // outId\n  ]);\n}\n\nexport function stridedSlice(args: {\n  backend: BackendWasm,\n  inputs: StridedSliceInputs,\n  attrs: StridedSliceAttrs\n}): TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {x} = inputs;\n\n  const {\n    begin,\n    end,\n    strides,\n    beginMask,\n    endMask,\n    ellipsisMask,\n    newAxisMask,\n    shrinkAxisMask\n  } = attrs;\n\n  const {\n    finalShapeSparse,\n    finalShape,\n    isIdentity,\n    sliceDim0,\n    isSimpleSlice,\n    begin: $begin,\n    end: $end,\n    strides: $strides\n  } =\n      slice_util.sliceInfo(\n          x.shape, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask);\n\n  let result;\n\n  if (isIdentity) {\n    // Optimization #1, slice is a no-op plus reshape\n    result = reshape({inputs: {x}, backend, attrs: {shape: finalShape}});\n  } else if (sliceDim0 || isSimpleSlice) {\n    // Optimization #2, slice is memory contiguous (only occurs in dim 0)\n    util.assert(\n        x.shape.length >= 1,\n        () => `Input must have rank at least 1, got: ${x.shape.length}`);\n\n    const size = slice_util.computeOutShape($begin, $end, $strides);\n    // To tolerate begin[0] > end[0] (a 0-output slice), we min(begin, end).\n    const sliced = slice({inputs: {x}, backend, attrs: {begin: $begin, size}});\n    result =\n        reshape({inputs: {x: sliced}, backend, attrs: {shape: finalShape}});\n    backend.disposeData(sliced.dataId);\n  } else {\n    const out = backend.makeOutput(finalShapeSparse, 'float32');\n\n    const xId = backend.dataIdMap.get(x.dataId).id;\n    const xStridesBytes =\n        new Uint8Array(new Int32Array(util.computeStrides(x.shape)).buffer);\n    const beginBytes = new Uint8Array(new Int32Array($begin).buffer);\n    const endBytes = new Uint8Array(new Int32Array($end).buffer);\n    const stridesBytes = new Uint8Array(new Int32Array($strides).buffer);\n\n    const outputShapeBytes =\n        new Uint8Array(new Int32Array(finalShapeSparse).buffer);\n    const outStridesBytes = new Uint8Array(\n        new Int32Array(util.computeStrides(finalShapeSparse)).buffer);\n    const outId = backend.dataIdMap.get(out.dataId).id;\n\n    wasmStridedSlice(\n        xId, xStridesBytes, x.shape.length, beginBytes, endBytes, stridesBytes,\n        outputShapeBytes, outStridesBytes, finalShapeSparse.length, outId);\n\n    result = reshape({inputs: {x: out}, backend, attrs: {shape: finalShape}});\n\n    backend.disposeData(out.dataId);\n  }\n\n  return result;\n}\n\nexport const stridedSliceConfig: KernelConfig = {\n  kernelName: StridedSlice,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: stridedSlice as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Sub} from '@tensorflow/tfjs-core';\nimport {createBinaryKernelConfig} from './binary_kernel';\nconst supportsFullBroadcast = true;\nexport const subConfig: KernelConfig =\n    createBinaryKernelConfig(Sub, supportsFullBroadcast);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Sum, SumAttrs, SumInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {permuteAxesAndTranspose} from './kernel_utils';\nimport {CppDType} from './types';\n\nlet wasmSum: (xId: number, reduceSize: number, dtype: number, outId: number) =>\n    void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmSum = backend.wasm.cwrap(Sum, null /*void*/, [\n    'number',  // input_id\n    'number',  // reduce_size\n    'number',  // dtype\n    'number',  // out_id\n  ]);\n}\n\nfunction sum(args: {backend: BackendWasm, inputs: SumInputs, attrs: SumAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {axis, keepDims} = attrs;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  let inputId = xId;\n  let input = x;\n\n  const {transposed, axes, originalAxes, inputWasTransposed} =\n      permuteAxesAndTranspose(x, axis, backend);\n\n  let reductionAxes = axes;\n  if (inputWasTransposed) {\n    const transposedId = backend.dataIdMap.get(transposed.dataId).id;\n    if (transposedId !== xId) {\n      // transpose was not a no-op. We will need to dispose of this\n      // once we are done.\n      input = transposed;\n      inputId = transposedId;\n      reductionAxes = backend_util.getInnerMostAxes(\n          reductionAxes.length, input.shape.length);\n    }\n  }\n\n  backend_util.assertAxesAreInnerMostDims(\n      'sum', reductionAxes, input.shape.length);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(input.shape, reductionAxes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  const out = backend.makeOutput(outShape, input.dtype);\n  if (util.sizeFromShape(input.shape) !== 0) {\n    const outId = backend.dataIdMap.get(out.dataId).id;\n    wasmSum(inputId, reduceSize, CppDType[out.dtype], outId);\n  }\n\n  if (inputWasTransposed) {\n    // dispose of the transposed tensor.\n    backend.disposeData(transposed.dataId);\n  }\n\n  if (keepDims) {\n    // reshape\n    const newShape = backend_util.expandShapeToKeepDim(out.shape, originalAxes);\n    out.shape = newShape;\n  }\n\n  return out;\n}\n\nexport const sumConfig: KernelConfig = {\n  kernelName: Sum,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: sum as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tan} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanConfig: KernelConfig = createUnaryKernelConfig(Tan);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {KernelConfig, Tanh} from '@tensorflow/tfjs-core';\n\nimport {createUnaryKernelConfig} from './unary_kernel';\nexport const tanhConfig: KernelConfig = createUnaryKernelConfig(Tanh);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Tile, TileAttrs, TileInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {CppDType} from './types';\n\nlet wasmTile: (\n    xId: number, xShape: Uint8Array, xShapeSize: number, newShape: Uint8Array,\n    newShapeSize: number, dtype: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTile = backend.wasm.cwrap(Tile, null /* void */, [\n    'number',  // x_id\n    'array',   // x_shape\n    'number',  // x_shape.length\n    'array',   // new_shape\n    'number',  // new_shape.length\n    'number'   // out_id\n  ]);\n}\n\nfunction tile(\n    args: {inputs: TileInputs, backend: BackendWasm, attrs: TileAttrs}) {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const xId = backend.dataIdMap.get(x.dataId).id;\n  const {reps} = attrs;\n\n  const newShape: number[] = new Array(x.shape.length);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[i] * reps[i];\n  }\n  const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n  const newShapeBytes = new Uint8Array(new Int32Array(newShape).buffer);\n\n  const out = backend.makeOutput(newShape, x.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n  wasmTile(\n      xId, xShapeBytes, x.shape.length, newShapeBytes, newShape.length,\n      CppDType[out.dtype], outId);\n  return out;\n}\n\nexport const tileConfig: KernelConfig = {\n  kernelName: Tile,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: tile as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, TopK, TopKAttrs, TopKInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\nimport {CppDType} from './types';\n\nlet wasmTopK: (\n    xId: number, xShapeBytes: Uint8Array, xShapeLength: number,\n    xDtype: CppDType, k: number, sorted: boolean, outValuesId: number,\n    outIndicesId: number) => void;\n\nfunction setup(backend: BackendWasm) {\n  wasmTopK = backend.wasm.cwrap(TopK, null /* void */, [\n    'number',  // xId\n    'array',   // x.shape\n    'number',  // x.shape.length\n    'number',  // x.dtype\n    'number',  // k\n    'bool',    // sorted\n    'number',  // outValuesId\n    'number',  // outIndicesId\n  ]);\n}\n\nexport const topk:\n    (args: {inputs: TopKInputs, backend: BackendWasm, attrs: TopKAttrs}) =>\n        TensorInfo[] | TensorInfo = ({inputs, backend, attrs}) => {\n          const {x} = inputs;\n          const {k, sorted} = attrs;\n\n          const xId = backend.dataIdMap.get(x.dataId).id;\n          const xShapeBytes = new Uint8Array(new Int32Array(x.shape).buffer);\n          const outputShape = x.shape.slice();\n          outputShape[outputShape.length - 1] = k;\n          const outValues = backend.makeOutput(outputShape, x.dtype);\n          const outValuesId = backend.dataIdMap.get(outValues.dataId).id;\n          const outIndices = backend.makeOutput(outputShape, 'int32');\n          const outIndicesId = backend.dataIdMap.get(outIndices.dataId).id;\n\n          wasmTopK(\n              xId, xShapeBytes, x.shape.length, CppDType[x.dtype], k, sorted,\n              outValuesId, outIndicesId);\n\n          return [outValues, outIndices];\n        };\n\nexport const topKConfig: KernelConfig = {\n  kernelName: TopK,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: topk as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Transform, TransformAttrs, TransformInputs, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nlet wasmTransform: (\n    imageId: number, transformsId: number, isBatchTransform: boolean,\n    batch: number, outHeight: number, outWidth: number, numChannels: number,\n    imageWidth: number, imageHeight: number, strides: Uint8Array,\n    stridesLength: number, interpolationModeId: number, fillModeId: number,\n    fillValue: number, outId: number) => void;\n\nfunction setup(backend: BackendWasm): void {\n  wasmTransform = backend.wasm.cwrap(Transform, null /*void*/, [\n    'number',  // imageId\n    'number',  // transformsId\n    'bool',    // isBatchTransform\n    'number',  // batch\n    'number',  // outHeight\n    'number',  // outWidth\n    'number',  // numChannels\n    'number',  // imageWidth\n    'number',  // imageHeight\n    'array',   // strides\n    'number',  // stridesLength\n    'number',  // interpolationModeId\n    'number',  // fillModeId\n    'number',  // fillValue\n    'number'   // outId\n  ]);\n}\n\nfunction transform(\n    args:\n        {backend: BackendWasm, inputs: TransformInputs, attrs: TransformAttrs}):\n    TensorInfo {\n  const {backend, inputs, attrs} = args;\n  const {image, transforms} = inputs;\n  const {interpolation, fillMode, fillValue, outputShape} = attrs;\n\n  const [batch, imageHeight, imageWidth, numChannels] = image.shape;\n  const [outHeight, outWidth] =\n      outputShape != null ? outputShape : [imageHeight, imageWidth];\n  const outShape =\n      [batch, outHeight, outWidth,\n       numChannels] as [number, number, number, number];\n  const strides =\n      new Uint8Array(new Int32Array(util.computeStrides(image.shape)).buffer);\n\n  const out = backend.makeOutput(outShape, image.dtype);\n  const outId = backend.dataIdMap.get(out.dataId).id;\n\n  const imageData = backend.dataIdMap.get(image.dataId);\n  const imageId = imageData.id;\n\n  const transformsData = backend.dataIdMap.get(transforms.dataId);\n  const transformsId = transformsData.id;\n\n  const interpolationModeId = interpolation === 'nearest' ? 1 : 2;\n  let fillModeId;\n  switch (fillMode) {\n    case 'constant':\n      fillModeId = 1;\n      break;\n    case 'reflect':\n      fillModeId = 2;\n      break;\n    case 'wrap':\n      fillModeId = 3;\n      break;\n    case 'nearest':\n      fillModeId = 4;\n      break;\n    default:\n      fillModeId = 1;\n      break;\n  }\n\n  wasmTransform(\n      imageId, transformsId, (transforms.shape[0] > 1), batch, outHeight,\n      outWidth, numChannels, imageWidth, imageHeight, strides,\n      image.shape.length - 1, interpolationModeId, fillModeId, fillValue,\n      outId);\n\n  return out;\n}\n\nexport const transformConfig: KernelConfig = {\n  kernelName: Transform,\n  backendName: 'wasm',\n  setupFunc: setup,\n  kernelFunc: transform as {} as KernelFunc\n};\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, TensorInfo, Unpack, UnpackAttrs, UnpackInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nimport {slice} from './Slice';\n\nfunction unpack(\n    args: {inputs: UnpackInputs, backend: BackendWasm, attrs: UnpackAttrs}):\n    TensorInfo[] {\n  const {inputs, backend, attrs} = args;\n  const {value} = inputs;\n  let {axis} = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const numOutputs = value.shape[axis];\n  const rank = value.shape.length;\n  const outShape: number[] = new Array(rank - 1);\n  let outIndex = 0;\n  for (let i = 0; i < rank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = value.shape[i];\n    }\n  }\n  const outs: TensorInfo[] = new Array(numOutputs);\n  const begin = new Array(rank).fill(0);\n  const size = value.shape.slice();\n  size[axis] = 1;\n  for (let i = 0; i < outs.length; i++) {\n    begin[axis] = i;\n    outs[i] = slice({inputs: {x: value}, attrs: {begin, size}, backend});\n  }\n  return outs.map(({dataId, dtype}) => ({dataId, dtype, shape: outShape}));\n}\n\nexport const unpackConfig: KernelConfig = {\n  kernelName: Unpack,\n  backendName: 'wasm',\n  kernelFunc: unpack as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, ZerosLike, ZerosLikeInputs} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nfunction zerosLike(args: {inputs: ZerosLikeInputs, backend: BackendWasm}) {\n  const {inputs: {x}, backend} = args;\n  const out = backend.makeOutput(x.shape, x.dtype);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.fill(0);\n  return out;\n}\n\nexport const zerosLikeConfig: KernelConfig = {\n  kernelName: ZerosLike,\n  backendName: 'wasm',\n  kernelFunc: zerosLike as {} as KernelFunc,\n};\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nimport {KernelConfig, registerKernel} from '@tensorflow/tfjs-core';\n\nimport {_fusedMatMulConfig} from './kernels/_FusedMatMul';\nimport {absConfig} from './kernels/Abs';\nimport {addConfig} from './kernels/Add';\nimport {addNConfig} from './kernels/AddN';\nimport {allConfig} from './kernels/All';\nimport {anyConfig} from './kernels/Any';\nimport {argMaxConfig} from './kernels/ArgMax';\nimport {avgPoolConfig} from './kernels/AvgPool';\nimport {batchMatMulConfig} from './kernels/BatchMatMul';\nimport {batchToSpaceNDConfig} from './kernels/BatchToSpaceND';\nimport {castConfig} from './kernels/Cast';\nimport {ceilConfig} from './kernels/Ceil';\nimport {clipByValueConfig} from './kernels/ClipByValue';\nimport {concatConfig} from './kernels/Concat';\nimport {conv2DConfig} from './kernels/Conv2D';\nimport {conv2DBackpropInputConfig} from './kernels/Conv2DBackpropInput';\nimport {cosConfig} from './kernels/Cos';\nimport {coshConfig} from './kernels/Cosh';\nimport {cropAndResizeConfig} from './kernels/CropAndResize';\nimport {cumprodConfig} from './kernels/Cumprod';\nimport {cumsumConfig} from './kernels/Cumsum';\nimport {depthToSpaceConfig} from './kernels/DepthToSpace';\nimport {depthwiseConv2dNativeConfig} from './kernels/DepthwiseConv2dNative';\nimport {eluConfig} from './kernels/Elu';\nimport {equalConfig} from './kernels/Equal';\nimport {expConfig} from './kernels/Exp';\nimport {expandDimsConfig} from './kernels/ExpandDims';\nimport {fillConfig} from './kernels/Fill';\nimport {flipLeftRightConfig} from './kernels/FlipLeftRight';\nimport {floorConfig} from './kernels/Floor';\nimport {floorDivConfig} from './kernels/FloorDiv';\nimport {fusedBatchNormConfig} from './kernels/FusedBatchNorm';\nimport {fusedConv2DConfig} from './kernels/FusedConv2D';\nimport {fusedDepthwiseConv2DConfig} from './kernels/FusedDepthwiseConv2D';\nimport {gatherNdConfig} from './kernels/GatherNd';\nimport {gatherV2Config} from './kernels/GatherV2';\nimport {greaterConfig} from './kernels/Greater';\nimport {greaterEqualConfig} from './kernels/GreaterEqual';\nimport {identityConfig} from './kernels/Identity';\nimport {leakyReluConfig} from './kernels/LeakyRelu';\nimport {lessConfig} from './kernels/Less';\nimport {lessEqualConfig} from './kernels/LessEqual';\nimport {logConfig} from './kernels/Log';\nimport {logicalAndConfig} from './kernels/LogicalAnd';\nimport {maxConfig} from './kernels/Max';\nimport {maximumConfig} from './kernels/Maximum';\nimport {maxPoolConfig} from './kernels/MaxPool';\nimport {meanConfig} from './kernels/Mean';\nimport {minConfig} from './kernels/Min';\nimport {minimumConfig} from './kernels/Minimum';\nimport {mirrorPadConfig} from './kernels/MirrorPad';\nimport {multiplyConfig} from './kernels/Multiply';\nimport {negConfig} from './kernels/Neg';\nimport {nonMaxSuppressionV3Config} from './kernels/NonMaxSuppressionV3';\nimport {nonMaxSuppressionV4Config} from './kernels/NonMaxSuppressionV4';\nimport {nonMaxSuppressionV5Config} from './kernels/NonMaxSuppressionV5';\nimport {notEqualConfig} from './kernels/NotEqual';\nimport {oneHotConfig} from './kernels/OneHot';\nimport {onesLikeConfig} from './kernels/OnesLike';\nimport {packConfig} from './kernels/Pack';\nimport {padV2Config} from './kernels/PadV2';\nimport {powConfig} from './kernels/Pow';\nimport {preluConfig} from './kernels/Prelu';\nimport {prodConfig} from './kernels/Prod';\nimport {rangeConfig} from './kernels/Range';\nimport {realDivConfig} from './kernels/RealDiv';\nimport {reluConfig} from './kernels/Relu';\nimport {relu6Config} from './kernels/Relu6';\nimport {reshapeConfig} from './kernels/Reshape';\nimport {resizeBilinearConfig} from './kernels/ResizeBilinear';\nimport {reverseConfig} from './kernels/Reverse';\nimport {rotateWithOffsetConfig} from './kernels/RotateWithOffset';\nimport {roundConfig} from './kernels/Round';\nimport {rsqrtConfig} from './kernels/Rsqrt';\nimport {scatterNdConfig} from './kernels/ScatterNd';\nimport {selectConfig} from './kernels/Select';\nimport {sigmoidConfig} from './kernels/Sigmoid';\nimport {sinConfig} from './kernels/Sin';\nimport {sliceConfig} from './kernels/Slice';\nimport {softmaxConfig} from './kernels/Softmax';\nimport {spaceToBatchNDConfig} from './kernels/SpaceToBatchND';\nimport {sparseFillEmptyRowsConfig} from './kernels/SparseFillEmptyRows';\nimport {sparseReshapeConfig} from './kernels/SparseReshape';\nimport {sparseSegmentMeanConfig} from './kernels/SparseSegmentMean';\nimport {sparseSegmentSumConfig} from './kernels/SparseSegmentSum';\nimport {splitVConfig} from './kernels/SplitV';\nimport {sqrtConfig} from './kernels/Sqrt';\nimport {squareConfig} from './kernels/Square';\nimport {squaredDifferenceConfig} from './kernels/SquaredDifference';\nimport {stepConfig} from './kernels/Step';\nimport {stridedSliceConfig} from './kernels/StridedSlice';\nimport {subConfig} from './kernels/Sub';\nimport {sumConfig} from './kernels/Sum';\nimport {tanConfig} from './kernels/Tan';\nimport {tanhConfig} from './kernels/Tanh';\nimport {tileConfig} from './kernels/Tile';\nimport {topKConfig} from './kernels/TopK';\nimport {transformConfig} from './kernels/Transform';\nimport {transposeConfig} from './kernels/Transpose';\nimport {unpackConfig} from './kernels/Unpack';\nimport {zerosLikeConfig} from './kernels/ZerosLike';\n\n// List all kernel configs here\nconst kernelConfigs: KernelConfig[] = [\n  _fusedMatMulConfig,\n  absConfig,\n  addConfig,\n  addNConfig,\n  allConfig,\n  anyConfig,\n  argMaxConfig,\n  avgPoolConfig,\n  batchMatMulConfig,\n  batchToSpaceNDConfig,\n  castConfig,\n  ceilConfig,\n  clipByValueConfig,\n  concatConfig,\n  conv2DConfig,\n  conv2DBackpropInputConfig,\n  cosConfig,\n  coshConfig,\n  cropAndResizeConfig,\n  cumprodConfig,\n  cumsumConfig,\n  depthToSpaceConfig,\n  depthwiseConv2dNativeConfig,\n  eluConfig,\n  equalConfig,\n  expConfig,\n  expandDimsConfig,\n  fillConfig,\n  flipLeftRightConfig,\n  floorConfig,\n  floorDivConfig,\n  fusedBatchNormConfig,\n  fusedConv2DConfig,\n  fusedDepthwiseConv2DConfig,\n  gatherNdConfig,\n  gatherV2Config,\n  greaterConfig,\n  greaterEqualConfig,\n  identityConfig,\n  leakyReluConfig,\n  lessConfig,\n  lessEqualConfig,\n  logConfig,\n  logicalAndConfig,\n  maxConfig,\n  maximumConfig,\n  maxPoolConfig,\n  meanConfig,\n  minConfig,\n  minimumConfig,\n  mirrorPadConfig,\n  multiplyConfig,\n  negConfig,\n  nonMaxSuppressionV3Config,\n  nonMaxSuppressionV4Config,\n  nonMaxSuppressionV5Config,\n  notEqualConfig,\n  oneHotConfig,\n  onesLikeConfig,\n  packConfig,\n  padV2Config,\n  powConfig,\n  preluConfig,\n  prodConfig,\n  rangeConfig,\n  realDivConfig,\n  reluConfig,\n  relu6Config,\n  reshapeConfig,\n  resizeBilinearConfig,\n  reverseConfig,\n  rotateWithOffsetConfig,\n  roundConfig,\n  rsqrtConfig,\n  scatterNdConfig,\n  selectConfig,\n  sigmoidConfig,\n  sinConfig,\n  sliceConfig,\n  softmaxConfig,\n  spaceToBatchNDConfig,\n  sparseFillEmptyRowsConfig,\n  sparseReshapeConfig,\n  sparseSegmentMeanConfig,\n  sparseSegmentSumConfig,\n  splitVConfig,\n  sqrtConfig,\n  squareConfig,\n  squaredDifferenceConfig,\n  stepConfig,\n  stridedSliceConfig,\n  subConfig,\n  sumConfig,\n  tanConfig,\n  tanhConfig,\n  tileConfig,\n  topKConfig,\n  transformConfig,\n  transposeConfig,\n  unpackConfig,\n  zerosLikeConfig\n];\n\nfor (const kernelConfig of kernelConfigs) {\n  registerKernel(kernelConfig);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/**\n * True if SIMD is supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag(\n    // This typed array passed in to WebAssembly.validate is WebAssembly binary\n    // code. In this case it is a small program that contains SIMD\n    // instructions.\n    'WASM_HAS_SIMD_SUPPORT', async () => WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0, 0, 0, 1,  4, 1,   96, 0,  0, 3,\n      2, 1,  0,   10,  9, 1, 7, 0, 65, 0, 253, 15, 26, 11\n    ])));\n\n/**\n * True if threads are supported.\n */\n// From: https://github.com/GoogleChromeLabs/wasm-feature-detect\nENV.registerFlag('WASM_HAS_MULTITHREAD_SUPPORT', async () => {\n  // TODO(annxingyuan): Enable node support once this is resolved:\n  // https://github.com/tensorflow/tfjs/issues/3830\n  if (ENV.get('IS_NODE')) {\n    return false;\n  }\n\n  try {\n    // Test for transferability of SABs (needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    // This typed array is a WebAssembly program containing threaded\n    // instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n});\n","\nvar WasmBackendModuleThreadedSimd = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModuleThreadedSimd) {\n  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};\n\nfunction GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP16}function GROWABLE_HEAP_U16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU16}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_F32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!==\"undefined\"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!==\"undefined\"&&process.listeners){beforeListeners={uncaughtException:process.listeners(\"uncaughtException\"),unhandledRejection:process.listeners(\"unhandledRejection\")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var ENVIRONMENT_IS_PTHREAD=Module[\"ENVIRONMENT_IS_PTHREAD\"]||false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"};let nodeWorkerThreads;try{nodeWorkerThreads=require(\"worker_threads\")}catch(e){console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(typeof _scriptDir !== \"undefined\" && _scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(!ENVIRONMENT_IS_NODE){read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance===\"undefined\"){global.performance=require(\"perf_hooks\").performance}}var defaultPrint=console.log.bind(console);var defaultPrintErr=console.warn.bind(console);if(ENVIRONMENT_IS_NODE){requireNodeFS();defaultPrint=(str=>fs.writeSync(1,str+\"\\n\"));defaultPrintErr=(str=>fs.writeSync(2,str+\"\\n\"))}var out=Module[\"print\"]||defaultPrint;var err=Module[\"printErr\"]||defaultPrintErr;Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var setTempRet0=value=>{tempRet0=value};var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var ALLOC_STACK=1;function TextDecoderWrapper(encoding){var textDecoder=new TextDecoder(encoding);this.decode=(data=>{if(data.buffer instanceof SharedArrayBuffer){data=new Uint8Array(data)}return textDecoder.decode.call(textDecoder,data)})}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoderWrapper(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoderWrapper(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){GROWABLE_HEAP_I8()[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)GROWABLE_HEAP_I8()[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;if(ENVIRONMENT_IS_PTHREAD){buffer=Module[\"buffer\"]}function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module[\"wasmMemory\"];buffer=Module[\"buffer\"]}else{if(Module[\"wasmMemory\"]){wasmMemory=Module[\"wasmMemory\"]}else{wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_MEMORY/65536,\"maximum\":2147483648/65536,\"shared\":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");if(ENVIRONMENT_IS_NODE){console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\")}throw Error(\"bad memory\")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){if(ENVIRONMENT_IS_PTHREAD)return;PThread.terminateAllThreads();runtimeExited=true}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(ENVIRONMENT_IS_PTHREAD){postMessage({\"cmd\":\"onAbort\",\"arg\":what})}else{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"tfjs-backend-wasm-threaded-simd.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;registerTlsInit(Module[\"asm\"][\"emscripten_tls_init\"]);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency(\"wasm-instantiate\")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency(\"wasm-instantiate\")}function receiveInstantiationResult(result){receiveInstance(result[\"instance\"],result[\"module\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={};function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function withStackSave(f){var stack=stackSave();var ret=f();stackRestore(stack);return ret}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}function killThread(pthread_ptr){GROWABLE_HEAP_I32()[pthread_ptr>>2]=0;var pthread=PThread.pthreads[pthread_ptr];delete PThread.pthreads[pthread_ptr];pthread.worker.terminate();__emscripten_thread_free_data(pthread_ptr);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker),1);pthread.worker.pthread=undefined}function cancelThread(pthread_ptr){var pthread=PThread.pthreads[pthread_ptr];pthread.worker.postMessage({\"cmd\":\"cancel\"})}function cleanupThread(pthread_ptr){var pthread=PThread.pthreads[pthread_ptr];if(pthread){GROWABLE_HEAP_I32()[pthread_ptr>>2]=0;var worker=pthread.worker;PThread.returnWorkerToPool(worker)}}function _exit(status){exit(status)}function handleException(e){if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)}var PThread={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){if(ENVIRONMENT_IS_PTHREAD){PThread.initWorker()}else{PThread.initMainThread()}},initMainThread:function(){var pthreadPoolSize=8;for(var i=0;i<pthreadPoolSize;++i){PThread.allocateUnusedWorker()}},initWorker:function(){noExitRuntime=false},pthreads:{},setExitStatus:function(status){EXITSTATUS=status},terminateAllThreads:function(){for(var t in PThread.pthreads){var pthread=PThread.pthreads[t];if(pthread&&pthread.worker){PThread.returnWorkerToPool(pthread.worker)}}for(var i=0;i<PThread.unusedWorkers.length;++i){var worker=PThread.unusedWorkers[i];worker.terminate()}PThread.unusedWorkers=[]},returnWorkerToPool:function(worker){PThread.runWithoutMainThreadQueuedCalls(function(){delete PThread.pthreads[worker.pthread.threadInfoStruct];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);__emscripten_thread_free_data(worker.pthread.threadInfoStruct);worker.pthread=undefined})},runWithoutMainThreadQueuedCalls:function(func){GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=0;try{func()}finally{GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls>>2]=1}},receiveObjectTransfer:function(data){},threadInit:function(){for(var i in PThread.tlsInitFunctions){PThread.tlsInitFunctions[i]()}},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=(e=>{var d=e[\"data\"];var cmd=d[\"cmd\"];if(worker.pthread)PThread.currentProxiedOperationCallerThread=worker.pthread.threadInfoStruct;if(d[\"targetThread\"]&&d[\"targetThread\"]!=_pthread_self()){var thread=PThread.pthreads[d.targetThread];if(thread){thread.worker.postMessage(d,d[\"transferList\"])}else{err('Internal error! Worker sent a message \"'+cmd+'\" to target pthread '+d[\"targetThread\"]+\", but that thread no longer exists!\")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd===\"processQueuedMainThreadWork\"){_emscripten_main_thread_process_queued_calls()}else if(cmd===\"spawnThread\"){spawnThread(d)}else if(cmd===\"cleanupThread\"){cleanupThread(d[\"thread\"])}else if(cmd===\"killThread\"){killThread(d[\"thread\"])}else if(cmd===\"cancelThread\"){cancelThread(d[\"thread\"])}else if(cmd===\"loaded\"){worker.loaded=true;if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread();delete worker.runPthread}}else if(cmd===\"print\"){out(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"printErr\"){err(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(cmd===\"alert\"){alert(\"Thread \"+d[\"threadId\"]+\": \"+d[\"text\"])}else if(d.target===\"setimmediate\"){worker.postMessage(d)}else if(cmd===\"onAbort\"){if(Module[\"onAbort\"]){Module[\"onAbort\"](d[\"arg\"])}}else{err(\"worker sent an unknown command \"+cmd)}PThread.currentProxiedOperationCallerThread=undefined});worker.onerror=(e=>{var message=\"worker sent an error!\";err(message+\" \"+e.filename+\":\"+e.lineno+\": \"+e.message);throw e});if(ENVIRONMENT_IS_NODE){worker.on(\"message\",function(data){worker.onmessage({data:data})});worker.on(\"error\",function(e){worker.onerror(e)});worker.on(\"detachedExit\",function(){})}worker.postMessage({\"cmd\":\"load\",\"urlOrBlob\":Module[\"mainScriptUrlOrBlob\"]||_scriptDir,\"wasmMemory\":wasmMemory,\"wasmModule\":wasmModule})},allocateUnusedWorker:function(){var pthreadMainJs=locateFile(\"tfjs-backend-wasm-threaded-simd.worker.js\");PThread.unusedWorkers.push(new Worker(pthreadMainJs))},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}return PThread.unusedWorkers.pop()}};function establishStackSpace(){var pthread_ptr=_pthread_self();var stackTop=GROWABLE_HEAP_I32()[pthread_ptr+44>>2];var stackSize=GROWABLE_HEAP_I32()[pthread_ptr+48>>2];var stackMax=stackTop-stackSize;_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module[\"establishStackSpace\"]=establishStackSpace;function exitOnMainThread(returnCode){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,0,returnCode);try{_exit(returnCode)}catch(e){handleException(e)}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function invokeEntryPoint(ptr,arg){return getWasmTableEntry(ptr)(arg)}Module[\"invokeEntryPoint\"]=invokeEntryPoint;function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function registerTlsInit(tlsInitFunc,moduleExports,metadata){PThread.tlsInitFunctions.push(tlsInitFunc)}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=(()=>{var t=process[\"hrtime\"]();return t[0]*1e3+t[1]/1e6})}else if(ENVIRONMENT_IS_PTHREAD){_emscripten_get_now=(()=>performance.now()-Module[\"__performance_now_clock_drift\"])}else _emscripten_get_now=(()=>performance.now());var _emscripten_get_now_is_monotonic=true;function setErrNo(value){GROWABLE_HEAP_I32()[___errno_location()>>2]=value;return value}function _clock_gettime(clk_id,tp){var now;if(clk_id===0){now=Date.now()}else if((clk_id===1||clk_id===4)&&_emscripten_get_now_is_monotonic){now=_emscripten_get_now()}else{setErrNo(28);return-1}GROWABLE_HEAP_I32()[tp>>2]=now/1e3|0;GROWABLE_HEAP_I32()[tp+4>>2]=now%1e3*1e3*1e3|0;return 0}function ___clock_gettime(a0,a1){return _clock_gettime(a0,a1)}function ___emscripten_init_main_thread_js(tb){__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1,!ENVIRONMENT_IS_WEB);PThread.threadInit()}function ___emscripten_thread_cleanup(thread){if(!ENVIRONMENT_IS_PTHREAD)cleanupThread(thread);else postMessage({\"cmd\":\"cleanupThread\",\"thread\":thread})}function spawnThread(threadParams){var worker=PThread.getNewWorker();if(!worker){return 6}PThread.runningWorkers.push(worker);var pthread=PThread.pthreads[threadParams.pthread_ptr]={worker:worker,threadInfoStruct:threadParams.pthread_ptr};worker.pthread=pthread;var msg={\"cmd\":\"run\",\"start_routine\":threadParams.startRoutine,\"arg\":threadParams.arg,\"threadInfoStruct\":threadParams.pthread_ptr};worker.runPthread=(()=>{msg.time=performance.now();worker.postMessage(msg,threadParams.transferList)});if(worker.loaded){worker.runPthread();delete worker.runPthread}return 0}function ___pthread_create_js(pthread_ptr,attr,start_routine,arg){if(typeof SharedArrayBuffer===\"undefined\"){err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");return 6}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return _emscripten_sync_run_in_main_thread_4(687865856,pthread_ptr,attr,start_routine,arg)}if(error)return error;var threadParams={startRoutine:start_routine,pthread_ptr:pthread_ptr,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd=\"spawnThread\";postMessage(threadParams,transferList);return 0}return spawnThread(threadParams)}function __emscripten_default_pthread_stack_size(){return 2097152}function __emscripten_notify_thread_queue(targetThreadId,mainThreadId){if(targetThreadId==mainThreadId){postMessage({\"cmd\":\"processQueuedMainThreadWork\"})}else if(ENVIRONMENT_IS_PTHREAD){postMessage({\"targetThread\":targetThreadId,\"cmd\":\"processThreadQueue\"})}else{var pthread=PThread.pthreads[targetThreadId];var worker=pthread&&pthread.worker;if(!worker){return}worker.postMessage({\"cmd\":\"processThreadQueue\"})}return 1}function _abort(){abort(\"\")}function _emscripten_check_blocking_allowed(){if(ENVIRONMENT_IS_NODE)return;if(ENVIRONMENT_IS_WORKER)return;warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")}function _emscripten_get_heap_max(){return 2147483648}function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest,src,src+num)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require(\"os\").cpus().length;return navigator[\"hardwareConcurrency\"]}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var outerArgs=arguments;return withStackSave(function(){var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=outerArgs[2+i];GROWABLE_HEAP_F64()[b+i]=arg}return _emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync)})}var _emscripten_receive_on_main_thread_js_callArgs=[];function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=GROWABLE_HEAP_U8().length;requestedSize=requestedSize>>>0;if(requestedSize<=oldSize){return false}var maxHeapSize=_emscripten_get_heap_max();if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var JSEvents={inEventHandler:0,removeAllEventListeners:function(){for(var i=JSEvents.eventHandlers.length-1;i>=0;--i){JSEvents._removeHandler(i)}JSEvents.eventHandlers=[];JSEvents.deferredCalls=[]},registerRemoveEventListeners:function(){if(!JSEvents.removeEventListenersRegistered){__ATEXIT__.push(JSEvents.removeAllEventListeners);JSEvents.removeEventListenersRegistered=true}},deferredCalls:[],deferCall:function(targetFunction,precedence,argsList){function arraysHaveEqualContent(arrA,arrB){if(arrA.length!=arrB.length)return false;for(var i in arrA){if(arrA[i]!=arrB[i])return false}return true}for(var i in JSEvents.deferredCalls){var call=JSEvents.deferredCalls[i];if(call.targetFunction==targetFunction&&arraysHaveEqualContent(call.argsList,argsList)){return}}JSEvents.deferredCalls.push({targetFunction:targetFunction,precedence:precedence,argsList:argsList});JSEvents.deferredCalls.sort(function(x,y){return x.precedence<y.precedence})},removeDeferredCalls:function(targetFunction){for(var i=0;i<JSEvents.deferredCalls.length;++i){if(JSEvents.deferredCalls[i].targetFunction==targetFunction){JSEvents.deferredCalls.splice(i,1);--i}}},canPerformEventHandlerRequests:function(){return JSEvents.inEventHandler&&JSEvents.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!JSEvents.canPerformEventHandlerRequests()){return}for(var i=0;i<JSEvents.deferredCalls.length;++i){var call=JSEvents.deferredCalls[i];JSEvents.deferredCalls.splice(i,1);--i;call.targetFunction.apply(null,call.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(target,eventTypeString){for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==target&&(!eventTypeString||eventTypeString==JSEvents.eventHandlers[i].eventTypeString)){JSEvents._removeHandler(i--)}}},_removeHandler:function(i){var h=JSEvents.eventHandlers[i];h.target.removeEventListener(h.eventTypeString,h.eventListenerFunc,h.useCapture);JSEvents.eventHandlers.splice(i,1)},registerOrRemoveHandler:function(eventHandler){var jsEventHandler=function jsEventHandler(event){++JSEvents.inEventHandler;JSEvents.currentEventHandler=eventHandler;JSEvents.runDeferredCalls();eventHandler.handlerFunc(event);JSEvents.runDeferredCalls();--JSEvents.inEventHandler};if(eventHandler.callbackfunc){eventHandler.eventListenerFunc=jsEventHandler;eventHandler.target.addEventListener(eventHandler.eventTypeString,jsEventHandler,eventHandler.useCapture);JSEvents.eventHandlers.push(eventHandler);JSEvents.registerRemoveEventListeners()}else{for(var i=0;i<JSEvents.eventHandlers.length;++i){if(JSEvents.eventHandlers[i].target==eventHandler.target&&JSEvents.eventHandlers[i].eventTypeString==eventHandler.eventTypeString){JSEvents._removeHandler(i--)}}}},queueEventHandlerOnThread_iiii:function(targetThread,eventHandlerFunc,eventTypeId,eventData,userData){withStackSave(function(){var varargs=stackAlloc(12);GROWABLE_HEAP_I32()[varargs>>2]=eventTypeId;GROWABLE_HEAP_I32()[varargs+4>>2]=eventData;GROWABLE_HEAP_I32()[varargs+8>>2]=userData;_emscripten_dispatch_to_thread_(targetThread,637534208,eventHandlerFunc,eventData,varargs)})},getTargetThreadForEventCallback:function(targetThread){switch(targetThread){case 1:return 0;case 2:return PThread.currentProxiedOperationCallerThread;default:return targetThread}},getNodeNameForTarget:function(target){if(!target)return\"\";if(target==window)return\"#window\";if(target==screen)return\"#screen\";return target&&target.nodeName?target.nodeName:\"\"},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function stringToNewUTF8(jsString){var length=lengthBytesUTF8(jsString)+1;var cString=_malloc(length);stringToUTF8(jsString,cString,length);return cString}function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height){withStackSave(function(){var varargs=stackAlloc(12);var targetCanvasPtr=0;if(targetCanvas){targetCanvasPtr=stringToNewUTF8(targetCanvas)}GROWABLE_HEAP_I32()[varargs>>2]=targetCanvasPtr;GROWABLE_HEAP_I32()[varargs+4>>2]=width;GROWABLE_HEAP_I32()[varargs+8>>2]=height;_emscripten_dispatch_to_thread_(targetThread,657457152,0,targetCanvasPtr,varargs)})}function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread,targetCanvas,width,height){targetCanvas=targetCanvas?UTF8ToString(targetCanvas):\"\";_emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread,targetCanvas,width,height)}function maybeCStringToJsString(cString){return cString>2?UTF8ToString(cString):cString}var specialHTMLTargets=[0,typeof document!==\"undefined\"?document:0,typeof window!==\"undefined\"?window:0];function findEventTarget(target){target=maybeCStringToJsString(target);var domElement=specialHTMLTargets[target]||(typeof document!==\"undefined\"?document.querySelector(target):undefined);return domElement}function findCanvasEventTarget(target){return findEventTarget(target)}function _emscripten_set_canvas_element_size_calling_thread(target,width,height){var canvas=findCanvasEventTarget(target);if(!canvas)return-4;if(canvas.canvasSharedPtr){GROWABLE_HEAP_I32()[canvas.canvasSharedPtr>>2]=width;GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+4>>2]=height}if(canvas.offscreenCanvas||!canvas.controlTransferredOffscreen){if(canvas.offscreenCanvas)canvas=canvas.offscreenCanvas;var autoResizeViewport=false;if(canvas.GLctxObject&&canvas.GLctxObject.GLctx){var prevViewport=canvas.GLctxObject.GLctx.getParameter(2978);autoResizeViewport=prevViewport[0]===0&&prevViewport[1]===0&&prevViewport[2]===canvas.width&&prevViewport[3]===canvas.height}canvas.width=width;canvas.height=height;if(autoResizeViewport){canvas.GLctxObject.GLctx.viewport(0,0,width,height)}}else if(canvas.canvasSharedPtr){var targetThread=GROWABLE_HEAP_I32()[canvas.canvasSharedPtr+8>>2];_emscripten_set_offscreencanvas_size_on_target_thread(targetThread,target,width,height);return 1}else{return-4}return 0}function _emscripten_set_canvas_element_size_main_thread(target,width,height){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,1,target,width,height);return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}function _emscripten_set_canvas_element_size(target,width,height){var canvas=findCanvasEventTarget(target);if(canvas){return _emscripten_set_canvas_element_size_calling_thread(target,width,height)}else{return _emscripten_set_canvas_element_size_main_thread(target,width,height)}}function _emscripten_unwind_to_js_event_loop(){throw\"unwind\"}function __webgl_enable_ANGLE_instanced_arrays(ctx){var ext=ctx.getExtension(\"ANGLE_instanced_arrays\");if(ext){ctx[\"vertexAttribDivisor\"]=function(index,divisor){ext[\"vertexAttribDivisorANGLE\"](index,divisor)};ctx[\"drawArraysInstanced\"]=function(mode,first,count,primcount){ext[\"drawArraysInstancedANGLE\"](mode,first,count,primcount)};ctx[\"drawElementsInstanced\"]=function(mode,count,type,indices,primcount){ext[\"drawElementsInstancedANGLE\"](mode,count,type,indices,primcount)};return 1}}function __webgl_enable_OES_vertex_array_object(ctx){var ext=ctx.getExtension(\"OES_vertex_array_object\");if(ext){ctx[\"createVertexArray\"]=function(){return ext[\"createVertexArrayOES\"]()};ctx[\"deleteVertexArray\"]=function(vao){ext[\"deleteVertexArrayOES\"](vao)};ctx[\"bindVertexArray\"]=function(vao){ext[\"bindVertexArrayOES\"](vao)};ctx[\"isVertexArray\"]=function(vao){return ext[\"isVertexArrayOES\"](vao)};return 1}}function __webgl_enable_WEBGL_draw_buffers(ctx){var ext=ctx.getExtension(\"WEBGL_draw_buffers\");if(ext){ctx[\"drawBuffers\"]=function(n,bufs){ext[\"drawBuffersWEBGL\"](n,bufs)};return 1}}function __webgl_enable_WEBGL_multi_draw(ctx){return!!(ctx.multiDrawWebgl=ctx.getExtension(\"WEBGL_multi_draw\"))}var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function recordError(errorCode){if(!GL.lastError){GL.lastError=errorCode}},getNewId:function(table){var ret=GL.counter++;for(var i=table.length;i<ret;i++){table[i]=null}return ret},getSource:function(shader,count,string,length){var source=\"\";for(var i=0;i<count;++i){var len=length?GROWABLE_HEAP_I32()[length+i*4>>2]:-1;source+=UTF8ToString(GROWABLE_HEAP_I32()[string+i*4>>2],len<0?undefined:len)}return source},createContext:function(canvas,webGLContextAttributes){if(!canvas.getContextSafariWebGL2Fixed){canvas.getContextSafariWebGL2Fixed=canvas.getContext;canvas.getContext=function(ver,attrs){var gl=canvas.getContextSafariWebGL2Fixed(ver,attrs);return ver==\"webgl\"==gl instanceof WebGLRenderingContext?gl:null}}var ctx=canvas.getContext(\"webgl\",webGLContextAttributes);if(!ctx)return 0;var handle=GL.registerContext(ctx,webGLContextAttributes);return handle},registerContext:function(ctx,webGLContextAttributes){var handle=_malloc(8);GROWABLE_HEAP_I32()[handle+4>>2]=_pthread_self();var context={handle:handle,attributes:webGLContextAttributes,version:webGLContextAttributes.majorVersion,GLctx:ctx};if(ctx.canvas)ctx.canvas.GLctxObject=context;GL.contexts[handle]=context;if(typeof webGLContextAttributes.enableExtensionsByDefault===\"undefined\"||webGLContextAttributes.enableExtensionsByDefault){GL.initExtensions(context)}return handle},makeContextCurrent:function(contextHandle){GL.currentContext=GL.contexts[contextHandle];Module.ctx=GLctx=GL.currentContext&&GL.currentContext.GLctx;return!(contextHandle&&!GLctx)},getContext:function(contextHandle){return GL.contexts[contextHandle]},deleteContext:function(contextHandle){if(GL.currentContext===GL.contexts[contextHandle])GL.currentContext=null;if(typeof JSEvents===\"object\")JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);if(GL.contexts[contextHandle]&&GL.contexts[contextHandle].GLctx.canvas)GL.contexts[contextHandle].GLctx.canvas.GLctxObject=undefined;_free(GL.contexts[contextHandle].handle);GL.contexts[contextHandle]=null},initExtensions:function(context){if(!context)context=GL.currentContext;if(context.initExtensionsDone)return;context.initExtensionsDone=true;var GLctx=context.GLctx;__webgl_enable_ANGLE_instanced_arrays(GLctx);__webgl_enable_OES_vertex_array_object(GLctx);__webgl_enable_WEBGL_draw_buffers(GLctx);{GLctx.disjointTimerQueryExt=GLctx.getExtension(\"EXT_disjoint_timer_query\")}__webgl_enable_WEBGL_multi_draw(GLctx);var exts=GLctx.getSupportedExtensions()||[];exts.forEach(function(ext){if(!ext.includes(\"lose_context\")&&!ext.includes(\"debug\")){GLctx.getExtension(ext)}})}};var __emscripten_webgl_power_preferences=[\"default\",\"low-power\",\"high-performance\"];function _emscripten_webgl_do_create_context(target,attributes){var a=attributes>>2;var powerPreference=GROWABLE_HEAP_I32()[a+(24>>2)];var contextAttributes={\"alpha\":!!GROWABLE_HEAP_I32()[a+(0>>2)],\"depth\":!!GROWABLE_HEAP_I32()[a+(4>>2)],\"stencil\":!!GROWABLE_HEAP_I32()[a+(8>>2)],\"antialias\":!!GROWABLE_HEAP_I32()[a+(12>>2)],\"premultipliedAlpha\":!!GROWABLE_HEAP_I32()[a+(16>>2)],\"preserveDrawingBuffer\":!!GROWABLE_HEAP_I32()[a+(20>>2)],\"powerPreference\":__emscripten_webgl_power_preferences[powerPreference],\"failIfMajorPerformanceCaveat\":!!GROWABLE_HEAP_I32()[a+(28>>2)],majorVersion:GROWABLE_HEAP_I32()[a+(32>>2)],minorVersion:GROWABLE_HEAP_I32()[a+(36>>2)],enableExtensionsByDefault:GROWABLE_HEAP_I32()[a+(40>>2)],explicitSwapControl:GROWABLE_HEAP_I32()[a+(44>>2)],proxyContextToMainThread:GROWABLE_HEAP_I32()[a+(48>>2)],renderViaOffscreenBackBuffer:GROWABLE_HEAP_I32()[a+(52>>2)]};var canvas=findCanvasEventTarget(target);if(!canvas){return 0}if(contextAttributes.explicitSwapControl){return 0}var contextHandle=GL.createContext(canvas,contextAttributes);return contextHandle}function _emscripten_webgl_create_context(a0,a1){return _emscripten_webgl_do_create_context(a0,a1)}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,fd);return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd,offset_low,offset_high,whence,newOffset)}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_I32()[iov>>2];var len=GROWABLE_HEAP_I32()[iov+4>>2];iov+=8;for(var j=0;j<len;j++){SYSCALLS.printChar(fd,GROWABLE_HEAP_U8()[ptr+j])}num+=len}GROWABLE_HEAP_I32()[pnum>>2]=num;return 0}function _setTempRet0(val){setTempRet0(val)}PThread.init();var GLctx;var proxiedFunctionTable=[null,exitOnMainThread,_emscripten_set_canvas_element_size_main_thread,_fd_close,_fd_seek,_fd_write];var ASSERTIONS=false;var asmLibraryArg={\"__clock_gettime\":___clock_gettime,\"__emscripten_init_main_thread_js\":___emscripten_init_main_thread_js,\"__emscripten_thread_cleanup\":___emscripten_thread_cleanup,\"__pthread_create_js\":___pthread_create_js,\"_emscripten_default_pthread_stack_size\":__emscripten_default_pthread_stack_size,\"_emscripten_notify_thread_queue\":__emscripten_notify_thread_queue,\"abort\":_abort,\"emscripten_check_blocking_allowed\":_emscripten_check_blocking_allowed,\"emscripten_get_heap_max\":_emscripten_get_heap_max,\"emscripten_get_now\":_emscripten_get_now,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_num_logical_cores\":_emscripten_num_logical_cores,\"emscripten_receive_on_main_thread_js\":_emscripten_receive_on_main_thread_js,\"emscripten_resize_heap\":_emscripten_resize_heap,\"emscripten_set_canvas_element_size\":_emscripten_set_canvas_element_size,\"emscripten_unwind_to_js_event_loop\":_emscripten_unwind_to_js_event_loop,\"emscripten_webgl_create_context\":_emscripten_webgl_create_context,\"exit\":_exit,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"memory\":wasmMemory||Module[\"wasmMemory\"],\"setTempRet0\":_setTempRet0};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"init\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"init_with_threads_count\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"get_threads_count\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"register_tensor\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"dispose_data\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"dispose\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"Abs\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"Add\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"AddN\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"All\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"Any\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"ArgMax\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"AvgPool\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"BatchMatMul\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"Ceil\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"ClipByValue\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Conv2D\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Cos\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"Cosh\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"CropAndResize\"]).apply(null,arguments)};var _Cumprod=Module[\"_Cumprod\"]=function(){return(_Cumprod=Module[\"_Cumprod\"]=Module[\"asm\"][\"Cumprod\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Cumsum\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"DepthToSpace\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"Elu\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"Equal\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Exp\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"FlipLeftRight\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Floor\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"FloorDiv\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"FusedBatchNorm\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"FusedConv2D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"Gather\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"GatherNd\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Greater\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"GreaterEqual\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"LeakyRelu\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Less\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"LessEqual\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"Log\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"LogicalAnd\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"Max\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"MaxPool\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Maximum\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"Mean\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Min\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Minimum\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"MirrorPad\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Multiply\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"Neg\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"NotEqual\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"OneHot\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"PadV2\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Pow\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Prelu\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Prod\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"RealDiv\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Relu\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Relu6\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ResizeBilinear\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Reverse\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"RotateWithOffset\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Round\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Rsqrt\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ScatterNd\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"SelectV2\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Sigmoid\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Sin\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Softmax\"]).apply(null,arguments)};var _SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=function(){return(_SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null,arguments)};var _SparseReshape=Module[\"_SparseReshape\"]=function(){return(_SparseReshape=Module[\"_SparseReshape\"]=Module[\"asm\"][\"SparseReshape\"]).apply(null,arguments)};var _SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=function(){return(_SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Sqrt\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Square\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"SquaredDifference\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Step\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"StridedSlice\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Sub\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Sum\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Tan\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Tanh\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Tile\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"TopK\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Transform\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Transpose\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"_FusedMatMul\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var _emscripten_tls_init=Module[\"_emscripten_tls_init\"]=function(){return(_emscripten_tls_init=Module[\"_emscripten_tls_init\"]=Module[\"asm\"][\"emscripten_tls_init\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var _pthread_self=Module[\"_pthread_self\"]=function(){return(_pthread_self=Module[\"_pthread_self\"]=Module[\"asm\"][\"pthread_self\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_main_thread_process_queued_calls\"]).apply(null,arguments)};var __emscripten_thread_crashed=Module[\"__emscripten_thread_crashed\"]=function(){return(__emscripten_thread_crashed=Module[\"__emscripten_thread_crashed\"]=Module[\"asm\"][\"_emscripten_thread_crashed\"]).apply(null,arguments)};var __emscripten_thread_init=Module[\"__emscripten_thread_init\"]=function(){return(__emscripten_thread_init=Module[\"__emscripten_thread_init\"]=Module[\"asm\"][\"_emscripten_thread_init\"]).apply(null,arguments)};var _emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=function(){return(_emscripten_current_thread_process_queued_calls=Module[\"_emscripten_current_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_current_thread_process_queued_calls\"]).apply(null,arguments)};var _emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=function(){return(_emscripten_main_browser_thread_id=Module[\"_emscripten_main_browser_thread_id\"]=Module[\"asm\"][\"emscripten_main_browser_thread_id\"]).apply(null,arguments)};var _emscripten_sync_run_in_main_thread_2=Module[\"_emscripten_sync_run_in_main_thread_2\"]=function(){return(_emscripten_sync_run_in_main_thread_2=Module[\"_emscripten_sync_run_in_main_thread_2\"]=Module[\"asm\"][\"emscripten_sync_run_in_main_thread_2\"]).apply(null,arguments)};var _emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=function(){return(_emscripten_sync_run_in_main_thread_4=Module[\"_emscripten_sync_run_in_main_thread_4\"]=Module[\"asm\"][\"emscripten_sync_run_in_main_thread_4\"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module[\"_emscripten_run_in_main_runtime_thread_js\"]=Module[\"asm\"][\"emscripten_run_in_main_runtime_thread_js\"]).apply(null,arguments)};var _emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=function(){return(_emscripten_dispatch_to_thread_=Module[\"_emscripten_dispatch_to_thread_\"]=Module[\"asm\"][\"emscripten_dispatch_to_thread_\"]).apply(null,arguments)};var __emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=function(){return(__emscripten_thread_free_data=Module[\"__emscripten_thread_free_data\"]=Module[\"asm\"][\"_emscripten_thread_free_data\"]).apply(null,arguments)};var __emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=function(){return(__emscripten_thread_exit=Module[\"__emscripten_thread_exit\"]=Module[\"asm\"][\"_emscripten_thread_exit\"]).apply(null,arguments)};var _memalign=Module[\"_memalign\"]=function(){return(_memalign=Module[\"_memalign\"]=Module[\"asm\"][\"memalign\"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=function(){return(_emscripten_stack_set_limits=Module[\"_emscripten_stack_set_limits\"]=Module[\"asm\"][\"emscripten_stack_set_limits\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};var __emscripten_allow_main_runtime_queued_calls=Module[\"__emscripten_allow_main_runtime_queued_calls\"]=21464;Module[\"cwrap\"]=cwrap;Module[\"keepRuntimeAlive\"]=keepRuntimeAlive;Module[\"PThread\"]=PThread;Module[\"PThread\"]=PThread;Module[\"wasmMemory\"]=wasmMemory;Module[\"ExitStatus\"]=ExitStatus;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();postMessage({\"cmd\":\"loaded\"});return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function exit(status,implicit){EXITSTATUS=status;if(!implicit){if(ENVIRONMENT_IS_PTHREAD){exitOnMainThread(status);throw\"unwind\"}else{}}if(keepRuntimeAlive()){}else{exitRuntime()}procExit(status)}function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){PThread.terminateAllThreads();if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners(\"uncaughtException\").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners(\"unhandledRejection\").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!==\"undefined\"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!==\"undefined\"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error(\"Could not find wasm module in post.js\")}if(listenersAdded){var tmpDispose=actualModule[\"_dispose\"];actualModule[\"_dispose\"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener(\"uncaughtException\",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener(\"unhandledRejection\",listener)})}}\n\n\n  return WasmBackendModuleThreadedSimd.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModuleThreadedSimd;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModuleThreadedSimd; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModuleThreadedSimd\"] = WasmBackendModuleThreadedSimd;\n","\nvar WasmBackendModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(WasmBackendModule) {\n  WasmBackendModule = WasmBackendModule || {};\n\nvar Module=typeof WasmBackendModule!==\"undefined\"?WasmBackendModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!==\"undefined\"&&process.listeners){beforeListeners={uncaughtException:process.listeners(\"uncaughtException\"),unhandledRejection:process.listeners(\"unhandledRejection\")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var setTempRet0=value=>{tempRet0=value};var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(function(type){return type===\"number\"});var numericRet=returnType!==\"string\";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}var ALLOC_STACK=1;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"tfjs-backend-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function _abort(){abort(\"\")}function _emscripten_get_heap_max(){return 2147483648}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=_emscripten_get_heap_max();if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _fd_close(fd){return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov>>2];var len=HEAP32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function _setTempRet0(val){setTempRet0(val)}var ASSERTIONS=false;var asmLibraryArg={\"abort\":_abort,\"emscripten_get_heap_max\":_emscripten_get_heap_max,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap,\"fd_close\":_fd_close,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"setTempRet0\":_setTempRet0};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _init=Module[\"_init\"]=function(){return(_init=Module[\"_init\"]=Module[\"asm\"][\"init\"]).apply(null,arguments)};var _init_with_threads_count=Module[\"_init_with_threads_count\"]=function(){return(_init_with_threads_count=Module[\"_init_with_threads_count\"]=Module[\"asm\"][\"init_with_threads_count\"]).apply(null,arguments)};var _get_threads_count=Module[\"_get_threads_count\"]=function(){return(_get_threads_count=Module[\"_get_threads_count\"]=Module[\"asm\"][\"get_threads_count\"]).apply(null,arguments)};var _register_tensor=Module[\"_register_tensor\"]=function(){return(_register_tensor=Module[\"_register_tensor\"]=Module[\"asm\"][\"register_tensor\"]).apply(null,arguments)};var _dispose_data=Module[\"_dispose_data\"]=function(){return(_dispose_data=Module[\"_dispose_data\"]=Module[\"asm\"][\"dispose_data\"]).apply(null,arguments)};var _dispose=Module[\"_dispose\"]=function(){return(_dispose=Module[\"_dispose\"]=Module[\"asm\"][\"dispose\"]).apply(null,arguments)};var _Abs=Module[\"_Abs\"]=function(){return(_Abs=Module[\"_Abs\"]=Module[\"asm\"][\"Abs\"]).apply(null,arguments)};var _Add=Module[\"_Add\"]=function(){return(_Add=Module[\"_Add\"]=Module[\"asm\"][\"Add\"]).apply(null,arguments)};var _AddN=Module[\"_AddN\"]=function(){return(_AddN=Module[\"_AddN\"]=Module[\"asm\"][\"AddN\"]).apply(null,arguments)};var _All=Module[\"_All\"]=function(){return(_All=Module[\"_All\"]=Module[\"asm\"][\"All\"]).apply(null,arguments)};var _Any=Module[\"_Any\"]=function(){return(_Any=Module[\"_Any\"]=Module[\"asm\"][\"Any\"]).apply(null,arguments)};var _ArgMax=Module[\"_ArgMax\"]=function(){return(_ArgMax=Module[\"_ArgMax\"]=Module[\"asm\"][\"ArgMax\"]).apply(null,arguments)};var _AvgPool=Module[\"_AvgPool\"]=function(){return(_AvgPool=Module[\"_AvgPool\"]=Module[\"asm\"][\"AvgPool\"]).apply(null,arguments)};var _BatchMatMul=Module[\"_BatchMatMul\"]=function(){return(_BatchMatMul=Module[\"_BatchMatMul\"]=Module[\"asm\"][\"BatchMatMul\"]).apply(null,arguments)};var _Ceil=Module[\"_Ceil\"]=function(){return(_Ceil=Module[\"_Ceil\"]=Module[\"asm\"][\"Ceil\"]).apply(null,arguments)};var _ClipByValue=Module[\"_ClipByValue\"]=function(){return(_ClipByValue=Module[\"_ClipByValue\"]=Module[\"asm\"][\"ClipByValue\"]).apply(null,arguments)};var _Conv2D=Module[\"_Conv2D\"]=function(){return(_Conv2D=Module[\"_Conv2D\"]=Module[\"asm\"][\"Conv2D\"]).apply(null,arguments)};var _Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=function(){return(_Conv2DBackpropInput=Module[\"_Conv2DBackpropInput\"]=Module[\"asm\"][\"Conv2DBackpropInput\"]).apply(null,arguments)};var _Cos=Module[\"_Cos\"]=function(){return(_Cos=Module[\"_Cos\"]=Module[\"asm\"][\"Cos\"]).apply(null,arguments)};var _Cosh=Module[\"_Cosh\"]=function(){return(_Cosh=Module[\"_Cosh\"]=Module[\"asm\"][\"Cosh\"]).apply(null,arguments)};var _CropAndResize=Module[\"_CropAndResize\"]=function(){return(_CropAndResize=Module[\"_CropAndResize\"]=Module[\"asm\"][\"CropAndResize\"]).apply(null,arguments)};var _Cumprod=Module[\"_Cumprod\"]=function(){return(_Cumprod=Module[\"_Cumprod\"]=Module[\"asm\"][\"Cumprod\"]).apply(null,arguments)};var _Cumsum=Module[\"_Cumsum\"]=function(){return(_Cumsum=Module[\"_Cumsum\"]=Module[\"asm\"][\"Cumsum\"]).apply(null,arguments)};var _DepthToSpace=Module[\"_DepthToSpace\"]=function(){return(_DepthToSpace=Module[\"_DepthToSpace\"]=Module[\"asm\"][\"DepthToSpace\"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=function(){return(_DepthwiseConv2dNative=Module[\"_DepthwiseConv2dNative\"]=Module[\"asm\"][\"DepthwiseConv2dNative\"]).apply(null,arguments)};var _Elu=Module[\"_Elu\"]=function(){return(_Elu=Module[\"_Elu\"]=Module[\"asm\"][\"Elu\"]).apply(null,arguments)};var _Equal=Module[\"_Equal\"]=function(){return(_Equal=Module[\"_Equal\"]=Module[\"asm\"][\"Equal\"]).apply(null,arguments)};var _Exp=Module[\"_Exp\"]=function(){return(_Exp=Module[\"_Exp\"]=Module[\"asm\"][\"Exp\"]).apply(null,arguments)};var _FlipLeftRight=Module[\"_FlipLeftRight\"]=function(){return(_FlipLeftRight=Module[\"_FlipLeftRight\"]=Module[\"asm\"][\"FlipLeftRight\"]).apply(null,arguments)};var _Floor=Module[\"_Floor\"]=function(){return(_Floor=Module[\"_Floor\"]=Module[\"asm\"][\"Floor\"]).apply(null,arguments)};var _FloorDiv=Module[\"_FloorDiv\"]=function(){return(_FloorDiv=Module[\"_FloorDiv\"]=Module[\"asm\"][\"FloorDiv\"]).apply(null,arguments)};var _FusedBatchNorm=Module[\"_FusedBatchNorm\"]=function(){return(_FusedBatchNorm=Module[\"_FusedBatchNorm\"]=Module[\"asm\"][\"FusedBatchNorm\"]).apply(null,arguments)};var _FusedConv2D=Module[\"_FusedConv2D\"]=function(){return(_FusedConv2D=Module[\"_FusedConv2D\"]=Module[\"asm\"][\"FusedConv2D\"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=function(){return(_FusedDepthwiseConv2D=Module[\"_FusedDepthwiseConv2D\"]=Module[\"asm\"][\"FusedDepthwiseConv2D\"]).apply(null,arguments)};var _Gather=Module[\"_Gather\"]=function(){return(_Gather=Module[\"_Gather\"]=Module[\"asm\"][\"Gather\"]).apply(null,arguments)};var _GatherNd=Module[\"_GatherNd\"]=function(){return(_GatherNd=Module[\"_GatherNd\"]=Module[\"asm\"][\"GatherNd\"]).apply(null,arguments)};var _Greater=Module[\"_Greater\"]=function(){return(_Greater=Module[\"_Greater\"]=Module[\"asm\"][\"Greater\"]).apply(null,arguments)};var _GreaterEqual=Module[\"_GreaterEqual\"]=function(){return(_GreaterEqual=Module[\"_GreaterEqual\"]=Module[\"asm\"][\"GreaterEqual\"]).apply(null,arguments)};var _LeakyRelu=Module[\"_LeakyRelu\"]=function(){return(_LeakyRelu=Module[\"_LeakyRelu\"]=Module[\"asm\"][\"LeakyRelu\"]).apply(null,arguments)};var _Less=Module[\"_Less\"]=function(){return(_Less=Module[\"_Less\"]=Module[\"asm\"][\"Less\"]).apply(null,arguments)};var _LessEqual=Module[\"_LessEqual\"]=function(){return(_LessEqual=Module[\"_LessEqual\"]=Module[\"asm\"][\"LessEqual\"]).apply(null,arguments)};var _Log=Module[\"_Log\"]=function(){return(_Log=Module[\"_Log\"]=Module[\"asm\"][\"Log\"]).apply(null,arguments)};var _LogicalAnd=Module[\"_LogicalAnd\"]=function(){return(_LogicalAnd=Module[\"_LogicalAnd\"]=Module[\"asm\"][\"LogicalAnd\"]).apply(null,arguments)};var _Max=Module[\"_Max\"]=function(){return(_Max=Module[\"_Max\"]=Module[\"asm\"][\"Max\"]).apply(null,arguments)};var _MaxPool=Module[\"_MaxPool\"]=function(){return(_MaxPool=Module[\"_MaxPool\"]=Module[\"asm\"][\"MaxPool\"]).apply(null,arguments)};var _Maximum=Module[\"_Maximum\"]=function(){return(_Maximum=Module[\"_Maximum\"]=Module[\"asm\"][\"Maximum\"]).apply(null,arguments)};var _Mean=Module[\"_Mean\"]=function(){return(_Mean=Module[\"_Mean\"]=Module[\"asm\"][\"Mean\"]).apply(null,arguments)};var _Min=Module[\"_Min\"]=function(){return(_Min=Module[\"_Min\"]=Module[\"asm\"][\"Min\"]).apply(null,arguments)};var _Minimum=Module[\"_Minimum\"]=function(){return(_Minimum=Module[\"_Minimum\"]=Module[\"asm\"][\"Minimum\"]).apply(null,arguments)};var _MirrorPad=Module[\"_MirrorPad\"]=function(){return(_MirrorPad=Module[\"_MirrorPad\"]=Module[\"asm\"][\"MirrorPad\"]).apply(null,arguments)};var _Multiply=Module[\"_Multiply\"]=function(){return(_Multiply=Module[\"_Multiply\"]=Module[\"asm\"][\"Multiply\"]).apply(null,arguments)};var _Neg=Module[\"_Neg\"]=function(){return(_Neg=Module[\"_Neg\"]=Module[\"asm\"][\"Neg\"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=function(){return(_NonMaxSuppressionV3=Module[\"_NonMaxSuppressionV3\"]=Module[\"asm\"][\"NonMaxSuppressionV3\"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=function(){return(_NonMaxSuppressionV4=Module[\"_NonMaxSuppressionV4\"]=Module[\"asm\"][\"NonMaxSuppressionV4\"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=function(){return(_NonMaxSuppressionV5=Module[\"_NonMaxSuppressionV5\"]=Module[\"asm\"][\"NonMaxSuppressionV5\"]).apply(null,arguments)};var _NotEqual=Module[\"_NotEqual\"]=function(){return(_NotEqual=Module[\"_NotEqual\"]=Module[\"asm\"][\"NotEqual\"]).apply(null,arguments)};var _OneHot=Module[\"_OneHot\"]=function(){return(_OneHot=Module[\"_OneHot\"]=Module[\"asm\"][\"OneHot\"]).apply(null,arguments)};var _PadV2=Module[\"_PadV2\"]=function(){return(_PadV2=Module[\"_PadV2\"]=Module[\"asm\"][\"PadV2\"]).apply(null,arguments)};var _Pow=Module[\"_Pow\"]=function(){return(_Pow=Module[\"_Pow\"]=Module[\"asm\"][\"Pow\"]).apply(null,arguments)};var _Prelu=Module[\"_Prelu\"]=function(){return(_Prelu=Module[\"_Prelu\"]=Module[\"asm\"][\"Prelu\"]).apply(null,arguments)};var _Prod=Module[\"_Prod\"]=function(){return(_Prod=Module[\"_Prod\"]=Module[\"asm\"][\"Prod\"]).apply(null,arguments)};var _RealDiv=Module[\"_RealDiv\"]=function(){return(_RealDiv=Module[\"_RealDiv\"]=Module[\"asm\"][\"RealDiv\"]).apply(null,arguments)};var _Relu=Module[\"_Relu\"]=function(){return(_Relu=Module[\"_Relu\"]=Module[\"asm\"][\"Relu\"]).apply(null,arguments)};var _Relu6=Module[\"_Relu6\"]=function(){return(_Relu6=Module[\"_Relu6\"]=Module[\"asm\"][\"Relu6\"]).apply(null,arguments)};var _ResizeBilinear=Module[\"_ResizeBilinear\"]=function(){return(_ResizeBilinear=Module[\"_ResizeBilinear\"]=Module[\"asm\"][\"ResizeBilinear\"]).apply(null,arguments)};var _Reverse=Module[\"_Reverse\"]=function(){return(_Reverse=Module[\"_Reverse\"]=Module[\"asm\"][\"Reverse\"]).apply(null,arguments)};var _RotateWithOffset=Module[\"_RotateWithOffset\"]=function(){return(_RotateWithOffset=Module[\"_RotateWithOffset\"]=Module[\"asm\"][\"RotateWithOffset\"]).apply(null,arguments)};var _Round=Module[\"_Round\"]=function(){return(_Round=Module[\"_Round\"]=Module[\"asm\"][\"Round\"]).apply(null,arguments)};var _Rsqrt=Module[\"_Rsqrt\"]=function(){return(_Rsqrt=Module[\"_Rsqrt\"]=Module[\"asm\"][\"Rsqrt\"]).apply(null,arguments)};var _ScatterNd=Module[\"_ScatterNd\"]=function(){return(_ScatterNd=Module[\"_ScatterNd\"]=Module[\"asm\"][\"ScatterNd\"]).apply(null,arguments)};var _SelectV2=Module[\"_SelectV2\"]=function(){return(_SelectV2=Module[\"_SelectV2\"]=Module[\"asm\"][\"SelectV2\"]).apply(null,arguments)};var _Sigmoid=Module[\"_Sigmoid\"]=function(){return(_Sigmoid=Module[\"_Sigmoid\"]=Module[\"asm\"][\"Sigmoid\"]).apply(null,arguments)};var _Sin=Module[\"_Sin\"]=function(){return(_Sin=Module[\"_Sin\"]=Module[\"asm\"][\"Sin\"]).apply(null,arguments)};var _Softmax=Module[\"_Softmax\"]=function(){return(_Softmax=Module[\"_Softmax\"]=Module[\"asm\"][\"Softmax\"]).apply(null,arguments)};var _SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=function(){return(_SparseFillEmptyRows=Module[\"_SparseFillEmptyRows\"]=Module[\"asm\"][\"SparseFillEmptyRows\"]).apply(null,arguments)};var _SparseReshape=Module[\"_SparseReshape\"]=function(){return(_SparseReshape=Module[\"_SparseReshape\"]=Module[\"asm\"][\"SparseReshape\"]).apply(null,arguments)};var _SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=function(){return(_SparseSegmentReduction=Module[\"_SparseSegmentReduction\"]=Module[\"asm\"][\"SparseSegmentReduction\"]).apply(null,arguments)};var _Sqrt=Module[\"_Sqrt\"]=function(){return(_Sqrt=Module[\"_Sqrt\"]=Module[\"asm\"][\"Sqrt\"]).apply(null,arguments)};var _Square=Module[\"_Square\"]=function(){return(_Square=Module[\"_Square\"]=Module[\"asm\"][\"Square\"]).apply(null,arguments)};var _SquaredDifference=Module[\"_SquaredDifference\"]=function(){return(_SquaredDifference=Module[\"_SquaredDifference\"]=Module[\"asm\"][\"SquaredDifference\"]).apply(null,arguments)};var _Step=Module[\"_Step\"]=function(){return(_Step=Module[\"_Step\"]=Module[\"asm\"][\"Step\"]).apply(null,arguments)};var _StridedSlice=Module[\"_StridedSlice\"]=function(){return(_StridedSlice=Module[\"_StridedSlice\"]=Module[\"asm\"][\"StridedSlice\"]).apply(null,arguments)};var _Sub=Module[\"_Sub\"]=function(){return(_Sub=Module[\"_Sub\"]=Module[\"asm\"][\"Sub\"]).apply(null,arguments)};var _Sum=Module[\"_Sum\"]=function(){return(_Sum=Module[\"_Sum\"]=Module[\"asm\"][\"Sum\"]).apply(null,arguments)};var _Tan=Module[\"_Tan\"]=function(){return(_Tan=Module[\"_Tan\"]=Module[\"asm\"][\"Tan\"]).apply(null,arguments)};var _Tanh=Module[\"_Tanh\"]=function(){return(_Tanh=Module[\"_Tanh\"]=Module[\"asm\"][\"Tanh\"]).apply(null,arguments)};var _Tile=Module[\"_Tile\"]=function(){return(_Tile=Module[\"_Tile\"]=Module[\"asm\"][\"Tile\"]).apply(null,arguments)};var _TopK=Module[\"_TopK\"]=function(){return(_TopK=Module[\"_TopK\"]=Module[\"asm\"][\"TopK\"]).apply(null,arguments)};var _Transform=Module[\"_Transform\"]=function(){return(_Transform=Module[\"_Transform\"]=Module[\"asm\"][\"Transform\"]).apply(null,arguments)};var _Transpose=Module[\"_Transpose\"]=function(){return(_Transpose=Module[\"_Transpose\"]=Module[\"asm\"][\"Transpose\"]).apply(null,arguments)};var __FusedMatMul=Module[\"__FusedMatMul\"]=function(){return(__FusedMatMul=Module[\"__FusedMatMul\"]=Module[\"asm\"][\"_FusedMatMul\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=function(){return(_emscripten_main_thread_process_queued_calls=Module[\"_emscripten_main_thread_process_queued_calls\"]=Module[\"asm\"][\"emscripten_main_thread_process_queued_calls\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=function(){return(dynCall_iijjiiii=Module[\"dynCall_iijjiiii\"]=Module[\"asm\"][\"dynCall_iijjiiii\"]).apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return(dynCall_jiji=Module[\"dynCall_jiji\"]=Module[\"asm\"][\"dynCall_jiji\"]).apply(null,arguments)};Module[\"cwrap\"]=cwrap;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners(\"uncaughtException\").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners(\"unhandledRejection\").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!==\"undefined\"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!==\"undefined\"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error(\"Could not find wasm module in post.js\")}if(listenersAdded){var tmpDispose=actualModule[\"_dispose\"];actualModule[\"_dispose\"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener(\"uncaughtException\",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener(\"unhandledRejection\",listener)})}}\n\n\n  return WasmBackendModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = WasmBackendModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return WasmBackendModule; });\nelse if (typeof exports === 'object')\n  exports[\"WasmBackendModule\"] = WasmBackendModule;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags_wasm';\n\nimport {backend_util, BackendTimingInfo, DataStorage, DataType, deprecationWarn, engine, env, KernelBackend, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {BackendWasmModule, WasmFactoryConfig} from '../wasm-out/tfjs-backend-wasm';\nimport {BackendWasmThreadedSimdModule} from '../wasm-out/tfjs-backend-wasm-threaded-simd';\nimport wasmFactoryThreadedSimd from '../wasm-out/tfjs-backend-wasm-threaded-simd.js';\n// @ts-ignore\nimport {wasmWorkerContents} from '../wasm-out/tfjs-backend-wasm-threaded-simd.worker.js';\nimport wasmFactory from '../wasm-out/tfjs-backend-wasm.js';\n\ninterface TensorData {\n  id: number;\n  memoryOffset: number;\n  shape: number[];\n  dtype: DataType;\n  refCount: number;\n  /** Only used for string tensors, storing encoded bytes. */\n  stringBytes?: Uint8Array[];\n}\n\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\nexport class BackendWasm extends KernelBackend {\n  // 0 is reserved for null data ids.\n  private dataIdNextNumber = 1;\n  dataIdMap: DataStorage<TensorData>;\n\n  constructor(public wasm: BackendWasmModule|BackendWasmThreadedSimdModule) {\n    super();\n    this.wasm.tfjs.initWithThreadsCount(threadsCount);\n    actualThreadsCount = this.wasm.tfjs.getThreadsCount();\n    this.dataIdMap = new DataStorage(this, engine());\n  }\n\n  write(values: backend_util.BackendValues, shape: number[], dtype: DataType):\n      DataId {\n    const dataId = {id: this.dataIdNextNumber++};\n    this.move(dataId, values, shape, dtype, 1);\n    return dataId;\n  }\n\n  numDataIds(): number {\n    return this.dataIdMap.numDataIds();\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = util.now();\n    f();\n    const kernelMs = util.now() - start;\n    return {kernelMs};\n  }\n\n  move(\n      dataId: DataId, values: backend_util.BackendValues, shape: number[],\n      dtype: DataType, refCount: number): void {\n    const id = this.dataIdNextNumber++;\n    if (dtype === 'string') {\n      const stringBytes = values as Uint8Array[];\n      this.dataIdMap.set(\n          dataId,\n          {id, stringBytes, shape, dtype, memoryOffset: null, refCount});\n      return;\n    }\n\n    const size = util.sizeFromShape(shape);\n    const numBytes = size * util.bytesPerElement(dtype);\n    const memoryOffset = this.wasm._malloc(numBytes);\n\n    this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount});\n\n    this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n\n    if (values != null) {\n      this.wasm.HEAPU8.set(\n          new Uint8Array(\n              (values as backend_util.TypedArray).buffer,\n              (values as backend_util.TypedArray).byteOffset, numBytes),\n          memoryOffset);\n    }\n  }\n\n  async read(dataId: DataId): Promise<backend_util.BackendValues> {\n    return this.readSync(dataId);\n  }\n\n  readSync(dataId: DataId, start?: number, end?: number):\n      backend_util.BackendValues {\n    const {memoryOffset, dtype, shape, stringBytes} =\n        this.dataIdMap.get(dataId);\n    if (dtype === 'string') {\n      // Slice all elements.\n      if ((start == null || start === 0) &&\n          (end == null || end >= stringBytes.length)) {\n        return stringBytes;\n      }\n      return stringBytes.slice(start, end);\n    }\n    start = start || 0;\n    end = end || util.sizeFromShape(shape);\n    const bytesPerElement = util.bytesPerElement(dtype);\n    const bytes = this.wasm.HEAPU8.slice(\n        memoryOffset + start * bytesPerElement,\n        memoryOffset + end * bytesPerElement);\n    return typedArrayFromBuffer(bytes.buffer, dtype);\n  }\n\n  /**\n   * Dispose the memory if the dataId has 0 refCount. Return true if the memory\n   * is released, false otherwise.\n   * @param dataId\n   * @oaram force Optional, remove the data regardless of refCount\n   */\n  disposeData(dataId: DataId, force = false): boolean {\n    if (this.dataIdMap.has(dataId)) {\n      const data = this.dataIdMap.get(dataId);\n      data.refCount--;\n      if (!force && data.refCount > 0) {\n        return false;\n      }\n\n      this.wasm._free(data.memoryOffset);\n      this.wasm.tfjs.disposeData(data.id);\n      this.dataIdMap.delete(dataId);\n    }\n    return true;\n  }\n\n  /** Return refCount of a `TensorData`. */\n  refCount(dataId: DataId): number {\n    if (this.dataIdMap.has(dataId)) {\n      const tensorData = this.dataIdMap.get(dataId);\n      return tensorData.refCount;\n    }\n    return 0;\n  }\n\n  incRef(dataId: DataId) {\n    const data = this.dataIdMap.get(dataId);\n    if (data != null) {\n      data.refCount++;\n    }\n  }\n\n  floatPrecision(): 32 {\n    return 32;\n  }\n\n  // Returns the memory offset of a tensor. Useful for debugging and unit\n  // testing.\n  getMemoryOffset(dataId: DataId): number {\n    return this.dataIdMap.get(dataId).memoryOffset;\n  }\n\n  dispose() {\n    this.wasm.tfjs.dispose();\n    if ('PThread' in this.wasm) {\n      this.wasm.PThread.terminateAllThreads();\n    }\n    this.wasm = null;\n  }\n\n  memory() {\n    return {unreliable: false};\n  }\n\n  /**\n   * Make a tensor info for the output of an op. If `memoryOffset` is not\n   * present, this method allocates memory on the WASM heap. If `memoryOffset`\n   * is present, the memory was allocated elsewhere (in c++) and we just record\n   * the pointer where that memory lives.\n   */\n  makeOutput(shape: number[], dtype: DataType, memoryOffset?: number):\n      TensorInfo {\n    let dataId: {};\n    if (memoryOffset == null) {\n      dataId = this.write(null /* values */, shape, dtype);\n    } else {\n      const id = this.dataIdNextNumber++;\n      dataId = {id};\n      this.dataIdMap.set(dataId, {id, memoryOffset, shape, dtype, refCount: 1});\n      const size = util.sizeFromShape(shape);\n      this.wasm.tfjs.registerTensor(id, size, memoryOffset);\n    }\n    return {dataId, shape, dtype};\n  }\n\n  typedArrayFromHeap({shape, dtype, dataId}: TensorInfo):\n      backend_util.TypedArray {\n    const buffer = this.wasm.HEAPU8.buffer;\n    const {memoryOffset} = this.dataIdMap.get(dataId);\n    const size = util.sizeFromShape(shape);\n    switch (dtype) {\n      case 'float32':\n        return new Float32Array(buffer, memoryOffset, size);\n      case 'int32':\n        return new Int32Array(buffer, memoryOffset, size);\n      case 'bool':\n        return new Uint8Array(buffer, memoryOffset, size);\n      default:\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n  }\n}\n\nfunction createInstantiateWasmFunc(path: string) {\n  // this will be replace by rollup plugin patchWechatWebAssembly in\n  // minprogram's output.\n  // tslint:disable-next-line:no-any\n  return (imports: any, callback: any) => {\n    util.fetch(path, {credentials: 'same-origin'}).then((response) => {\n      if (!response['ok']) {\n        imports.env.a(`failed to load wasm binary file at '${path}'`);\n      }\n      response.arrayBuffer().then(binary => {\n        WebAssembly.instantiate(binary, imports).then(output => {\n          callback(output.instance, output.module);\n        });\n      });\n    });\n    return {};\n  };\n}\n\n/**\n * Returns the path of the WASM binary.\n * @param simdSupported whether SIMD is supported\n * @param threadsSupported whether multithreading is supported\n * @param wasmModuleFolder the directory containing the WASM binaries.\n */\nfunction getPathToWasmBinary(\n    simdSupported: boolean, threadsSupported: boolean,\n    wasmModuleFolder: string) {\n  if (wasmPath != null) {\n    // If wasmPath is defined, the user has supplied a full path to\n    // the vanilla .wasm binary.\n    return wasmPath;\n  }\n\n  let path: WasmBinaryName = 'tfjs-backend-wasm.wasm';\n  if (simdSupported && threadsSupported) {\n    path = 'tfjs-backend-wasm-threaded-simd.wasm';\n  } else if (simdSupported) {\n    path = 'tfjs-backend-wasm-simd.wasm';\n  }\n\n  if (wasmFileMap != null) {\n    if (wasmFileMap[path] != null) {\n      return wasmFileMap[path];\n    }\n  }\n\n  return wasmModuleFolder + path;\n}\n\n/**\n * Initializes the wasm module and creates the js <--> wasm bridge.\n *\n * NOTE: We wrap the wasm module in a object with property 'wasm' instead of\n * returning Promise<BackendWasmModule> to avoid freezing Chrome (last tested\n * in Chrome 76).\n */\nexport async function init(): Promise<{wasm: BackendWasmModule}> {\n  const [simdSupported, threadsSupported] = await Promise.all([\n    env().getAsync('WASM_HAS_SIMD_SUPPORT'),\n    env().getAsync('WASM_HAS_MULTITHREAD_SUPPORT')\n  ]);\n\n  return new Promise((resolve, reject) => {\n    const factoryConfig: WasmFactoryConfig = {};\n\n    /**\n     * This function overrides the Emscripten module locateFile utility.\n     * @param path The relative path to the file that needs to be loaded.\n     * @param prefix The path to the main JavaScript file's directory.\n     */\n    factoryConfig.locateFile = (path, prefix) => {\n      if (path.endsWith('.worker.js')) {\n        // Escape '\\n' because Blob will turn it into a newline.\n        // There should be a setting for this, but 'endings: \"native\"' does\n        // not seem to work.\n        const response = (wasmWorkerContents as string).replace(/\\n/g, '\\\\n');\n        const blob = new Blob([response], {type: 'application/javascript'});\n        return URL.createObjectURL(blob);\n      }\n\n      if (path.endsWith('.wasm')) {\n        return getPathToWasmBinary(\n            simdSupported as boolean, threadsSupported as boolean,\n            wasmPathPrefix != null ? wasmPathPrefix : prefix);\n      }\n      return prefix + path;\n    };\n\n    // Use the instantiateWasm override when system fetch is not available.\n    // Reference:\n    // https://github.com/emscripten-core/emscripten/blob/2bca083cbbd5a4133db61fbd74d04f7feecfa907/tests/manual_wasm_instantiate.html#L170\n    if (customFetch) {\n      factoryConfig.instantiateWasm =\n          createInstantiateWasmFunc(getPathToWasmBinary(\n              simdSupported as boolean, threadsSupported as boolean,\n              wasmPathPrefix != null ? wasmPathPrefix : ''));\n    }\n\n    let initialized = false;\n    factoryConfig.onAbort = () => {\n      if (initialized) {\n        // Emscripten already called console.warn so no need to double log.\n        return;\n      }\n      if (initAborted) {\n        // Emscripten calls `onAbort` twice, resulting in double error\n        // messages.\n        return;\n      }\n      initAborted = true;\n      const rejectMsg =\n          'Make sure the server can serve the `.wasm` file relative to the ' +\n          'bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers';\n      reject({message: rejectMsg});\n    };\n\n    let wasm: Promise<BackendWasmModule>;\n    // If `wasmPath` has been defined we must initialize the vanilla module.\n    if (threadsSupported && simdSupported && wasmPath == null) {\n      factoryConfig.mainScriptUrlOrBlob = new Blob(\n          [`var WasmBackendModuleThreadedSimd = ` +\n           wasmFactoryThreadedSimd.toString()],\n          {type: 'text/javascript'});\n      wasm = wasmFactoryThreadedSimd(factoryConfig);\n    } else {\n      // The wasmFactory works for both vanilla and SIMD binaries.\n      wasm = wasmFactory(factoryConfig);\n    }\n\n    // The WASM module has been successfully created by the factory.\n    // Any error will be caught by the onAbort callback defined above.\n    wasm.then((module) => {\n      initialized = true;\n      initAborted = false;\n\n      const voidReturnType: string = null;\n      // Using the tfjs namespace to avoid conflict with emscripten's API.\n      module.tfjs = {\n        init: module.cwrap('init', null, []),\n        initWithThreadsCount:\n            module.cwrap('init_with_threads_count', null, ['number']),\n        getThreadsCount: module.cwrap('get_threads_count', 'number', []),\n        registerTensor: module.cwrap(\n            'register_tensor', null,\n            [\n              'number',  // id\n              'number',  // size\n              'number',  // memoryOffset\n            ]),\n        disposeData: module.cwrap('dispose_data', voidReturnType, ['number']),\n        dispose: module.cwrap('dispose', voidReturnType, []),\n      };\n\n      resolve({wasm: module});\n    });\n  });\n}\n\nfunction typedArrayFromBuffer(\n    buffer: ArrayBuffer, dtype: DataType): backend_util.TypedArray {\n  switch (dtype) {\n    case 'float32':\n      return new Float32Array(buffer);\n    case 'int32':\n      return new Int32Array(buffer);\n    case 'bool':\n      return new Uint8Array(buffer);\n    default:\n      throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\nconst wasmBinaryNames = [\n  'tfjs-backend-wasm.wasm', 'tfjs-backend-wasm-simd.wasm',\n  'tfjs-backend-wasm-threaded-simd.wasm'\n] as const ;\ntype WasmBinaryName = typeof wasmBinaryNames[number];\n\nlet wasmPath: string = null;\nlet wasmPathPrefix: string = null;\nlet wasmFileMap: {[key in WasmBinaryName]?: string} = {};\nlet initAborted = false;\nlet customFetch = false;\n\n/**\n * @deprecated Use `setWasmPaths` instead.\n * Sets the path to the `.wasm` file which will be fetched when the wasm\n * backend is initialized. See\n * https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers\n * for more details.\n * @param path wasm file path or url\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPath(path: string, usePlatformFetch = false): void {\n  deprecationWarn(\n      'setWasmPath has been deprecated in favor of setWasmPaths and' +\n      ' will be removed in a future release.');\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`');\n  }\n  wasmPath = path;\n  customFetch = usePlatformFetch;\n}\n\n/**\n * Configures the locations of the WASM binaries.\n *\n * ```js\n * setWasmPaths({\n *  'tfjs-backend-wasm.wasm': 'renamed.wasm',\n *  'tfjs-backend-wasm-simd.wasm': 'renamed-simd.wasm',\n *  'tfjs-backend-wasm-threaded-simd.wasm': 'renamed-threaded-simd.wasm'\n * });\n * tf.setBackend('wasm');\n * ```\n *\n * @param prefixOrFileMap This can be either a string or object:\n *  - (string) The path to the directory where the WASM binaries are located.\n *     Note that this prefix will be used to load each binary (vanilla,\n *     SIMD-enabled, threading-enabled, etc.).\n *  - (object) Mapping from names of WASM binaries to custom\n *     full paths specifying the locations of those binaries. This is useful if\n *     your WASM binaries are not all located in the same directory, or if your\n *     WASM binaries have been renamed.\n * @param usePlatformFetch optional boolean to use platform fetch to download\n *     the wasm file, default to false.\n *\n * @doc {heading: 'Environment', namespace: 'wasm'}\n */\nexport function setWasmPaths(\n    prefixOrFileMap: string|{[key in WasmBinaryName]?: string},\n    usePlatformFetch = false): void {\n  if (initAborted) {\n    throw new Error(\n        'The WASM backend was already initialized. Make sure you call ' +\n        '`setWasmPaths()` before you call `tf.setBackend()` or ' +\n        '`tf.ready()`');\n  }\n\n  if (typeof prefixOrFileMap === 'string') {\n    wasmPathPrefix = prefixOrFileMap;\n  } else {\n    wasmFileMap = prefixOrFileMap;\n    const missingPaths =\n        wasmBinaryNames.filter(name => wasmFileMap[name] == null);\n    if (missingPaths.length > 0) {\n      throw new Error(\n          `There were no entries found for the following binaries: ` +\n          `${missingPaths.join(',')}. Please either call setWasmPaths with a ` +\n          `map providing a path for each binary, or with a string indicating ` +\n          `the directory where all the binaries can be found.`);\n    }\n  }\n\n  customFetch = usePlatformFetch;\n}\n\n/** Used in unit tests. */\nexport function resetWasmPath(): void {\n  wasmPath = null;\n  wasmPathPrefix = null;\n  wasmFileMap = {};\n  customFetch = false;\n  initAborted = false;\n}\n\nlet threadsCount = -1;\nlet actualThreadsCount = -1;\n\n/**\n * Sets the number of threads that will be used by XNNPACK to create\n * threadpool (default to the number of logical CPU cores).\n *\n * This must be called before calling `tf.setBackend('wasm')`.\n */\nexport function setThreadsCount(numThreads: number) {\n  threadsCount = numThreads;\n}\n\n/**\n * Gets the actual threads count that is used by XNNPACK.\n *\n * It is set after the backend is intialized.\n */\nexport function getThreadsCount(): number {\n  if (actualThreadsCount === -1) {\n    throw new Error(`WASM backend not initialized.`);\n  }\n  return actualThreadsCount;\n}\n","export const wasmWorkerContents = '\"use strict\";var Module={};var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require(\"worker_threads\");var parentPort=nodeWorkerThreads.parentPort;parentPort.on(\"message\",function(data){onmessage({data:data})});var fs=require(\"fs\");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,\"utf8\"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(\" \");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+\"\\n\");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(\" \");postMessage({cmd:\"alert\",text:text,threadId:Module[\"_pthread_self\"]()})}var err=threadPrintErr;self.alert=threadAlert;Module[\"instantiateWasm\"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module[\"wasmModule\"],info);receiveInstance(instance);Module[\"wasmModule\"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd===\"load\"){Module[\"wasmModule\"]=e.data.wasmModule;Module[\"wasmMemory\"]=e.data.wasmMemory;Module[\"buffer\"]=Module[\"wasmMemory\"].buffer;Module[\"ENVIRONMENT_IS_PTHREAD\"]=true;if(typeof e.data.urlOrBlob===\"string\"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd===\"run\"){Module[\"__performance_now_clock_drift\"]=performance.now()-e.data.time;Module[\"__emscripten_thread_init\"](e.data.threadInfoStruct,0,0,1);Module[\"establishStackSpace\"]();Module[\"PThread\"].receiveObjectTransfer(e.data);Module[\"PThread\"].threadInit();try{var result=Module[\"invokeEntryPoint\"](e.data.start_routine,e.data.arg);if(Module[\"keepRuntimeAlive\"]()){Module[\"PThread\"].setExitStatus(result)}else{Module[\"__emscripten_thread_exit\"](result)}}catch(ex){if(ex!=\"unwind\"){if(ex instanceof Module[\"ExitStatus\"]){if(Module[\"keepRuntimeAlive\"]()){}else{Module[\"__emscripten_thread_exit\"](ex.status)}}else{throw ex}}}}else if(e.data.cmd===\"cancel\"){if(Module[\"_pthread_self\"]()){Module[\"__emscripten_thread_exit\"](-1)}}else if(e.data.target===\"setimmediate\"){}else if(e.data.cmd===\"processThreadQueue\"){if(Module[\"_pthread_self\"]()){Module[\"_emscripten_current_thread_process_queued_calls\"]()}}else if(e.data.cmd===\"processProxyingQueue\"){if(Module[\"_pthread_self\"]()){Module[\"_emscripten_proxy_execute_queue\"](e.data.queue)}}else{err(\"worker.js received unknown command \"+e.data.cmd);err(e.data)}}catch(ex){err(\"worker.js onmessage() captured an uncaught exception: \"+ex);if(ex&&ex.stack)err(ex.stack);if(Module[\"__emscripten_thread_crashed\"]){Module[\"__emscripten_thread_crashed\"]()}throw ex}});';","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport './flags_wasm';\n\nimport {registerBackend} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm, init} from './backend_wasm';\n\nexport {BackendWasm, getThreadsCount, setThreadsCount, setWasmPath, setWasmPaths} from './backend_wasm';\nexport {version as version_wasm} from './version';\n\nconst WASM_PRIORITY = 2;\nregisterBackend('wasm', async () => {\n  const {wasm} = await init();\n  return new BackendWasm(wasm);\n}, WASM_PRIORITY);\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '3.18.0';\nexport {version};\n"],"names":["CppDType","FusableActivation","wasmFusedMatMul","_fusedMatMulConfig","kernelName","_FusedMatMul","backendName","setupFunc","backend","wasm","cwrap","kernelFunc","args","inputs","attrs","a","b","bias","preluActivationWeights","dtype","Error","transposeA","transposeB","activation","leakyreluAlpha","aId","dataIdMap","get","dataId","id","bId","biasId","biasData","shape","length","preluActivationWeightsId","fusedActivation","leftDim","rightDim","batchDims","broadcast_util","assertAndGetBroadcastShape","slice","out","makeOutput","outId","aShapeBytes","Uint8Array","Int32Array","buffer","bShapeBytes","createUnaryKernelConfig","outType","wasmFunc","x","xId","util","sizeFromShape","absConfig","Abs","createBinaryKernelConfig","supportsFullBroadcast","outputType","newShape","backend_util","addConfig","Add","addNConfig","AddN","inputIds","map","inputIdsBytes","identity","inVals","typedArrayFromHeap","set","identityConfig","Identity","wasmTranspose","transpose","reducedShape","perm","newPerm","i","push","minValIdx","j","removeOneSizeDims","permIsNoOp","outShape","inShape","Array","computeOutShape","cloned","permBytes","xShapeBytes","transposeConfig","Transpose","permuteAxesAndTranspose","axis","xShape","xRank","originalAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","xTransposed","inputWasTransposed","getInnerMostAxes","transposed","wasmAll","allConfig","All","keepDims","inputId","input","inputRank","assertAxesAreInnerMostDims","reduceShape","computeOutAndReduceShapes","reduceSize","disposeData","expandShapeToKeepDim","wasmAny","anyConfig","Any","argMaxConfig","ArgMax","transposedId","outerSize","innerSize","wasmAvgPool","avgPoolConfig","AvgPool","filterSize","strides","pad","dimRoundingMode","convInfo","computePool2DInfo","filterHeight","filterWidth","padTop","padInfo","top","padRight","right","padBottom","bottom","padLeft","left","strideHeight","strideWidth","channels","inChannels","dataFormat","dilationWidth","dilationHeight","reshape","xSize","$shape","inferFromImplicitShape","assert","incRef","reshapeConfig","Reshape","wasmBatchMatMul","batchMatMulConfig","BatchMatMul","aRank","bRank","innerShapeA","innerShapeB","outerShapeA","outerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","concat","b3dShape","a3d","b3d","a3dId","b3dId","batchDim","Math","max","sliceImpl","vals","begin","size","isContinous","slice_util","isSliceContinous","xStrides","computeStrides","flatOffset","computeFlatOffset","subarray","decodedData","fromUint8ToStringArray","inBuf","outBuf","outLoc","indexToLoc","inLoc","idx","fromStringArrayToUint8","values","begin_","size_","parseSliceParams","xVals","readSync","outData","stringBytes","res","sliceImplCPU","outVals","rank","xStride","outOffset","beginI","beginJ","endI","xOffset","slice2d","xStride1","xStride2","beginK","endJ","slice3d","xStride3","endK","beginL","k","slice4d","sliceConfig","Slice","batchToSpaceNDConfig","BatchToSpaceND","blockShape","crops","prod","reduce","reshaped","getReshaped","permuted","getPermuted","reshapedPermuted","getReshapedPermuted","sliceBeginCoords","getSliceBeginCoords","sliceSize","getSliceSize","xReshaped","result","cast","castConfig","Cast","ceilConfig","Ceil","wasmClip","clipByValueConfig","ClipByValue","clipValueMin","clipValueMax","t","$inputs","filter","shapes","assertParamsConsistent","inputs2D","inputsValShapes","simplyConcat","getArrayFromDType","offset","forEach","colOffset","tIdx","row","resIdx","col","concatImplCPU","finalOutShape","sumInnerDims","innerDims","innerDim","inOffset","concatConfig","Concat","wasmConv2d","conv2DConfig","Conv2D","filterId","dilations","$dataFormat","convertConv2DDataFormat","computeConv2DInfo","inputChannels","outputChannels","outChannels","isSamePad","type","wasmConv2DBackpropInput","conv2DBackpropInputConfig","Conv2DBackpropInput","dy","inputShape","batchSize","inHeight","inWidth","outHeight","outWidth","topPad","leftPad","isChannelsLast","dxStrides","dyStrides","fltS0","fltS1","fltS2","xBatchStride","xRowStride","xColStride","xChannelStride","yBatchStride","yRowStride","yColStride","yChannelStride","dyId","cosConfig","Cos","coshConfig","Cosh","InterpolationMethod","wasmCropAndResize","cropAndResizeConfig","CropAndResize","method","extrapolationValue","cropSize","image","boxes","boxInd","numBoxes","cropHeight","cropWidth","castedData","imagesData","imagesId","boxesId","boxIndId","imagesShapeBytes","wasmCumprod","cumprodConfig","Cumprod","exclusive","reverse","permutation","permutedX","permutedAxis","permutedOut","finalDim","permutedXId","permutedOutId","getUndoAxesPermutation","wasmCumsum","cumsumConfig","Cumsum","wasmDepthToSpace","depthToSpaceConfig","DepthToSpace","blockSize","outputHeight","outputWidth","outputDepth","outputShape","xStridesBytes","outputShapeBytes","outStridesBytes","wasmDepthwiseConv2d","depthwiseConv2dNativeConfig","DepthwiseConv2dNative","$dilations","eluConfig","Elu","equalConfig","Equal","expConfig","Exp","expandDims","dim","$dim","splice","expandDimsConfig","ExpandDims","fill","value","fillConfig","Fill","wasmFlipLeftRight","flipLeftRightConfig","FlipLeftRight","imageId","batch","imageHeight","imageWidth","numChannels","floorConfig","Floor","floorDivConfig","FloorDiv","wasmBatchNorm","fusedBatchNormConfig","FusedBatchNorm","varianceEpsilon","mean","variance","scale","meanId","varianceId","offsetId","scaleId","wasmFusedConv2d","fusedConv2DConfig","FusedConv2D","wasmFusedDepthwiseConv2d","fusedDepthwiseConv2DConfig","FusedDepthwiseConv2D","wasmGatherNd","gatherNdConfig","GatherNd","params","indices","resultShape","numSlices","gather_util","prepareAndValidate","indicesShape","sliceRank","indicesId","stridesBytes","wasmGather","gatherV2Config","GatherV2","parsedAxis","indicesVals","axisDim","index","shapeInfo","segment_util","collectGatherOpShapeInfo","flattenX","dimSize","indicesSize","flattenIndex","flattenOutputShape","stridesSize","greaterConfig","Greater","greaterEqualConfig","GreaterEqual","leakyReluConfig","LeakyRelu","alpha","lessConfig","Less","lessEqualConfig","LessEqual","logConfig","Log","logicalAndConfig","LogicalAnd","wasmMax","maxConfig","Max","reductionIndices","maximumConfig","Maximum","wasmMaxPool","maxPoolConfig","MaxPool","wasmMean","meanConfig","Mean","reductionAxes","castedInput","wasmMin","minConfig","Min","minimumConfig","Minimum","MirrorPaddingMode","wasmMirrorPad","mirrorPadConfig","MirrorPad","paddings","mode","p","prePaddingsFlat","padTuple","postPaddingsFlat","prePaddingsBytes","postPaddingsBytes","multiplyConfig","Multiply","negConfig","Neg","parseResultStruct","resOffset","HEAPU8","pSelectedIndices","selectedSize","pSelectedScores","pValidOutputs","_free","nonMaxSuppressionV3Config","NonMaxSuppressionV3","iouThreshold","maxOutputSize","scoreThreshold","scores","scoresId","nonMaxSuppressionV4Config","NonMaxSuppressionV4","padToMaxOutputSize","nonMaxSuppressionV5Config","NonMaxSuppressionV5","softNmsSigma","notEqualConfig","NotEqual","wasmOneHot","oneHotConfig","OneHot","depth","onValue","offValue","onesLikeConfig","OnesLike","packConfig","Pack","assertShapesMatch","intermediateTensorInfos","expandedT","wasmPadV2","padV2Config","PadV2","constantValue","powConfig","Pow","wasmPrelu","preluConfig","Prelu","weightsId","wasmProd","prodConfig","Prod","rangeConfig","Range","start","stop","step","makeZerosTypedArray","numElements","abs","ceil","rangeImplCPU","realDivConfig","RealDiv","reluConfig","Relu","relu6Config","Relu6","wasmResizeBilinear","resizeBilinearConfig","ResizeBilinear","images","alignCorners","halfPixelCenters","newHeight","newWidth","oldHeight","oldWidth","xData","wasmReverse","reverseConfig","Reverse","dims","axesBytes","outShapeBytes","wasmRotate","rotateWithOffsetConfig","RotateWithOffset","radians","fillValue","center","centerX","centerY","getImageCenter","fillValues","fillBytes","roundConfig","Round","rsqrtConfig","Rsqrt","wasmScatterNd","scatterNdConfig","ScatterNd","updates","numUpdates","outputSize","scatter_util","calculateShapes","updatesId","wasmSelect","selectConfig","Select","condition","e","conditionId","tId","eId","cRank","tRank","sigmoidConfig","Sigmoid","sinConfig","Sin","softmaxConfig","Softmax","logits","spaceToBatchNDConfig","SpaceToBatchND","completePaddings","paddedX","reshapedPaddedShape","permutedReshapedPaddedPermutation","flattenShape","paddedXReshaped","paddedXT","wasmSparseFillEmptyRows","sparseFillEmptyRowsConfig","SparseFillEmptyRows","denseShape","defaultValue","indicesCount","denseRows","maxOutputIndicesShape","valuesId","defaultValueId","outputIndices","outputIndicesId","outputValues","outputValuesId","emptyRowIndicator","emptyRowIndicatorId","reverseIndexMap","reverseIndexMapId","exceptionValues","exceptionValuesId","outputRows","exceptionValuesArray","exceptionMessage","getSparseFillEmptyRowsIndicesDenseShapeMismatch","getSparseFillEmptyRowsNegativeIndexErrorMessage","getSparseFillEmptyRowsOutOfRangeIndexErrorMessage","resizedIndices","resizedValues","wasmSparseReshape","sparseReshapeConfig","SparseReshape","inputIndices","inputIndicesId","inputShapeId","newShapeId","nnz","outputRank","newIndices","newIndicesId","outputShapeId","getSparseReshapeMultipleNegativeOneOutputDimErrorMessage","getSparseReshapeNegativeOutputDimErrorMessage","getSparseReshapeEmptyTensorZeroOutputDimErrorMessage","inputShapeValues","from","outputShapeValues","getSparseReshapeInputOutputMultipleErrorMessage","getSparseReshapeInputOutputMismatchErrorMessage","wasmSparseSegmentReduction","setup","sparseSegmentReduction","isMean","data","segmentIds","numIndices","segmentIdsBack","getSparseSegmentReductionNegativeSegmentIdsErrorMessage","segmentIdsId","output","outputId","getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage","getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage","getSparseSegmentReductionIndicesOutOfRangeErrorMessage","sparseSegmentMeanConfig","SparseSegmentMean","sparseSegmentSumConfig","SparseSegmentSum","splitVConfig","SplitV","numOrSizeSplits","$axis","splitSizes","prepareSplitSize","s","xSliceSize","xSlice","sqrtConfig","Sqrt","squareConfig","Square","squaredDifferenceConfig","SquaredDifference","wasmStep","stepConfig","Step","wasmStridedSlice","stridedSliceConfig","StridedSlice","end","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","finalShapeSparse","finalShape","isIdentity","sliceDim0","isSimpleSlice","$begin","$end","$strides","sliceInfo","sliced","beginBytes","endBytes","subConfig","Sub","wasmSum","sumConfig","Sum","tanConfig","Tan","tanhConfig","Tanh","wasmTile","tileConfig","Tile","reps","newShapeBytes","wasmTopK","topKConfig","TopK","sorted","outValues","outValuesId","outIndices","outIndicesId","wasmTransform","transformConfig","Transform","transforms","interpolation","fillMode","transformsId","interpolationModeId","fillModeId","unpackConfig","Unpack","numOutputs","outIndex","outs","zerosLikeConfig","ZerosLike","kernelConfigs","kernelConfig","registerKernel","ENV","env","registerFlag","async","WebAssembly","validate","MessageChannel","port1","postMessage","SharedArrayBuffer","_scriptDir","WasmBackendModuleThreadedSimd","document","currentScript","src","undefined","__filename","GROWABLE_HEAP_I8","wasmMemory","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","beforeListeners","Module","Promise","resolve","reject","process","listeners","uncaughtException","unhandledRejection","read_","readAsync","readBinary","fs","nodePath","requireNodeFS","moduleOverrides","Object","assign","quit_","status","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","versions","node","ENVIRONMENT_IS_PTHREAD","scriptDirectory","locateFile","path","nodeWorkerThreads","require$$0","dirname","__dirname","require$$1","filename","binary","readFileSync","ret","onload","onerror","readFile","err","replace","ex","ExitStatus","reason","keepRuntimeAlive","require$$2","console","error","global","Worker","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","performance","require$$3","defaultPrint","log","bind","defaultPrintErr","warn","str","writeSync","wasmBinary","warnOnce","text","shown","wasmModule","noExitRuntime","abort","EXITSTATUS","ABORT","getCFunc","ident","ccall","returnType","argTypes","opts","toC","string","len","stringToUTF8","stackAlloc","array","arr","writeArrayToMemory","func","cArgs","stack","converter","stackSave","apply","stackRestore","UTF8ToString","Boolean","convertReturnValue","onDone","TextDecoderWrapper","encoding","textDecoder","TextDecoder","this","decode","call","UTF8Decoder","UTF8ArrayToString","heap","maxBytesToRead","endIdx","endPtr","u0","u1","u2","String","fromCharCode","ch","ptr","outPtr","maxBytesToWrite","outIdx","startIdx","u","charCodeAt","stringToUTF8Array","buf","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","initial","maximum","shared","byteLength","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","initRuntime","callRuntimeCallbacks","wasmBinaryFile","runDependencies","dependenciesFulfilled","what","cmd","arg","RuntimeError","isDataURI","startsWith","isFileURI","getBinary","file","ASM_CONSTS","callbacks","callback","shift","getWasmTableEntry","withStackSave","f","cleanupThread","pthread_ptr","pthread","PThread","pthreads","worker","returnWorkerToPool","_exit","implicit","exitOnMainThread","code","terminateAllThreads","exit","unusedWorkers","runningWorkers","tlsInitFunctions","init","initWorker","initMainThread","allocateUnusedWorker","setExitStatus","terminate","runWithoutMainThreadQueuedCalls","threadInfoStruct","__emscripten_thread_free_data","__emscripten_allow_main_runtime_queued_calls","receiveObjectTransfer","threadInit","loadWasmModuleToWorker","onFinishedLoading","onmessage","d","currentProxiedOperationCallerThread","_pthread_self","thread","targetThread","_emscripten_main_thread_process_queued_calls","spawnThread","killThread","loaded","runPthread","alert","target","message","lineno","on","urlOrBlob","pthreadMainJs","getNewWorker","pop","returnCode","_emscripten_proxy_to_main_thread_js","handleException","stackTop","stackSize","_emscripten_stack_set_limits","_emscripten_get_now","wasmTableMirror","funcPtr","_clock_gettime","clk_id","tp","now","Date","___errno_location","threadParams","msg","start_routine","startRoutine","time","transferList","_emscripten_get_heap_max","sync","numCallArgs","arguments","outerArgs","serializedNumCallArgs","_emscripten_run_in_main_runtime_thread_js","_emscripten_receive_on_main_thread_js_callArgs","emscripten_realloc_buffer","grow","JSEvents","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","sort","y","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","allowsDeferredCalls","runDeferredCalls","removeAllHandlersOnTarget","eventTypeString","h","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","event","handlerFunc","callbackfunc","addEventListener","queueEventHandlerOnThread_iiii","eventHandlerFunc","eventTypeId","eventData","userData","varargs","_emscripten_dispatch_to_thread_","getTargetThreadForEventCallback","getNodeNameForTarget","screen","nodeName","fullscreenEnabled","webkitFullscreenEnabled","_emscripten_set_offscreencanvas_size_on_target_thread_js","targetCanvas","width","height","jsString","cString","targetCanvasPtr","lengthBytesUTF8","_malloc","specialHTMLTargets","findEventTarget","querySelector","findCanvasEventTarget","_emscripten_set_canvas_element_size_calling_thread","canvas","canvasSharedPtr","offscreenCanvas","controlTransferredOffscreen","_emscripten_set_offscreencanvas_size_on_target_thread","autoResizeViewport","GLctxObject","GLctx","prevViewport","getParameter","viewport","_emscripten_set_canvas_element_size_main_thread","GL","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","vaos","contexts","offscreenCanvases","queries","stringCache","unpackAlignment","recordError","errorCode","lastError","getNewId","table","getSource","shader","count","source","createContext","webGLContextAttributes","getContextSafariWebGL2Fixed","getContext","ver","gl","WebGLRenderingContext","ctx","registerContext","handle","context","attributes","version","majorVersion","enableExtensionsByDefault","initExtensions","makeContextCurrent","contextHandle","currentContext","deleteContext","initExtensionsDone","ext","getExtension","divisor","first","primcount","__webgl_enable_ANGLE_instanced_arrays","vao","__webgl_enable_OES_vertex_array_object","n","bufs","__webgl_enable_WEBGL_draw_buffers","disjointTimerQueryExt","multiDrawWebgl","getSupportedExtensions","includes","__emscripten_webgl_power_preferences","SYSCALLS","mappings","printChar","stream","curr","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","num","calledRun","listenersAdded","actualModule","proxiedFunctionTable","asmLibraryArg","__clock_gettime","a0","a1","__emscripten_init_main_thread_js","tb","__emscripten_thread_init","__emscripten_thread_cleanup","__pthread_create_js","attr","_emscripten_sync_run_in_main_thread_4","_emscripten_default_pthread_stack_size","_emscripten_notify_thread_queue","targetThreadId","mainThreadId","emscripten_check_blocking_allowed","emscripten_get_heap_max","emscripten_get_now","emscripten_memcpy_big","dest","copyWithin","emscripten_num_logical_cores","require$$4","cpus","navigator","emscripten_receive_on_main_thread_js","emscripten_resize_heap","requestedSize","oldSize","multiple","maxHeapSize","cutDown","overGrownHeapSize","min","emscripten_set_canvas_element_size","emscripten_unwind_to_js_event_loop","emscripten_webgl_create_context","powerPreference","contextAttributes","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","minorVersion","explicitSwapControl","proxyContextToMainThread","renderViaOffscreenBackBuffer","fd_close","fd_seek","fd_write","memory","setTempRet0","val","info","wasi_snapshot_preview1","receiveInstance","instance","module","tlsInitFunc","cb","exports","unshift","numWorkersToLoad","w","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","then","catch","getBinaryPromise","instantiate","instantiateStreaming","createWasm","name","run","preRun","setTimeout","doRun","postRun","numericArgs","every","runCaller","listener","WasmBackendModule","tmpDispose","removeListener","ready","BackendWasm","KernelBackend","[object Object]","super","tfjs","initWithThreadsCount","threadsCount","actualThreadsCount","getThreadsCount","DataStorage","engine","dataIdNextNumber","move","numDataIds","kernelMs","refCount","memoryOffset","numBytes","bytesPerElement","registerTensor","byteOffset","typedArrayFromBuffer","force","has","delete","dispose","unreliable","write","getPathToWasmBinary","simdSupported","threadsSupported","wasmModuleFolder","wasmPath","wasmFileMap","all","getAsync","factoryConfig","prefix","endsWith","blob","Blob","URL","createObjectURL","wasmPathPrefix","customFetch","instantiateWasm","imports","arrayBuffer","createInstantiateWasmFunc","initialized","onAbort","initAborted","mainScriptUrlOrBlob","wasmFactoryThreadedSimd","toString","wasmFactory","wasmBinaryNames","numThreads","usePlatformFetch","deprecationWarn","prefixOrFileMap","missingPaths","join"],"mappings":"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AAOC,QAAQyC,EAACA,GAAE9C,QAAEA,GAAWI,EACzB+B,EAAMnC,EAAQoC,WAAWU,EAAErB,MAAOqB,EAAEnC,OAG1C,OAFgBX,EAAQkE,mBAAmB/B,GACnCoW,KAAK,GACNpW,ICkGHwuB,GAAgC,CACpChxB,EACAuD,EACAO,EACAE,EACA6C,EACAa,EACAE,EACAM,EACAmC,EACAyE,EACAmB,EACAE,EACAG,EACA0B,EACAG,EACAa,EACA0B,EACAE,EACAI,GACAkB,GACAa,GACAG,GACAW,GACAG,GACAE,GACAE,GACAM,GACAI,GACAG,GACAO,GACAE,GACAG,GACAW,GACAG,GACAG,GACAa,GACAe,GACAE,GACAnY,EACAqY,GACAG,GACAE,GACAE,GACAE,GACAG,GACAG,GACAG,GACAG,GACAK,GACAE,GACAI,GACAU,GACAE,GACAU,GACAO,GACAG,GACAG,GACAG,GACAK,GACAE,GACAM,GACAG,GACAG,GACAI,GACAE,GACAU,GACAE,GACAE,GACAzZ,EACA4Z,GACAW,GACAM,GACAU,GACAE,GACAG,GACAS,GACAS,GACAE,GACAtY,EACAwY,GACAG,GACAU,GACA4B,GACAkC,GACAE,GACAE,GACAS,GACAE,GACAE,GACAG,GACAG,GACAoB,GACAG,GACAE,GACAE,GACAG,GACAK,GACAQ,GACApqB,EACA4qB,GACAK,IAGF,IAAK,MAAMG,KAAgBD,GACzBE,iBAAeD,GClNjB,MAAME,GAAMC,QAMZD,GAAIE,aAIA,yBAAyBC,SAAYC,YAAYC,SAAS,IAAI5uB,WAAW,CACvE,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAI,EAAG,EAAK,GAAI,EAAI,EAAG,EACpD,EAAG,EAAI,EAAK,GAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,QAOvDuuB,GAAIE,aAAa,gCAAgCC,UAG/C,GAAIH,GAAI3vB,IAAI,WACV,OAAO,EAGT,IAME,OAHA,IAAIiwB,gBAAiBC,MAAMC,YAAY,IAAIC,kBAAkB,IAGtDL,YAAYC,SAAS,IAAI5uB,WAAW,CACzC,EAAG,GA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"}